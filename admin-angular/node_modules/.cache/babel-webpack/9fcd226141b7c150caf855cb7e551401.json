{"ast":null,"code":"import { PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../../theme/default/admin/shared/components/services/permission.services\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router, permissionServices, platformId) {\n      this.router = router;\n      this.permissionServices = permissionServices;\n      this.platformId = platformId;\n    }\n\n    canActivate(route, state) {\n      return this.checkLogin(state.url, route.data['permission'], route.data['permissionForHeader'], route.data['root']);\n    } // CheckLogin\n\n\n    checkLogin(url, rolePermission = '', headerPermission = '', rootModule = '') {\n      console.log('url', url);\n      console.log('role', rolePermission);\n      console.log('head', headerPermission);\n      let permission = this.permissionServices.getPermissionConfig();\n      let currentUser;\n      console.log('permission', permission);\n\n      if (isPlatformBrowser(this.platformId)) {\n        currentUser = JSON.parse(sessionStorage.getItem('adminUserdetail'));\n      }\n\n      if (currentUser) {\n        if (url === '/auth/login' || url === '/auth/forgot-password') {\n          // Navigate to the login page with extras\n          this.router.navigate(['/dashboard']);\n          return false;\n        }\n\n        if (rolePermission && rolePermission !== '') {\n          if (this.permissionServices.hasPermission(rolePermission)) {\n            return true;\n          } else {\n            this.router.navigate(['/dashboard']);\n            return false;\n          }\n        } // default route set based on permission slug\n\n\n        if (headerPermission && headerPermission !== '') {\n          if (this.permissionServices.hasPermission(headerPermission)) {\n            return true;\n          } else {\n            if (permission) {\n              if (rootModule === 'catalog') {\n                const found = permission.catalog.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'sales') {\n                const found = permission.sales.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'customer') {\n                const found = permission.customer.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'cms') {\n                const found = permission.cms.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'reports') {\n                const found = permission.reports.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'marketplace') {\n                const found = permission.marketplace.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'settingsSite') {\n                const found = permission.settingsSite.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              } else if (rootModule === 'settingsLocal') {\n                const found = permission.settingsLocal.find(data => {\n                  return data.permission;\n                });\n\n                if (found) {\n                  this.router.navigate([found.url]);\n                } else {\n                  this.router.navigate(['/dashboard']);\n                }\n\n                return false;\n              }\n\n              return true;\n            }\n          }\n        }\n\n        return true;\n      } else {\n        if (url === '/auth/login' || url === '/auth/forgot-password') {\n          return true;\n        }\n      } // Navigate to the login page with extras\n\n\n      this.router.navigate(['/auth/login']);\n      return false;\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.PermissionServices), i0.ɵɵinject(PLATFORM_ID));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { getNewStock, getStockDelete, getStockList, getstockListCount, getstockUpdate, StockStatusAddFailed, StockStatusAddLoaded, StockStatusAddLoading, StockStatusCountFailed, StockStatusCountLoaded, StockStatusCountLoading, StockStatusDeleteFailed, StockStatusDeleteLoaded, StockStatusDeleteLoading, StockStatusListFailed, StockStatusListLoaded, StockStatusListLoading, StockStatusUpdateFailed, StockStatusUpdateLoaded, StockStatusUpdateLoading } from './stock-reducer/stock.selector';\nimport * as stockactions from './stock-action/stock.action';\nimport { StockListForm } from './stock-model/stockstatuslist.model';\nimport { StockStatusModel } from './stock-model/stockstatus.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let StockSandbox = /*#__PURE__*/(() => {\n  class StockSandbox {\n    constructor(appState) {\n      this.appState = appState;\n      this.getStockList$ = this.appState.select(getStockList);\n      this.getNewStock$ = this.appState.select(getNewStock);\n      this.getStockListCount$ = this.appState.select(getstockListCount);\n      this.getstockUpdate$ = this.appState.select(getstockUpdate);\n      this.getStockDelete$ = this.appState.select(getStockDelete);\n      this.stockStatusListLoading$ = this.appState.select(StockStatusListLoading);\n      this.stockStatusListLoaded$ = this.appState.select(StockStatusListLoaded);\n      this.stockStatusListFailed$ = this.appState.select(StockStatusListFailed);\n      this.stockStatusDeleteLoading$ = this.appState.select(StockStatusDeleteLoading);\n      this.stockStatusDeleteLoaded$ = this.appState.select(StockStatusDeleteLoaded);\n      this.stockStatusDeleteFailed$ = this.appState.select(StockStatusDeleteFailed);\n      this.stockStatusCountLoading$ = this.appState.select(StockStatusCountLoading);\n      this.stockStatusCountLoaded$ = this.appState.select(StockStatusCountLoaded);\n      this.stockStatusCountFailed$ = this.appState.select(StockStatusCountFailed);\n      this.stockStatusAddLoading$ = this.appState.select(StockStatusAddLoading);\n      this.stockStatusAddLoaded$ = this.appState.select(StockStatusAddLoaded);\n      this.stockStatusAddFailed$ = this.appState.select(StockStatusAddFailed);\n      this.stockStatusUpdateLoading$ = this.appState.select(StockStatusUpdateLoading);\n      this.stockStatusUpdateLoaded$ = this.appState.select(StockStatusUpdateLoaded);\n      this.stockStatusUpdateFailed$ = this.appState.select(StockStatusUpdateFailed);\n      this.subscriptions = [];\n    }\n\n    stockStatusList(value) {\n      this.appState.dispatch(new stockactions.DoStockListAction(new StockListForm(value)));\n    }\n\n    addStock(value) {\n      this.appState.dispatch(new stockactions.DoAddStockAction(new StockStatusModel(value)));\n    }\n\n    updateStock(value) {\n      this.appState.dispatch(new stockactions.DoStockUpdate(new StockStatusModel(value)));\n    }\n\n    paginationStockStatusCount(value) {\n      this.appState.dispatch(new stockactions.DoStockCount(new StockListForm(value)));\n    }\n\n    deleteStockStatus(value) {\n      this.appState.dispatch(new stockactions.DoStockDelete(value));\n    }\n\n  }\n\n  StockSandbox.ɵfac = function StockSandbox_Factory(t) {\n    return new (t || StockSandbox)(i0.ɵɵinject(i1.Store));\n  };\n\n  StockSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StockSandbox,\n    factory: StockSandbox.ɵfac\n  });\n  return StockSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
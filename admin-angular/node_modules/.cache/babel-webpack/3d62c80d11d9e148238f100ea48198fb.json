{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { Api } from '../../providers/api/api';\nimport * as i0 from \"@angular/core\";\nexport let BannerService = /*#__PURE__*/(() => {\n  class BannerService extends Api {\n    constructor() {\n      super(...arguments);\n      this.params = {};\n      this.url = this.getBaseUrl();\n    } // banner edit service\n\n\n    setBannerListData(data) {\n      this.bannerEditdata = data;\n    }\n\n    getbannerListdata() {\n      return this.bannerEditdata;\n    } // list\n\n\n    bannerList(params) {\n      let reqOpts = {};\n      reqOpts = params;\n      return this.http.get(this.url + '/banner/bannerList', {\n        params: reqOpts\n      });\n    } //  Pagination\n\n\n    bannerPagiantion(params) {\n      let reqOpts = {};\n      reqOpts = params;\n      return this.http.get(this.url + '/banner/bannerlist', {\n        params: reqOpts\n      });\n    } // Update\n\n\n    updateBanner(param, Id) {\n      return this.http.put(this.url + '/banner/update-banner/' + Id, param);\n    } // add\n\n\n    addBanner(param) {\n      return this.http.post(this.url + '/banner/add-banner', param);\n    } // delete\n\n\n    deleteBanner(param, Id) {\n      return this.http.delete(this.url + '/banner/delete-banner/' + Id, param);\n    }\n    /**\n     * Handles 'bannerBulkDelete' function. Calls post method with specific api address\n     * along its param.\n     *\n     * @param param from Model\n     */\n\n\n    bannerBulkDelete(param) {\n      return this.http.post(this.url + '/banner/delete-banner', param);\n    } // banner count\n\n\n    bannerCount() {\n      return this.http.get(this.url + '/banner/banner-count');\n    } // banner details\n\n\n    bannerDetails(params) {\n      return this.http.get(this.url + '/banner/banner-detail', {\n        params: params\n      });\n    }\n\n    exportBanner(params) {\n      const reqOpts = {};\n      reqOpts.responseType = 'arraybuffer';\n\n      if (params) {\n        reqOpts.params = new HttpParams();\n\n        for (const k in params) {\n          if (k) {\n            reqOpts.params = reqOpts.params.set(k, params[k]);\n          }\n        }\n      }\n\n      return this.http.get(this.url + '/banner/banner-excel-list', reqOpts);\n    }\n    /*category List*/\n\n\n    categoryLists(params) {\n      return this.http.get(this.url + '/categorylist', {\n        params: params\n      });\n    }\n    /*Product List*/\n\n\n    ProductLists(params) {\n      return this.http.get(this.url + '/widget/productlist', {\n        params: params\n      });\n    }\n\n  }\n\n  BannerService.ɵfac = /*@__PURE__*/function () {\n    let ɵBannerService_BaseFactory;\n    return function BannerService_Factory(t) {\n      return (ɵBannerService_BaseFactory || (ɵBannerService_BaseFactory = i0.ɵɵgetInheritedFactory(BannerService)))(t || BannerService);\n    };\n  }();\n\n  BannerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BannerService,\n    factory: BannerService.ɵfac\n  });\n  return BannerService;\n})();","map":null,"metadata":{},"sourceType":"module"}
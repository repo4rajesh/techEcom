{"ast":null,"code":"import * as customerAction from './customer-action/customers.action';\nimport { getDetailLoaded, getDetailLoading, customerList, customerListCount, addCustomer, deleteCustomer, updateCustomer, addAddressAdd, addAddressList, addressListCount, addAddressUpdate, deleteAddAddress, detailCustomer, viewCustomerProduct, viewCustomerProductLoading, viewCustomerProductLoaded, viewCustomerProductCount, viewCustomerProductCountLoading, viewCustomerProductCountLoaded, viewOrderProduct, viewOrderProductLoading, viewOrderProductLoaded, viewOrderProductCount, viewOrderProductCountLoading, viewOrderProductCountLoaded } from './customer-reducer/customer.selector';\nimport { CustomerForm } from './customer-model/customerform.model';\nimport { CustomerListForm } from './customer-model/customerlistform.model';\nimport { AddAddressListForm } from './customer-model/addAddresslistform.model';\nimport { AddAddressForm } from './customer-model/addAddressform.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng6-toastr-notifications\";\nexport let CustomerSandbox = /*#__PURE__*/(() => {\n  class CustomerSandbox {\n    constructor(appState, router, toastr) {\n      this.appState = appState;\n      this.router = router;\n      this.toastr = toastr;\n      this.subscriptions = [];\n      /*customer*/\n\n      this.customerList$ = this.appState.select(customerList);\n      this.addCustomer$ = this.appState.select(addCustomer);\n      this.updateCustomer$ = this.appState.select(updateCustomer);\n      this.deleteCustomer$ = this.appState.select(deleteCustomer);\n      this.customerListCount$ = this.appState.select(customerListCount);\n      /* address*/\n\n      this.addAddressList$ = this.appState.select(addAddressList);\n      this.addAddressAdd$ = this.appState.select(addAddressAdd);\n      this.addAddressUpdate$ = this.appState.select(addAddressUpdate);\n      this.deleteAddAddress$ = this.appState.select(deleteAddAddress);\n      this.addressListCount$ = this.appState.select(addressListCount);\n      this.getDetailCustomer$ = this.appState.select(detailCustomer);\n      this.getDetailLoading$ = this.appState.select(getDetailLoading);\n      this.getDetailLoaded$ = this.appState.select(getDetailLoaded);\n      this.viewCustomerProductLoaded$ = this.appState.select(viewCustomerProductLoaded);\n      this.viewCustomerProductLoading$ = this.appState.select(viewCustomerProductLoading);\n      this.viewCustomerProduct$ = this.appState.select(viewCustomerProduct);\n      this.viewCustomerProductCountLoaded$ = this.appState.select(viewCustomerProductCountLoaded);\n      this.viewCustomerProductCountLoading$ = this.appState.select(viewCustomerProductCountLoading);\n      this.viewCustomerProductCount$ = this.appState.select(viewCustomerProductCount);\n      this.viewOrderProductLoaded$ = this.appState.select(viewOrderProductLoaded);\n      this.viewOrderProductLoading$ = this.appState.select(viewOrderProductLoading);\n      this.viewOrderProduct$ = this.appState.select(viewOrderProduct);\n      this.viewOrderProductCountLoaded$ = this.appState.select(viewOrderProductCountLoaded);\n      this.viewOrderProductCountLoading$ = this.appState.select(viewOrderProductCountLoading);\n      this.viewOrderProductCount$ = this.appState.select(viewOrderProductCount);\n    }\n\n    customerList(value) {\n      this.appState.dispatch(new customerAction.DoCustomersListAction(new CustomerListForm(value)));\n    }\n\n    paginationCustomer(value) {\n      this.appState.dispatch(new customerAction.DoPaginationCustomersListAction(new CustomerListForm(value)));\n    }\n\n    addCustomers(value) {\n      this.appState.dispatch(new customerAction.DoAddCustomersListAction(new CustomerForm(value)));\n    }\n\n    updateCustomers(value) {\n      this.appState.dispatch(new customerAction.DoUpdateCustomerAction(new CustomerForm(value)));\n    }\n\n    deleteCustomers(value) {\n      this.appState.dispatch(new customerAction.DoDeleteCustomerAction(value));\n    } // Add Address\n\n\n    addAddressList(value) {\n      this.appState.dispatch(new customerAction.DoAddAddressListAction(new AddAddressListForm(value)));\n    }\n\n    addAddresspagination(value) {\n      this.appState.dispatch(new customerAction.DoAddAddressPaginationtAction(new AddAddressListForm(value)));\n    } // Add Address Add\n\n\n    addAddressAdd(value) {\n      this.appState.dispatch(new customerAction.DoAddAddressAddAction(new AddAddressForm(value)));\n    }\n\n    updateAddressAdd(value) {\n      this.appState.dispatch(new customerAction.DoAddAddressUpdateAction(new AddAddressForm(value)));\n    }\n\n    deleteAddressAdd(value) {\n      this.appState.dispatch(new customerAction.DoDeleteAddAddressAction(value));\n    }\n\n    viewCustomerDetail(value) {\n      this.appState.dispatch(new customerAction.DoCustomerDetailAction(value));\n    } // Do Customer Bulk Delete\n\n\n    bulkDelete(value) {\n      this.appState.dispatch(new customerAction.DoCustomerBulkDelete(value));\n    } // Do Customer Excel\n\n\n    customerExcel(value) {\n      this.appState.dispatch(new customerAction.DoCustomerExcel(value));\n    } // Do Customer All Excel\n\n\n    customerAllExcel(value) {\n      this.appState.dispatch(new customerAction.DoCustomerAllExcel(value));\n    }\n\n    viewCustomerProduct(value) {\n      this.appState.dispatch(new customerAction.ViewCustomerProduct(value));\n    }\n\n    viewCustomerProductCount(value) {\n      this.appState.dispatch(new customerAction.ViewCustomerProductCount(value));\n    }\n\n    viewOrderProduct(value) {\n      this.appState.dispatch(new customerAction.ViewOrderProduct(value));\n    }\n\n    viewOrderProductCount(value) {\n      this.appState.dispatch(new customerAction.ViewOrderProductCount(value));\n    }\n\n  }\n\n  CustomerSandbox.ɵfac = function CustomerSandbox_Factory(t) {\n    return new (t || CustomerSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrManager));\n  };\n\n  CustomerSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomerSandbox,\n    factory: CustomerSandbox.ɵfac\n  });\n  return CustomerSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
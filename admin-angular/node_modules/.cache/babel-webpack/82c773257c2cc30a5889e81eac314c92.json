{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../../../core/admin/settings/localizations/orderstatus/orderstatus.sandbox\";\nimport * as i3 from \"../../../../../../../core/admin/settings/personalize/order/order-sandbox\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ng-select/ng-select\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@ngx-translate/core\";\n\nfunction PersonalizeOrderComponent_ng_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const orderStatuslist_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", orderStatuslist_r1.orderStatusId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(orderStatuslist_r1.name);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nconst _c1 = function () {\n  return [\"/settings\"];\n};\n\nexport let PersonalizeOrderComponent = /*#__PURE__*/(() => {\n  class PersonalizeOrderComponent {\n    constructor(fb, orderStatusSandbox, sandbox) {\n      this.fb = fb;\n      this.orderStatusSandbox = orderStatusSandbox;\n      this.sandbox = sandbox;\n      this.submitted = false;\n      this.subscriptions = [];\n      this.keyword = '';\n      this.pageSize = 5;\n    }\n\n    get f() {\n      return this.perOrderForm.controls;\n    }\n    /**\n     * Handles form 'ngOnInit' event. Calls InitForm , Bind Forms Value - navigation function here.\n     *\n     */\n\n\n    ngOnInit() {\n      this.initForm();\n      this.getPersonalizeOrder();\n      this.getOrderStatusList(this.offset, this.keyword);\n      this.subscribe();\n    }\n\n    beforeChange($event) {\n      if ($event.panelId === 'preventchange-2') {\n        $event.preventDefault();\n      }\n\n      if ($event.panelId === 'preventchange-3' && $event.nextState === false) {\n        $event.preventDefault();\n      }\n    }\n\n    initForm() {\n      this.perOrderForm = this.fb.group({\n        invoicePrefix: [null, [Validators.required]],\n        orderStatus: [null, [Validators.required]]\n      });\n    }\n    /**\n     * Handles form 'submit' event. Calls sandbox CreatePersonalizeOrder function if form is valid.\n     *\n     * @param perOrderForm entire form value\n     * @param para storing entire value\n     */\n\n\n    onSubmit() {\n      this.submitted = true;\n\n      if (this.perOrderForm.invalid) {\n        return;\n      }\n\n      const para = {};\n      para.orderStatus = this.perOrderForm.value.orderStatus;\n      para.invoicePrefix = this.perOrderForm.value.invoicePrefix;\n      this.sandbox.createPersonalizeOrder(para);\n    }\n    /**\n     * Handles form 'list' event. Calls sandbox ProductInfo  function .\n     *\n     */\n\n\n    getPersonalizeOrder() {\n      this.sandbox.getPersonalizeOrder();\n    }\n\n    subscribe() {\n      this.subscriptions.push(this.sandbox.getPersonalizeOrder$.subscribe(data => {\n        if (data && data[0]) {\n          this.perOrderForm.controls['invoicePrefix'].setValue(data[0].invoicePrefix);\n          this.perOrderForm.controls['orderStatus'].setValue(data[0].orderStatus);\n        }\n      }));\n    }\n    /**\n     * Handles form 'list' event. Calls sandbox OrderStatus List function .\n     *\n     * @param params storing entire value\n     */\n\n\n    getOrderStatusList(offset = 0, keyword) {\n      const params = {};\n      params.limit = this.pageSize;\n      params.offset = offset;\n      params.keyword = this.keyword;\n      this.orderStatusSandbox.orderStatusList(params);\n    }\n\n  }\n\n  PersonalizeOrderComponent.ɵfac = function PersonalizeOrderComponent_Factory(t) {\n    return new (t || PersonalizeOrderComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.OrderstatusSandbox), i0.ɵɵdirectiveInject(i3.PersonalizeOrderSandbox));\n  };\n\n  PersonalizeOrderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PersonalizeOrderComponent,\n    selectors: [[\"app-settings-countries\"]],\n    decls: 40,\n    vars: 28,\n    consts: [[1, \"set-lay-notes\", \"flex\", 2, \"padding\", \"0 10px 10px 10px\"], [1, \"setup-wrapper\", \"setup-personalize\"], [1, \"setup-container\", \"flex\"], [1, \"setup-left\"], [1, \"setup-right\"], [1, \"form-horizontal\", \"m-t-20\", 2, \"margin\", \"0\", 3, \"formGroup\"], [1, \"sup-rht-section\"], [1, \"suprs-form\"], [1, \"suprs-form-row\", \"flex\"], [1, \"suprs-form-col\"], [\"type\", \"text\", \"formControlName\", \"invoicePrefix\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"orderStatus\", 3, \"placeholder\", \"searchable\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"flex\", \"srbtn\"], [1, \"cancel\", 3, \"routerLink\"], [3, \"click\"], [3, \"value\"]],\n    template: function PersonalizeOrderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h4\");\n        i0.ɵɵtext(2, \"Note :\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p\");\n        i0.ɵɵtext(4, \"The admin can configure the number of orders per page in this section What is required here?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 1);\n        i0.ɵɵelementStart(6, \"div\", 2);\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"p\");\n        i0.ɵɵtext(12, \"The admin can provide the invoice prefix that will follow the order number here. This will be the common prefix for all the order numbers. The admin can also set up the default order status once it is placed by the Customer.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵelementStart(14, \"form\", 5);\n        i0.ɵɵelementStart(15, \"div\", 6);\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelementStart(17, \"div\", 8);\n        i0.ɵɵelementStart(18, \"label\");\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 9);\n        i0.ɵɵelement(22, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 7);\n        i0.ɵɵelementStart(24, \"div\", 8);\n        i0.ɵɵelementStart(25, \"label\");\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 9);\n        i0.ɵɵelementStart(29, \"ng-select\", 11);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵtemplate(31, PersonalizeOrderComponent_ng_option_31_Template, 2, 2, \"ng-option\", 12);\n        i0.ɵɵpipe(32, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 13);\n        i0.ɵɵelementStart(34, \"button\", 14);\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function PersonalizeOrderComponent_Template_button_click_37_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵtext(38);\n        i0.ɵɵpipe(39, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 11, \"Settings.personalize.order.Order\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.perOrderForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(20, 13, \"Settings.personalize.order.InvoicePrefix\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx.submitted && ctx.f.invoicePrefix.errors));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(27, 15, \"Settings.personalize.order.OrderStatus\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(30, 17, \"Settings.personalize.order.ChooseOrderStatus\"));\n        i0.ɵɵproperty(\"searchable\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(32, 19, ctx.orderStatusSandbox.getOrderstatuslist$));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(27, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 21, \"Settings.personalize.order.Cancel\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 23, \"Settings.Local.Save\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i5.NgSelectComponent, i4.NgForOf, i6.RouterLink, i5.ɵr],\n    pipes: [i7.TranslatePipe, i4.AsyncPipe],\n    styles: [\".mat-radio-outer-circle[_ngcontent-%COMP%]{left:-3px!important;margin-top:-3px!important;width:19px!important}.settings-right-wrapper[_ngcontent-%COMP%]{margin-top:0!important}.coc[_ngcontent-%COMP%]{background:#f20a6d;border:solid thin #dddddd;color:#fff;padding:4px 16px}\"]\n  });\n  return PersonalizeOrderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { Api } from '../../providers/api/api';\nimport * as i0 from \"@angular/core\";\nexport let OrdersService = /*#__PURE__*/(() => {\n  class OrdersService extends Api {\n    constructor() {\n      super(...arguments);\n      this.params = {};\n      this.url = this.getBaseUrl();\n    }\n\n    getorderlistCount(params) {\n      return this.http.get(this.url + '/order/order-count-for-list', {\n        params: params\n      });\n    }\n    /*SALES --ORDER GET LIST*/\n\n\n    getorderlist(params) {\n      return this.http.get(this.url + '/order/orderlist', {\n        params: params\n      });\n    }\n    /*SALES --GET ORDER DETAIL*/\n\n\n    getorderDetail(params) {\n      return this.http.get(this.url + '/order/order-detail', {\n        params: params\n      });\n    }\n\n    getorderDelete(params) {\n      if (params.orderId[1]) {\n        return this.multipleOrdersDelete(params);\n      } else {\n        return this.singleOrdersDelete(params);\n      }\n    } // sales order single delete\n\n\n    singleOrdersDelete(params) {\n      return this.http.delete(this.url + '/order/delete-order/' + params.orderId);\n    } // sales order multiple delete\n\n\n    multipleOrdersDelete(params) {\n      return this.http.post(this.url + '/order/delete-order', params);\n    }\n    /*change-order-status*/\n\n\n    changeOrderStatus(param) {\n      return this.http.post(this.url + '/order/order-change-status', param);\n    }\n    /*SALES --GET SETTINGS*/\n\n\n    getsettings() {\n      return this.http.get(this.url + '/settings/get-settings');\n    }\n    /**\n     * Handles 'OrderExcel' function. Calls put method with specific api address\n     * along its param.\n     *\n     * @param params from model\n     */\n\n\n    orderExcel(params) {\n      const reqOpts = {};\n      reqOpts.responseType = 'arraybuffer';\n\n      if (params) {\n        reqOpts.params = new HttpParams();\n\n        for (const k in params) {\n          if (k) {\n            reqOpts.params = reqOpts.params.set(k, params[k]);\n          }\n        }\n      }\n\n      return this.http.get(this.url + '/order/order-excel-list/', reqOpts);\n    }\n\n    getOrderLog(params) {\n      return this.http.get(this.url + '/order/order-product-log-list', {\n        params\n      });\n    }\n\n    downloadInvoice(params) {\n      return this.http.get(this.url + '/order/order-export-pdf', {\n        params: params\n      });\n    }\n\n  }\n\n  OrdersService.ɵfac = /*@__PURE__*/function () {\n    let ɵOrdersService_BaseFactory;\n    return function OrdersService_Factory(t) {\n      return (ɵOrdersService_BaseFactory || (ɵOrdersService_BaseFactory = i0.ɵɵgetInheritedFactory(OrdersService)))(t || OrdersService);\n    };\n  }();\n\n  OrdersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdersService,\n    factory: OrdersService.ɵfac\n  });\n  return OrdersService;\n})();","map":null,"metadata":{},"sourceType":"module"}
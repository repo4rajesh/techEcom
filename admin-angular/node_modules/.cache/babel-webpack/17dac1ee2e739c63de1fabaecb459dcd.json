{"ast":null,"code":"import { Validators, FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../core/admin/auth/auth.sandbox\";\nimport * as i3 from \"../../../../../core/admin/layout/layout.sandbox\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@ngx-translate/core\";\n\nfunction LoginComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.Usernamerequired\"), \" \");\n  }\n}\n\nfunction LoginComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.Incorrectemail\"), \" \");\n  }\n}\n\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.Passwordrequired\"), \" \");\n  }\n}\n\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.UsernameorPasswordisincorrect\"), \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    validationcolor: a0\n  };\n};\n\nconst _c1 = function () {\n  return [\"/auth/forgot-password\"];\n};\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, authSandbox, layoutSandbox) {\n      this.fb = fb;\n      this.authSandbox = authSandbox;\n      this.layoutSandbox = layoutSandbox;\n      this.emailPattern = '[a-zA-Z0-9.-_\\-\\._]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n      this.ifSubmitted = false;\n      this.badResponse = false;\n      this.subscriptions = [];\n    }\n\n    ngOnInit() {\n      this.loginForm = this.fb.group({\n        userName: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n        password: ['', Validators.required]\n      });\n    } // validation for forget password\n\n\n    validateAllFormFields(formGroup) {\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field);\n\n        if (control instanceof FormControl) {\n          control.markAsTouched({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup) {\n          this.validateAllFormFields(control);\n        }\n      });\n    }\n    /**\n     * Handles form 'submit' event. Calls sandbox login function if form is valid.\n     *\n     * @param event form event\n     * @param form entire form value\n     */\n\n\n    onSubmit(form) {\n      this.ifSubmitted = true;\n\n      if (!this.loginForm.valid) {\n        this.validateAllFormFields(this.loginForm);\n        return;\n      }\n\n      const param = {};\n      param.userName = this.loginForm.value.userName;\n      param.password = this.loginForm.value.password;\n      this.authSandbox.authLogin(param);\n      this.subscriptions.push(this.authSandbox.loginLoaded$.subscribe(data => {\n        if (data === true) {\n          const user = JSON.parse(sessionStorage.getItem('adminUser'));\n          this.layoutSandbox.getUserDetail(user);\n        } else {\n          this.loginForm.reset();\n        }\n      }));\n    }\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(each => each.unsubscribe());\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthSandbox), i0.ɵɵdirectiveInject(i3.LayoutSandbox));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-spurt-login\"]],\n    decls: 20,\n    vars: 22,\n    consts: [[1, \"card-align\"], [1, \"cards\"], [\"autocomplete\", \"off\", 3, \"formGroup\", \"ngSubmit\"], [1, \"admin\"], [1, \"log-group\", \"first\"], [\"type\", \"text\", \"placeholder\", \"User Name\", \"formControlName\", \"userName\", 1, \"form-control\", \"placeholder-fix\", 3, \"ngClass\"], [\"class\", \"validation-error\", 4, \"ngIf\"], [1, \"log-group\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", 1, \"form-control\", \"placeholder-fix\", 3, \"ngClass\"], [1, \"btn\", \"btn-log\"], [1, \"forgot\", 3, \"routerLink\"], [1, \"validation-error\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.onSubmit(ctx.loginForm.value);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"input\", 5);\n        i0.ɵɵtemplate(8, LoginComponent_div_8_Template, 3, 3, \"div\", 6);\n        i0.ɵɵtemplate(9, LoginComponent_div_9_Template, 3, 3, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 3, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 3, \"div\", 6);\n        i0.ɵɵelementStart(14, \"button\", 9);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 10);\n        i0.ɵɵtext(18);\n        i0.ɵɵpipe(19, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 11, \"Profile.Login.AdminLogin\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.loginForm.get(\"userName\").hasError(\"required\") && ctx.loginForm.get(\"userName\").touched && ctx.ifSubmitted == true || ctx.badResponse == true));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"userName\").hasError(\"required\") && ctx.loginForm.get(\"userName\").touched && ctx.ifSubmitted == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"userName\").hasError(\"pattern\") && ctx.loginForm.get(\"userName\").touched && ctx.ifSubmitted == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c0, ctx.loginForm.get(\"password\").hasError(\"required\") && ctx.loginForm.get(\"password\").touched && ctx.ifSubmitted == true || ctx.badResponse == true));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.loginForm.get(\"password\").hasError(\"required\") && ctx.loginForm.get(\"password\").touched && ctx.ifSubmitted == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.badResponse == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 13, \"Profile.Login.login\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(21, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(19, 15, \"Profile.Login.Error.Cantlogin?\"), \" \");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i4.NgIf, i5.RouterLink],\n    pipes: [i6.TranslatePipe],\n    styles: [\".validationcolor[_ngcontent-%COMP%]{border-color:red}.error[_ngcontent-%COMP%]{color:red}.first[_ngcontent-%COMP%]{margin-bottom:20px}.form-control[_ngcontent-%COMP%]{font-family:\\\"Poppins\\\",sans-serif;font-size:14px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.53px;color:#000!important;height:53px;border-radius:2px;border:solid 1px #d6d6d6;background-color:#fff}.card-align[_ngcontent-%COMP%]{margin-top:15%}.cards[_ngcontent-%COMP%]{box-shadow:0 2px 10px #00000026;background-color:#fff;width:70%;margin:auto;padding:3% 5%}.cards[_ngcontent-%COMP%]   .admin[_ngcontent-%COMP%]{font-family:\\\"Poppins\\\",sans-serif;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#264151;margin-bottom:7%}.cards[_ngcontent-%COMP%]   .btn-log[_ngcontent-%COMP%]{height:53px;background-color:#264151;font-family:\\\"Poppins\\\",sans-serif;font-size:18px;font-weight:500;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#fff;width:100%;margin:5% 0% 3%}.cards[_ngcontent-%COMP%]   .forgot[_ngcontent-%COMP%]{font-family:Roboto;cursor:pointer;font-size:14px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#514c4c;text-decoration:underline;text-align:right;margin:3% 0% 5%}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// actions\nimport * as productActions from './product-action/product.action';\nimport { // product add selectors\ngetProductAdd, ProductAddFailed, ProductAddLoaded, ProductAddLoading, // product count selectors\ngetProductCount, ProductCountFailed, ProductCountLoaded, ProductCountLoading, // product delete selectors\ngetProductDelete, ProductDeleteFailed, ProductDeleteLoaded, ProductDeleteLoading, // product details selectors\ngetProductAddDetail, getProductDetails, ProductDetailFailed, ProductDetailLoaded, ProductDetailLoading, // product list selectors\ngetProductList, ProductListFailed, ProductListLoaded, ProductListLoading, // product update selectors\ngetProductUpdate, ProductUpdateFailed, ProductUpdateLoaded, ProductUpdateLoading, // product add List\ngetProductAddListRequestLoading, getProductAddListResponse, getProductAddListRequestFailed, getProductAddListRequestLoaded, // product remove List\ngetProductRemoveListResponse, getProductRemoveListRequestLoading, getProductRemoveListRequestLoaded, getProductRemoveListRequestFailed, optionList, optionlistLoading, optionlistLoaded, optionlistFailed, gettingOptionList, gettingOptionListLoading, gettingOptionListLoaded, gettingOptionListFailed, gettingRatingList, questionList, questionListLoading, questionListLoaded, addQuestion, deleteQuestion, changeQuestionStatus, answerList, answerListLoading, answerListLoaded, updateAnswer, updateAnswerLoaded, updateAnswerLoading, deleteAnswer, deleteAnswerLoaded, deleteAnswerLoading, changeAnswerStatus, changeAnswerStatusLoading, changeAnswerStatusLoaded, addAnswer, addAnswerLoading, addAnswerLoaded, defaultAnswer, manufacturerList, manufacturerListLoading, manufacturerListLoaded, videoUploadFailed, videoUpload, videoUploadLoaded, videoUploadLoading, videoPreviewLoading, videoPreviewLoaded, videoPreviewFailed, videoPreview, deleteProbabilityOption, deleteProbabilityOptionLoading, deleteProbabilityOptionLoaded, deleteProbabilityOptionFailed } from './product-reducer/product.selector';\nimport { ProductListModel } from './product-model/Product-list.model';\nimport { ProductDeleteModel } from './product-model/product-delete.model';\nimport { ProductAddModel } from './product-model/Product-add.model';\nimport { ProductUpdateModel } from './product-model/Product-update.model';\nimport { DetailModel } from './product-model/detail.model';\nimport { ProductRatingListModel } from './product-model/product-rating-list.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ng6-toastr-notifications\";\nexport let ProductSandbox = /*#__PURE__*/(() => {\n  class ProductSandbox {\n    constructor(appState, router, toastr) {\n      this.appState = appState;\n      this.router = router;\n      this.toastr = toastr;\n      this.productList$ = this.appState.select(getProductList);\n      this.productCount$ = this.appState.select(getProductCount);\n      this.deletedProduct$ = this.appState.select(getProductDelete);\n      this.productAdd$ = this.appState.select(getProductAdd);\n      this.productAddDetail$ = this.appState.select(getProductAddDetail);\n      this.productUpdate$ = this.appState.select(getProductUpdate);\n      this.productDetails$ = this.appState.select(getProductDetails);\n      this.optionList$ = this.appState.select(optionList);\n      this.gettingOptionList$ = this.appState.select(gettingOptionList);\n      this.gettingRatingList$ = this.appState.select(gettingRatingList);\n      this.productDetailLoading$ = this.appState.select(ProductDetailLoading);\n      this.productDetailLoaded$ = this.appState.select(ProductDetailLoaded);\n      this.productDetailFailed$ = this.appState.select(ProductDetailFailed);\n      this.productListLoading$ = this.appState.select(ProductListLoading);\n      this.productListLoaded$ = this.appState.select(ProductListLoaded);\n      this.productListFailed$ = this.appState.select(ProductListFailed);\n      this.productDeleteLoading$ = this.appState.select(ProductDeleteLoading);\n      this.productDeleteLoaded$ = this.appState.select(ProductDeleteLoaded);\n      this.productDeleteFailed$ = this.appState.select(ProductDeleteFailed);\n      this.productCountLoading$ = this.appState.select(ProductCountLoading);\n      this.productCountLoaded$ = this.appState.select(ProductCountLoaded);\n      this.productCountFailed$ = this.appState.select(ProductCountFailed);\n      this.productAddLoading$ = this.appState.select(ProductAddLoading);\n      this.productAddLoaded$ = this.appState.select(ProductAddLoaded);\n      this.productAddFailed$ = this.appState.select(ProductAddFailed);\n      this.productUpdateLoading$ = this.appState.select(ProductUpdateLoading);\n      this.productUpdateLoaded$ = this.appState.select(ProductUpdateLoaded);\n      this.productUpdateFailed$ = this.appState.select(ProductUpdateFailed);\n      this.getProductAddResponse$ = this.appState.select(getProductAddListResponse);\n      this.getProductAddRequestLoading$ = this.appState.select(getProductAddListRequestLoading);\n      this.getProductAddRequestLoaded$ = this.appState.select(getProductAddListRequestLoaded);\n      this.getProductAddRequestFailed$ = this.appState.select(getProductAddListRequestFailed);\n      this.getProductRemoveResponse$ = this.appState.select(getProductRemoveListResponse);\n      this.getProductRemoveRequestLoading$ = this.appState.select(getProductRemoveListRequestLoading);\n      this.getProductRemoveRequestLoaded$ = this.appState.select(getProductRemoveListRequestLoaded);\n      this.getProductRemoveRequestFailed$ = this.appState.select(getProductRemoveListRequestFailed);\n      this.optionListLoading$ = this.appState.select(optionlistLoading);\n      this.optionListLoaded$ = this.appState.select(optionlistLoaded);\n      this.optionListFailed$ = this.appState.select(optionlistFailed);\n      this.gettingOptionListLoading$ = this.appState.select(gettingOptionListLoading);\n      this.gettingOptionListLoaded$ = this.appState.select(gettingOptionListLoaded);\n      this.gettingOptionListFailed$ = this.appState.select(gettingOptionListFailed); // question variables\n\n      this.questionList$ = this.appState.select(questionList);\n      this.questionListLoading$ = this.appState.select(questionListLoading);\n      this.questionListLoaded$ = this.appState.select(questionListLoaded);\n      this.addQuestion$ = this.appState.select(addQuestion);\n      this.deleteQuestion$ = this.appState.select(deleteQuestion);\n      this.changeQuestionStatus$ = this.appState.select(changeQuestionStatus); // answer variables\n\n      this.answerList$ = this.appState.select(answerList);\n      this.answerListLoading$ = this.appState.select(answerListLoading);\n      this.answerListLoaded$ = this.appState.select(answerListLoaded);\n      this.updateAnswer$ = this.appState.select(updateAnswer);\n      this.updateAnswerLoading$ = this.appState.select(updateAnswerLoading);\n      this.updateAnswerLoaded$ = this.appState.select(updateAnswerLoaded);\n      this.deleteAnswer$ = this.appState.select(deleteAnswer);\n      this.deleteAnswerLoaded$ = this.appState.select(deleteAnswerLoaded);\n      this.deleteAnswerLoading$ = this.appState.select(deleteAnswerLoading);\n      this.changeAnswerStatus$ = this.appState.select(changeAnswerStatus);\n      this.changeAnswerStatusLoading$ = this.appState.select(changeAnswerStatusLoading);\n      this.changeAnswerStatusLoaded$ = this.appState.select(changeAnswerStatusLoaded);\n      this.addAnswer$ = this.appState.select(addAnswer);\n      this.addAnswerLoading$ = this.appState.select(addAnswerLoading);\n      this.addAnswerLoaded$ = this.appState.select(addAnswerLoaded);\n      this.defaultAnswer$ = this.appState.select(defaultAnswer);\n      this.videoUpload$ = this.appState.select(videoUpload);\n      this.videoUploadLoading$ = this.appState.select(videoUploadLoading);\n      this.videoUploadLoaded$ = this.appState.select(videoUploadLoaded);\n      this.videoUploadFailed$ = this.appState.select(videoUploadFailed);\n      this.videoPreview$ = this.appState.select(videoPreview);\n      this.videoPreviewLoading$ = this.appState.select(videoPreviewLoading);\n      this.videoPreviewLoaded$ = this.appState.select(videoPreviewLoaded);\n      this.videoPreviewFailed$ = this.appState.select(videoPreviewFailed); // manufacturer list\n\n      this.manufacturerList$ = this.appState.select(manufacturerList);\n      this.manufacturerListLoading$ = this.appState.select(manufacturerListLoading);\n      this.manufacturerListLoaded$ = this.appState.select(manufacturerListLoaded);\n      this.deleteProbabilityOption$ = this.appState.select(deleteProbabilityOption);\n      this.deleteProbabilityOptionLoading$ = this.appState.select(deleteProbabilityOptionLoading);\n      this.deleteProbabilityOptionLoaded$ = this.appState.select(deleteProbabilityOptionLoaded);\n      this.deleteProbabilityOptionFailed$ = this.appState.select(deleteProbabilityOptionFailed); // this.subscribe();\n    }\n\n    getProductList(value) {\n      this.appState.dispatch(new productActions.GetProductlistAction(new ProductListModel(value)));\n    }\n\n    getProductCount(value) {\n      this.appState.dispatch(new productActions.GetProductCountAction(new ProductListModel(value)));\n    }\n\n    doProductDelete(value) {\n      this.appState.dispatch(new productActions.DoProductDeleteAction(new ProductDeleteModel(value)));\n    }\n\n    doProductAdd(value) {\n      this.appState.dispatch(new productActions.DoProductAddAction(new ProductAddModel(value)));\n    }\n\n    doProductUpdate(value) {\n      this.appState.dispatch(new productActions.DoProductUpdateAction(new ProductUpdateModel(value)));\n    }\n\n    getProductDetail(value) {\n      this.appState.dispatch(new productActions.GetProductDetailAction(new DetailModel(value)));\n    }\n\n    productIsFeature(value) {\n      this.appState.dispatch(new productActions.DoProductDetailIsFeatureAction(value));\n    }\n\n    productAddList(value) {\n      this.appState.dispatch(new productActions.DoProductaddlistAction(value));\n    }\n\n    productRemoveList(value) {\n      this.appState.dispatch(new productActions.DoProductremovelistAction(value));\n    }\n\n    productTodayDeals(value) {\n      this.appState.dispatch(new productActions.DoProductTodayDealAction(value));\n    } // clear product details\n\n\n    ClearProductDetails() {\n      this.appState.dispatch(new productActions.DOClearProductDetails());\n    } // Get Product Rating List\n\n\n    getProductRatingList(value) {\n      this.appState.dispatch(new productActions.GetProductRating(new ProductRatingListModel(value)));\n    } // Do Rating Status\n\n\n    doRatingStatus(value) {\n      this.appState.dispatch(new productActions.DoProductRatingStatus(value));\n    } // Do Product Bulk Delete\n\n\n    bulkDelete(value) {\n      this.appState.dispatch(new productActions.DoProductBulkDelete(value));\n    } // Do Product Excel\n\n\n    productExcel(value) {\n      this.appState.dispatch(new productActions.DoProductExcel(value));\n    } // Do Product Excel\n\n\n    productAllExcel(value) {\n      this.appState.dispatch(new productActions.DoProductAllExcel(value));\n    } // Get Question List\n\n\n    getQuestionList(value) {\n      this.appState.dispatch(new productActions.GetQuestionListAction(value));\n    } // Add Question\n\n\n    addQuestion(value) {\n      this.appState.dispatch(new productActions.AddQuestionAction(value));\n    } // delete Question\n\n\n    deleteQuestion(value) {\n      this.appState.dispatch(new productActions.DeleteQuestionAction(value));\n    } // clear state variable to avoid subscription\n\n\n    clear() {\n      this.appState.dispatch(new productActions.ClearVariableAction());\n    } // clear state variable to avoid subscription\n\n\n    changeQuestionStatus(value) {\n      this.appState.dispatch(new productActions.ChangeQuestionStatusAction(value));\n    } // get answer list\n\n\n    getAnswerList(value) {\n      this.appState.dispatch(new productActions.GetAnswerListAction(value));\n    } // add answer\n\n\n    addAnswer(value) {\n      this.appState.dispatch(new productActions.AddAnswerAction(value));\n    } // update answer\n\n\n    updateAnswer(value) {\n      this.appState.dispatch(new productActions.UpdateAnswerAction(value));\n    } // delete answer\n\n\n    deleteAnswer(value) {\n      this.appState.dispatch(new productActions.DeleteAnswerAction(value));\n    } // change Answer Status\n\n\n    changeAnswerStatus(value) {\n      this.appState.dispatch(new productActions.ChangeAnswerStatusAction(value));\n    } // make default answer\n\n\n    makeDefaultAnswer(value) {\n      this.appState.dispatch(new productActions.MakeDefaultAnswerAction(value));\n    } // get manufacturer list\n\n\n    manufacturerList(value) {\n      this.appState.dispatch(new productActions.ManufacturerListAction(value));\n    }\n\n    videoUpload(value) {\n      this.appState.dispatch(new productActions.VideoUpload(value));\n    }\n\n    videoPreview(value) {\n      this.appState.dispatch(new productActions.videoPreview(value));\n    }\n\n    subscribe() {\n      this.productAdd$.subscribe(data => {\n        if (data && data.status === 1) {\n          this.router.navigate(['/catalog/product']);\n        }\n      });\n      this.productUpdate$.subscribe(data => {\n        if (data && data['status'] === 1) {\n          this.router.navigate(['/catalog/product']);\n        }\n      });\n    }\n\n  }\n\n  ProductSandbox.ɵfac = function ProductSandbox_Factory(t) {\n    return new (t || ProductSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrManager));\n  };\n\n  ProductSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductSandbox,\n    factory: ProductSandbox.ɵfac\n  });\n  return ProductSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nvar ɵngcc0 = require('@angular/core');\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n/**\n * CKGroup component\n * Usage :\n *  <ckeditor [(ngModel)]=\"data\" [config]=\"{...}\" debounce=\"500\">\n *      <ckbutton [name]=\"'SaveButton'\" [command]=\"'saveCommand'\" (click)=\"save($event)\"\n *                [icon]=\"'/save.png'\" [toolbar]=\"'customGroup,1'\" [label]=\"'Save'\">\n *      </ckbutton>\n *   </ckeditor>\n */\n\n\nvar CKButtonDirective =\n/** @class */\nfunction () {\n  function CKButtonDirective() {\n    this.click = new core_1.EventEmitter();\n  }\n\n  CKButtonDirective.prototype.initialize = function (editor) {\n    var _this = this;\n\n    editor.instance.addCommand(this.command, {\n      exec: function (evt) {\n        _this.click.emit(evt);\n      }\n    });\n    editor.instance.ui.addButton(this.name, {\n      label: this.label,\n      command: this.command,\n      toolbar: this.toolbar,\n      icon: this.icon\n    });\n  };\n\n  CKButtonDirective.prototype.ngOnInit = function () {\n    if (!this.name) throw new Error('Attribute \"name\" is required on <ckbutton>');\n    if (!this.command) throw new Error('Attribute \"command\" is required on <ckbutton>');\n  };\n\n  __decorate([core_1.Output(), __metadata(\"design:type\", Object)], CKButtonDirective.prototype, \"click\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", String)], CKButtonDirective.prototype, \"label\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", String)], CKButtonDirective.prototype, \"command\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", String)], CKButtonDirective.prototype, \"toolbar\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", String)], CKButtonDirective.prototype, \"name\", void 0);\n\n  __decorate([core_1.Input(), __metadata(\"design:type\", String)], CKButtonDirective.prototype, \"icon\", void 0);\n\n  CKButtonDirective.ɵfac = function CKButtonDirective_Factory(t) {\n    return new (t || CKButtonDirective)();\n  };\n\n  CKButtonDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: CKButtonDirective,\n    selectors: [[\"ckbutton\"]],\n    inputs: {\n      label: \"label\",\n      command: \"command\",\n      toolbar: \"toolbar\",\n      name: \"name\",\n      icon: \"icon\"\n    },\n    outputs: {\n      click: \"click\"\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n  })();\n\n  return CKButtonDirective;\n}();\n\nexports.CKButtonDirective = CKButtonDirective; //# sourceMappingURL=ckbutton.directive.js.map","map":null,"metadata":{},"sourceType":"script"}
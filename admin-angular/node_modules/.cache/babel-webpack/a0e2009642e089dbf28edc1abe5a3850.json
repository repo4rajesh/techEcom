{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { Api } from '../providers/api/api';\nimport * as i0 from \"@angular/core\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService extends Api {\n    constructor() {\n      super(...arguments);\n      this.params = {};\n      this.URL = this.getBaseUrl();\n    }\n    /* get top selling product list api*/\n\n\n    getTopSellingProducts(filterParam) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(filterParam).reduce((p, key) => p.set(key, filterParam[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/top-performing-products', reqOpts); // return this.http.get(this.URL + '/product/top-performing-products',filterParam);\n    }\n    /* get sales order list api*/\n\n\n    getSalesOrders(filterParam) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(filterParam).reduce((p, key) => p.set(key, filterParam[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/customer/customer-visit-list', reqOpts);\n    }\n    /* get visitors list api*/\n\n\n    getVisitorsList(filterParam) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(filterParam).reduce((p, key) => p.set(key, filterParam[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/order/transaction-list', reqOpts);\n    }\n    /* get recent visitors list api*/\n\n\n    getRecentVisitorsList(filterParam) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(filterParam).reduce((p, key) => p.set(key, filterParam[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/top-five-repeatedly-purchased-customers', reqOpts);\n    }\n    /* get recent selling product list api*/\n\n\n    getRecentSellingProductList(filterParam) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(filterParam).reduce((p, key) => p.set(key, filterParam[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/recent-selling-product', reqOpts);\n    }\n    /* get items per page count api*/\n\n\n    getItemsPerPageCount() {\n      return this.http.get(this.URL + '/settings/get-settings');\n    }\n    /* get dashboard counts*/\n\n\n    getDashboardCount() {\n      return this.http.get(this.URL + '/product/dashboard-admin-totalvendor-totalproduct-count');\n    }\n\n    averageOrderValue(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard-average-order-value', reqOpts);\n    }\n    /*Total Customers*/\n\n\n    totalCustomersList(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard/admin-customers-count', reqOpts);\n    }\n    /*Total Customers*/\n\n\n    getTopSellingProductListCount(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/top-performing-products', reqOpts);\n    }\n    /*Total Revenue*/\n\n\n    totalRevenue(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard-total-revenue', reqOpts);\n    }\n    /*Total Orders*/\n\n\n    totalOrders(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard-admin/orders-count', reqOpts);\n    }\n    /*New Customers*/\n\n\n    newCustomers(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard/admin-customers-count', reqOpts);\n    }\n    /*average conversion ratio*/\n\n\n    averageConversionRatio(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard-average-conversion-ratio', reqOpts);\n    }\n    /*Transaction values*/\n\n\n    transactionValues(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/order/transaction-list', reqOpts);\n    }\n    /*Vendor*/\n\n\n    vendor(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/customer/vendor-graph-list', reqOpts);\n    }\n    /*Sales graph*/\n\n\n    salesgraph(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/order/sales-graph-list', reqOpts);\n    }\n    /*weekly sales product*/\n\n\n    weeklysalesproduct(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/dashboard/graph-weekly-saleslist', reqOpts);\n    }\n    /*Top 10 Weekly Products*/\n\n\n    toptenweeklyproducts(param) {\n      const reqOpts = {};\n      const params = Object.getOwnPropertyNames(param).reduce((p, key) => p.set(key, param[key]), new HttpParams());\n      reqOpts.params = params;\n      return this.http.get(this.URL + '/product/top-performing-products', reqOpts);\n    }\n\n  }\n\n  DashboardService.ɵfac = /*@__PURE__*/function () {\n    let ɵDashboardService_BaseFactory;\n    return function DashboardService_Factory(t) {\n      return (ɵDashboardService_BaseFactory || (ɵDashboardService_BaseFactory = i0.ɵɵgetInheritedFactory(DashboardService)))(t || DashboardService);\n    };\n  }();\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}
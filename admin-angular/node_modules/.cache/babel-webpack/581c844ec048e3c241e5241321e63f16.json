{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport * as actions from '../generalsetting-action/generalsetting.action';\nimport { GeneralsettingRecordState } from './generalsetting.state';\nimport { GeneralsettingetResponseModel } from '../generalsetting-model/generalsettinget.response.model';\nexport const initialState = new GeneralsettingRecordState();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    case actions.ActionTypes.DO_NEW_GENERAL_SETTINGS:\n      {\n        return Object.assign({}, state, {});\n      }\n\n    case actions.ActionTypes.DO_GET_GENERAL_SETTINGS:\n      {\n        return Object.assign({}, state, {});\n      }\n\n    case actions.ActionTypes.DO_NEW_GENERAL_SETTINGS_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          newgeneralsettings: payload\n        });\n      }\n\n    case actions.ActionTypes.DO_GET_GENERAL_SETTINGS_SUCCESS:\n      {\n        const generalsetting = payload.data.map(_setting => {\n          const tempListModel = new GeneralsettingetResponseModel(_setting);\n          return tempListModel;\n        });\n        return Object.assign({}, state, {\n          getgeneralsetting: generalsetting\n        });\n      }\n\n    case actions.ActionTypes.DO_NEW_GENERAL_SETTINGS_FAIL:\n      {\n        return Object.assign({}, state, {\n          newgeneralsettings: payload\n        });\n      }\n\n    case actions.ActionTypes.DO_GET_GENERAL_SETTINGS_FAIL:\n      {\n        return Object.assign({}, state, {\n          getgeneralsetting: payload\n        });\n      }\n\n    case actions.ActionTypes.MAINTENANCE_MODE:\n      {\n        return Object.assign({}, state, {});\n      }\n\n    case actions.ActionTypes.MAINTENANCE_MODE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          mode: payload\n        });\n      }\n\n    case actions.ActionTypes.MAINTENANCE_MODE_FAIL:\n      {\n        return Object.assign({}, state, {\n          newMode: payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n} // Export State value Pass to Selector\n\nexport const getNewGeneralsettings = state => state.newgeneralsettings;\nexport const getGeneralsettings = state => state.getgeneralsetting;\nexport const maintenaceMode = state => state.mode;","map":null,"metadata":{},"sourceType":"module"}
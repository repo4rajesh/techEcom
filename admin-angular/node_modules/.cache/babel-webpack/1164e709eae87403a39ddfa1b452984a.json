{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../../../core/admin/sales/orders/orders-sandbox\";\nimport * as i3 from \"../../../../../../../core/admin/settings/localizations/orderstatus/orderstatus.sandbox\";\nimport * as i4 from \"../../../../../../../core/admin/shared/validation-directives/only-number.directive\";\nimport * as i5 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i6 from \"@ng-select/ng-select\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@ngx-translate/core\";\n\nfunction OrderFilterComponent_ng_option_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ng-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", data_r2.orderStatusId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(data_r2.name);\n  }\n}\n\nexport let OrderFilterComponent = /*#__PURE__*/(() => {\n  class OrderFilterComponent {\n    constructor(fb, appSandbox, orderStatusSandbox) {\n      this.fb = fb;\n      this.appSandbox = appSandbox;\n      this.orderStatusSandbox = orderStatusSandbox;\n      this.pageSize = '10';\n      this.submitted = false;\n      this.offset = 0;\n      this.pagination = 1;\n      this.salesEmit = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.pageSize = sessionStorage.getItem('itemsPerPage');\n      this.initForm();\n      this.getorderstatuslist();\n      this.minPickerDate = {\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        day: new Date().getDate()\n      };\n    }\n\n    initForm() {\n      this.name = new FormControl('', [Validators.required]);\n      this.total = new FormControl('', [Validators.required]);\n      this.date = new FormControl('', [Validators.required]);\n      this.status = new FormControl(null, [Validators.required]);\n      this.orderId = new FormControl('', [Validators.required]);\n      this.orderStatusId = new FormControl(null), this.salesOrder = this.fb.group({\n        name: this.name,\n        date: this.date,\n        orderId: this.orderId,\n        status: this.status,\n        total: this.total,\n        orderStatusId: this.orderStatusId\n      });\n    }\n    /**\n     * Handles form 'submit' event. Calls sandbox getBannerList . function if form is valid.\n     *\n     * @param event form event\n     * @param form entire form value\n     */\n\n\n    getorderstatuslist() {\n      const params = {};\n      params.limit = '';\n      params.offset = '';\n      params.keyword = '';\n      this.orderStatusSandbox.orderStatusList(params);\n    }\n\n    onDateSelect(event) {\n      this.miniDate = event;\n    }\n\n    onSubmit() {\n      const params = {};\n      params.limit = this.pageSize;\n      params.offset = this.offset;\n      params.orderId = this.salesOrder.value.orderId ? this.salesOrder.value.orderId : '';\n      params.customerName = this.salesOrder.value.name ? this.salesOrder.value.name : '';\n\n      if (parseInt(this.salesOrder.value.total, 10).toFixed() === 'NaN') {\n        params.totalAmount = '';\n      } else {\n        params.totalAmount = parseInt(this.salesOrder.value.total, 10).toFixed();\n      }\n\n      const form = this.salesOrder.value.date;\n\n      if (form && form.year) {\n        this.fromDate = form ? form.year + '-' + ('0' + form.month).slice(-2) + '-' + ('0' + form.day).slice(-2) : null;\n      }\n\n      params.dateAdded = this.fromDate ? this.fromDate : '';\n      params.orderStatusId = this.salesOrder.value.orderStatusId ? this.salesOrder.value.orderStatusId : '';\n      this.salesEmit.emit(params);\n    }\n\n    reset() {\n      if (this.salesOrder.value.orderId || this.salesOrder.value.name || this.salesOrder.value.total || this.fromDate || this.salesOrder.value.orderStatusId || this.salesOrder.value.date) {\n        this.salesOrder.reset();\n        const param = {};\n        param.limit = this.pageSize;\n        param.offset = '';\n        param.orderId = '';\n        this.salesOrder.value.date = \"\";\n        param.customerName = '';\n        param.totalAmount = '';\n        param.dateAdded = '';\n        this.fromDate = '';\n        this.salesEmit.emit(param);\n      }\n    }\n\n    onItemChange(data) {\n      const params = {};\n      params.orderId = this.orderId;\n      params.orderStatusId = data;\n    }\n\n  }\n\n  OrderFilterComponent.ɵfac = function OrderFilterComponent_Factory(t) {\n    return new (t || OrderFilterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.OrdersSandbox), i0.ɵɵdirectiveInject(i3.OrderstatusSandbox));\n  };\n\n  OrderFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OrderFilterComponent,\n    selectors: [[\"app-sales-order-filter\"]],\n    outputs: {\n      salesEmit: \"salesEmit\"\n    },\n    decls: 40,\n    vars: 40,\n    consts: [[1, \"filter-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"keyboard\"], [\"type\", \"text\", \"id\", \"keyboard\", \"aria-describedby\", \"emailHelp\", \"formControlName\", \"orderId\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"sku\"], [\"type\", \"text\", \"formControlName\", \"name\", \"id\", \"sku\", 1, \"form-control\", 3, \"placeholder\"], [\"appOnlyNumber\", \"\", \"type\", \"text\", \"formControlName\", \"total\", 1, \"form-control\", 3, \"placeholder\"], [1, \"control-label\"], [\"readonly\", \"\", \"type\", \"text\", \"formControlName\", \"date\", \"placeholder\", \"dd/mm/yyyy\", \"name\", \"dp\", \"id\", \"cal-in\", \"ngbDatepicker\", \"\", 1, \"form-control\", \"date\", 2, \"cursor\", \"pointer\", 3, \"maxDate\", \"dateSelect\", \"click\"], [\"f\", \"ngbDatepicker\"], [\"formControlName\", \"orderStatusId\", 1, \"sol-fm\", 3, \"placeholder\", \"searchable\", \"clearable\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-right\", \"filter-btns\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\"], [3, \"value\"]],\n    template: function OrderFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r3 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function OrderFilterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵelementStart(8, \"label\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1);\n        i0.ɵɵelementStart(14, \"label\");\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 6);\n        i0.ɵɵpipe(18, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 1);\n        i0.ɵɵelementStart(20, \"label\", 7);\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 8, 9);\n        i0.ɵɵlistener(\"dateSelect\", function OrderFilterComponent_Template_input_dateSelect_23_listener($event) {\n          return ctx.onDateSelect($event);\n        })(\"click\", function OrderFilterComponent_Template_input_click_23_listener() {\n          i0.ɵɵrestoreView(_r3);\n\n          const _r0 = i0.ɵɵreference(24);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 1);\n        i0.ɵɵelementStart(26, \"label\");\n        i0.ɵɵtext(27);\n        i0.ɵɵpipe(28, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"ng-select\", 10);\n        i0.ɵɵpipe(30, \"translate\");\n        i0.ɵɵtemplate(31, OrderFilterComponent_ng_option_31_Template, 2, 2, \"ng-option\", 11);\n        i0.ɵɵpipe(32, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 12);\n        i0.ɵɵelementStart(34, \"a\", 13);\n        i0.ɵɵlistener(\"click\", function OrderFilterComponent_Template_a_click_34_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"button\", 14);\n        i0.ɵɵtext(38);\n        i0.ɵɵpipe(39, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.salesOrder);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 16, \"Sales.Orders.OrderId\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(6, 18, \"Sales.SalesPlaceholder.OrderId\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(10, 20, \"Sales.Orders.CustomerName\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(12, 22, \"Sales.SalesPlaceholder.SKUNumber\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(16, 24, \"Sales.Orders.TotalAmount\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(18, 26, \"Sales.SalesPlaceholder.TotalAmount\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(22, 28, \"Sales.Orders.DateAdded\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"maxDate\", ctx.minPickerDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(28, 30, \"Sales.Orders.OrderStatus\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(30, 32, \"Sales.Orders.Select Status\"));\n        i0.ɵɵproperty(\"searchable\", false)(\"clearable\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(32, 34, ctx.orderStatusSandbox.getOrderstatuslist$));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 36, \"Sales.Orders.Reset\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(39, 38, \"Sales.Orders.ApplyFilters\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.OnlyNumberDirective, i5.NgbInputDatepicker, i6.NgSelectComponent, i7.NgForOf, i6.ɵr],\n    pipes: [i8.TranslatePipe, i7.AsyncPipe],\n    styles: [\".btn[_ngcontent-%COMP%]{background-color:#dc4d5b!important}\"]\n  });\n  return OrderFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
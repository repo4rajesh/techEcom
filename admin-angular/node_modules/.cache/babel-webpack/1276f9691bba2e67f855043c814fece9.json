{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { createSelector } from 'reselect';\nimport * as fromMedia from './media.reducer'; // *************************** PUBLIC API's ****************************\n\n/**\n * Auth store functions\n */\n\nexport const getAddmediaState = state => state.media; // Media upload\n\nexport const getMediaUploaddata = createSelector(getAddmediaState, fromMedia.getMediaUpload); // Media delete file\n\nexport const getbucketDeleteFile = createSelector(getAddmediaState, fromMedia.getBucketdeletefile); // Media upload\n\nexport const getmediauploadResponse = createSelector(getAddmediaState, fromMedia.getmediauploadResponse);\nexport const getmediauploadRequestLoadings = createSelector(getAddmediaState, fromMedia.getmediauploadRequestLoading);\nexport const getmediauploadRequestLoaded = createSelector(getAddmediaState, fromMedia.getmediauploadRequestLoaded);\nexport const getmediauploadRequestFailed = createSelector(getAddmediaState, fromMedia.getmediauploadRequestFailed); // Media delete folder\n\nexport const getMediaCreatefolder = createSelector(getAddmediaState, fromMedia.getMediaCreateFolder);\nexport const getbucketDeleteFolder = createSelector(getAddmediaState, fromMedia.getBucketdeletefolder);\nexport const getdeletefolderResponse = createSelector(getAddmediaState, fromMedia.getdeletefolderResponse);\nexport const getdeletefolderRequestLoading = createSelector(getAddmediaState, fromMedia.getdeletefolderRequestLoading);\nexport const getdeletefolderRequestLoaded = createSelector(getAddmediaState, fromMedia.getdeletefolderRequestLoaded);\nexport const getdeletefolderRequestFailed = createSelector(getAddmediaState, fromMedia.getdeletefolderRequestFailed); // Media bucket list\n\nexport const getBucketListData = createSelector(getAddmediaState, fromMedia.getBucketList);\nexport const getbucketlistResponse = createSelector(getAddmediaState, fromMedia.getbucketlistResponse);\nexport const getbucketlistRequestLoading = createSelector(getAddmediaState, fromMedia.getbucketlistRequestLoading);\nexport const getbucketlistRequestLoaded = createSelector(getAddmediaState, fromMedia.getbucketlistRequestLoaded);\nexport const getbucketlistRequestFailed = createSelector(getAddmediaState, fromMedia.getbucketlistRequestFailed); // Media search folder\n\nexport const getSearchFolder = createSelector(getAddmediaState, fromMedia.getSearchFolder);\nexport const getSearchFolderResponse = createSelector(getAddmediaState, fromMedia.getSearchFolderResponse);\nexport const getSearchFolderRequestLoading = createSelector(getAddmediaState, fromMedia.getSearchFolderRequestLoading);\nexport const getSearchFolderRequestLoaded = createSelector(getAddmediaState, fromMedia.getSearchFolderRequestLoaded);\nexport const getSearchFolderRequestFailed = createSelector(getAddmediaState, fromMedia.getSearchFolderRequestFailed);","map":null,"metadata":{},"sourceType":"module"}
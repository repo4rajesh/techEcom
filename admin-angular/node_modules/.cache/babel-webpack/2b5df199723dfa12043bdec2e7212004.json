{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../../../../../../core/admin/catalog/media/media.sandbox\";\nimport * as i3 from \"../../../../../../core/admin/service/config.service\";\nimport * as i4 from \"../../../../../../core/admin/providers/CommonInterceptor\";\nimport * as i5 from \"ng6-toastr-notifications\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@ngx-translate/core\";\nconst _c0 = [\"filePath\"];\n\nfunction ImagemanagerpopupComponent_div_5_h4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const prefix_r8 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Image Manager \", prefix_r8, \" \");\n  }\n}\n\nfunction ImagemanagerpopupComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ImagemanagerpopupComponent_div_5_h4_1_Template, 2, 1, \"h4\", 30);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.prefixPath == true);\n  }\n}\n\nfunction ImagemanagerpopupComponent_h4_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h4\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Image Manager \", ctx_r1.folderPathNames, \" \");\n  }\n}\n\nfunction ImagemanagerpopupComponent_li_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵelementStart(1, \"a\", 14);\n    i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_li_17_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const prefix_r11 = restoredCtx.ngIf;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.goBack(prefix_r11);\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelement(3, \"img\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"ngbTooltip\", i0.ɵɵpipeBind1(2, 1, \"catalog.product.ToolTip.Back\"));\n  }\n}\n\nfunction ImagemanagerpopupComponent_a_45_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 25);\n    i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_a_45_Template_a_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.registerImage();\n    });\n    i0.ɵɵtext(1, \" Insert \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ImagemanagerpopupComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\", 35);\n    i0.ɵɵelementStart(2, \"img\", 36);\n    i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_div_47_Template_img_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const folder_r16 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.openFolder(folder_r16.Prefix);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const folder_r16 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.removeSlash(folder_r16.Prefix));\n  }\n}\n\nfunction ImagemanagerpopupComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_div_49_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const images_r19 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.selectFile(images_r19.Key);\n    });\n    i0.ɵɵelement(2, \"img\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 39);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 40);\n    i0.ɵɵlistener(\"change\", function ImagemanagerpopupComponent_div_49_Template_input_change_5_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r22);\n      const images_r19 = restoredCtx.$implicit;\n      const i_r20 = restoredCtx.index;\n      const ctx_r23 = i0.ɵɵnextContext();\n      return ctx_r23.fileCheckBox($event, images_r19.Key, i_r20);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const images_r19 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r6.imageUrls + \"?width=120&height=120&path=\" + \"&name=\" + images_r19.Key, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"ngbTooltip\", ctx_r6.enhanceName(images_r19 == null ? null : images_r19.Key));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r6.enhanceName(images_r19.Key));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"value\", images_r19.Key);\n  }\n}\n\nfunction ImagemanagerpopupComponent_button_51_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_button_51_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.getMoreBucketList();\n    });\n    i0.ɵɵtext(1, \"Load More...\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let ImagemanagerpopupComponent = /*#__PURE__*/(() => {\n  class ImagemanagerpopupComponent {\n    constructor(modal, mediaSandbox, configService, httpStatus, toaster) {\n      this.modal = modal;\n      this.mediaSandbox = mediaSandbox;\n      this.configService = configService;\n      this.httpStatus = httpStatus;\n      this.toaster = toaster; // ngOnDestroy event\n\n      this.subscriptions = [];\n      this.subscription = [];\n      this.prefixPath = false;\n      this.isTooltip = false;\n      this.pageSize = 100;\n      this.isLoadMore = true;\n      this.checkedData = [];\n      this.unCheckData = [];\n      this.multipleSelected = [];\n      this.regSubscribeEvents();\n      this.getHttpResponse();\n    }\n\n    getHttpResponse() {\n      this.httpStatus.getHttpStatus().subscribe(status => {\n        this.loader = status;\n      });\n    } // Initially calls getBucketList event with empty param.\n\n    /**\n     * Handles ngOnInit,Initially calls getBucketList event with empty param.\n     *\n     *   and assigning  configService url\n     */\n\n\n    ngOnInit() {\n      this.currentFolder = '';\n      this.getBucketList('');\n      this.imageUrls = this.configService.getImageUrl();\n    }\n    /**\n     * Handles form 'getBucketList' event. Calls sandbox bucketListApi.\n     *\n     * @param foldername create folder  event\n     * @param limit as default '100'.\n     */\n\n\n    getBucketList(foldername) {\n      this.prefixPath = false;\n      this.refreshPath = foldername;\n      const params = {};\n      params.folderName = foldername;\n      params.limit = this.pageSize;\n      params.marker = '';\n      this.folderPathName = foldername;\n      this.mediaSandbox.bucketListApi(params);\n      this.subscribe();\n      this.globalTempData = foldername;\n      this.folderPathTitle(this.folderPathName);\n    }\n\n    subscribe() {\n      this.mediaSandbox.getBucketListData$.subscribe(data => {\n        if (data && Object.keys(data).length) {\n          if (data.NextMarker) {\n            this.offset = data.NextMarker;\n          } else {\n            this.isLoadMore = false;\n          }\n        }\n      });\n    }\n\n    refresh() {\n      this.isLoadMore = true;\n      this.mediaSandbox.clearBucketList();\n      this.prefixPath = false;\n      const params = {};\n      params.limit = this.pageSize;\n      params.folderName = this.refreshPath;\n      params.marker = '';\n      this.mediaSandbox.bucketListApi(params);\n      this.folderPathTitle(this.folderPathName);\n    }\n\n    getBucketLists(foldername) {\n      this.prefixPath = true;\n      const params = {};\n      params.folderName = foldername;\n      params.limit = this.pageSize;\n      params.marker = '';\n      this.folderPathName = foldername;\n      this.mediaSandbox.bucketListApi(params);\n      this.globalTempData = foldername;\n      this.folderPathTitles(this.folderPathName);\n    }\n    /**\n     * Handles openFolder event .And calls getBucketList event\n     *\n     * @param folder create folder  by clicking the folder event\n     */\n\n\n    openFolder(folder) {\n      this.checkedData = [];\n      this.unCheckData = [];\n      this.multipleSelected = [];\n      this.isLoadMore = false;\n      this.mediaSandbox.clearBucketList();\n      this.currentFolder = folder;\n      this.getBucketList(folder);\n    }\n    /**\n     * Handles enhanceName event .\n     *\n     * @param file enhanceName the data by spliting by (/).\n     */\n\n\n    enhanceName(file) {\n      const newValue = file.split('/');\n      return newValue[newValue.length - 1];\n    }\n    /**\n     * Handles removeSlash event .\n     *\n     * @param data removes  the data by spliting by (/).\n     */\n\n\n    removeSlash(data) {\n      const newValue = data.split('/');\n      return newValue[newValue.length - 2];\n    }\n    /**\n     * Handles goBack event .\n     *\n     * @param path removes  the data by spliting by (/).\n     *\n     *check the conditon if it true store data in previousPath\n     * else  store data in previousPath with previousPath.\n     *\n     * calls the getBucketList event\n     */\n\n\n    goBack(path) {\n      this.mediaSandbox.clearBucketList();\n      let previousPath;\n      const tempPath = path.split('/');\n\n      for (let i = 0; i < tempPath.length - 2; i++) {\n        if (i === 0) {\n          previousPath = tempPath[i] + '/';\n        } else {\n          previousPath = previousPath + tempPath[i] + '/';\n        }\n      } // this.folderPathNameUp=previousPath;\n\n\n      if (previousPath === undefined) {\n        previousPath = '';\n        this.isLoadMore = true;\n      }\n\n      this.getBucketList(previousPath);\n    }\n    /**\n     * Handles deleteFile event .calls mediaSandbox deleteFile .\n     *And subscribe for refreshing the page by calling getBucketList function.\n     * @params file.\n     */\n\n\n    deleteFile() {\n      const params = {};\n      params.fileName = this.deleteImage;\n      this.mediaSandbox.deleteFile(params);\n      this.mediaSandbox.getBucketDeleteFile$.subscribe(data => {\n        if (data) {\n          if (data.status === 1) {\n            this.isLoadMore = true;\n            this.mediaSandbox.clearBucketList();\n            this.getBucketList(this.globalTempData);\n          }\n        }\n      });\n    }\n    /**\n     * Handles createFolder event .calls mediaSandbox getbuckcreatefolder .\n     *\n     * @param param.\n     *\n     * According to the condition it store the values in param.\n     */\n\n\n    createFolder() {\n      const param = {};\n\n      if (this.currentFolder === '') {\n        param.folderName = this.textValue + '/';\n      } else {\n        param.folderName = this.currentFolder + this.textValue + '/';\n      }\n\n      this.mediaSandbox.getbuckcreatefolder(param);\n      this.subscription.push(this.mediaSandbox.getBucketListData$.subscribe(data => {\n        if (data) {\n          this.isTooltip = false;\n          this.textValue = '';\n        }\n      }));\n      this.subscription.forEach(each => each.unsubscribe());\n    }\n    /**\n     * Handles uploadImageAction event .calls  convertBase64 event.\n     *\n     * @param event.\n     *\n     * store the event in selecetdFile variable.\n     */\n\n\n    uploadImageAction(event) {\n      this.selecetdFile = event.target;\n      this.convertBase64(this.selecetdFile);\n    }\n    /**\n     * Handles uploadImage event .calls  convertBase64 event.\n     */\n\n\n    uploadImage() {\n      const el = this.filePath.nativeElement;\n      el.click();\n    }\n\n    close() {\n      if (this.multipleSelected.length > 0) {\n        this.modal.close(this.multipleSelected);\n      } else {\n        this.modal.close();\n      }\n    }\n    /**\n     * Handles convertBase64 event .converts the data into base 64 format.\n     *\n     * calls mediaSandbox getbuckupload\n     *\n     * @param inputValue from  uploadImageAction event.\n     *\n     * then calls close event.\n     */\n\n\n    convertBase64(inputValue) {\n      const file = inputValue.files[0];\n      const myReader = new FileReader();\n\n      myReader.onloadend = e => {\n        const params = {};\n        params.imageName = myReader.result;\n        params.path = this.globalTempData;\n        params.fileName = inputValue.files[0].name;\n        this.mediaSandbox.getbuckupload(params);\n      };\n\n      myReader.readAsDataURL(file);\n    }\n    /**\n     * Handles regSubscribeEvents event .\n     *\n     * subscribe mediaSandbox getMediaCreatefold$\n     *\n     * subscribe mediaSandbox getMediaUpload$\n     *\n     * If the respose is succesfull then call getBucketList event.\n     */\n\n\n    regSubscribeEvents() {\n      this.subscriptions.push(this.mediaSandbox.getMediaCreatefold$.subscribe(create => {\n        if (create && create.status === 1) {\n          this.isLoadMore = true;\n          this.mediaSandbox.clearBucketList();\n          this.getBucketList(this.currentFolder);\n        }\n      }));\n      this.subscriptions.push(this.mediaSandbox.getMediaUpload$.subscribe(upload => {\n        if (upload && upload.status === 1) {\n          this.isLoadMore = true;\n          this.mediaSandbox.clearBucketList();\n          this.getBucketLists(this.folderPathName);\n        }\n      }));\n    } // store the checked file to delete\n\n\n    fileCheckBox(event, file, ind) {\n      this.deleteImage = event.target.value;\n\n      if (event.target.checked === true) {\n        this.checkedData.push(file);\n      }\n\n      if (event.target.checked === false) {\n        this.unCheckData.push(file);\n        this.unCheckData.forEach((value, index) => {\n          this.checkedData = this.checkedData.filter(_value => {\n            if (value === _value) {\n              return false;\n            } else {\n              return true;\n            }\n          });\n        });\n      }\n    } // Multiple image at a time\n\n\n    registerImage() {\n      this.checkedData.forEach(data => {\n        if (data) {\n          const tempData = data.split('/');\n          let folderPath = '';\n\n          for (let i = 0; i < tempData.length - 1; i++) {\n            folderPath = folderPath + tempData[i] + '/';\n          }\n\n          const param = {};\n          param.containerName = folderPath;\n          param.image = tempData[tempData.length - 1];\n          this.multipleSelected.push(param);\n        }\n      });\n      this.toaster.successToastr('Image inserted successfully');\n      this.close();\n    } // single image at a time\n\n\n    selectFile(file) {\n      const tempData = file.split('/');\n      let folderPath = '';\n\n      for (let i = 0; i < tempData.length - 1; i++) {\n        folderPath = folderPath + tempData[i] + '/';\n      }\n\n      const param = {};\n      param.containerName = folderPath;\n      param.image = tempData[tempData.length - 1];\n      this.multipleSelected.push(param);\n      this.close();\n    }\n    /** calls mediaSandbox searchFolders.\n     * @param from event,\n     * If no value it calls getBucketList.**/\n\n\n    search_Folder(event) {\n      if (event) {\n        const param = {};\n        param.folderName = event;\n        param.search = true;\n        this.isLoadMore = false;\n        this.mediaSandbox.searchFolders(param);\n      } else if (!event) {\n        const folderPath = ' ';\n        this.getBucketList(folderPath);\n        this.isLoadMore = true;\n      }\n    }\n\n    folderPathTitles(file) {}\n\n    folderPathTitle(file) {\n      if (file.charAt(0) === '') {}\n\n      this.folderPathNames = '';\n\n      if (file !== '') {\n        const tempData = file.split('/');\n\n        for (let i = 0; i < tempData.length; i++) {\n          this.folderPathNames += ' > ' + tempData[i];\n        }\n      }\n    } // unsubscribing  all the subscribe event.\n\n\n    ngOnDestroy() {\n      this.subscriptions.forEach(each => {\n        each.unsubscribe();\n      });\n      this.mediaSandbox.clearBucketList();\n    }\n    /**\n     * Handles enhanceName event .\n     *\n     * @param file enhanceName the data by spliting by (/).\n     */\n\n\n    getImage(image) {\n      let folderPath = '/';\n      const tempData = image.split('/');\n      const tempImage = tempData[tempData.length - 1];\n\n      if (tempData.length > 1) {\n        tempData.pop();\n        folderPath = tempData.join('/') + '/';\n      }\n\n      this.globalTempData = tempData; // return this.imageUrls + '?width=120&height=120&path=' + this.currentFolder + '&name=' + tempImage;\n    }\n\n    getMoreBucketList() {\n      this.mediaSandbox.getBucketListData$.subscribe(data => {\n        if (data && Object.keys(data).length) {\n          if (data.NextMarker) {\n            this.offset = data.NextMarker;\n          } else {\n            this.isLoadMore = false;\n          }\n        }\n      });\n      const params = {};\n      params.limit = this.pageSize;\n      params.folderName = this.refreshPath;\n      params.marker = this.offset;\n      this.mediaSandbox.bucketListApi(params);\n    }\n\n  }\n\n  ImagemanagerpopupComponent.ɵfac = function ImagemanagerpopupComponent_Factory(t) {\n    return new (t || ImagemanagerpopupComponent)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i2.MediaSandbox), i0.ɵɵdirectiveInject(i3.ConfigService), i0.ɵɵdirectiveInject(i4.HTTPStatus), i0.ɵɵdirectiveInject(i5.ToastrManager));\n  };\n\n  ImagemanagerpopupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImagemanagerpopupComponent,\n    selectors: [[\"app-imagemanagerpopup\"]],\n    viewQuery: function ImagemanagerpopupComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filePath = _t.first);\n      }\n    },\n    decls: 52,\n    vars: 27,\n    consts: [[1, \"loading-data\", 3, \"hidden\"], [\"src\", \"./assets/loader/Spurt-commerce-Loader-2.1.gif\", 2, \"height\", \"8vh\"], [1, \"image-manager\"], [1, \"modal-header\"], [4, \"ngIf\"], [\"class\", \"modal-title\", \"id\", \"modal-basic-title\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"flex\", \"search-nav\"], [1, \"search-section\"], [\"placeholder\", \"Search\", \"type\", \"text\", 3, \"keyup\"], [1, \"img-action-links\"], [\"id\", \"menu\", 1, \"flex\"], [\"href\", \"javascript:void(0)\", \"placement\", \"bottom\", 3, \"ngbTooltip\", \"click\"], [\"src\", \"assets/img/refresh-ico.png\", \"alt\", \"refresh\"], [\"id\", \"check01\", \"type\", \"checkbox\", \"name\", \"menu\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"check01\", \"placement\", \"bottom\", 3, \"ngbTooltip\"], [\"src\", \"assets/img/file-open-ico.png\", \"alt\", \"open\"], [1, \"submenu\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [\"src\", \"assets/img/delete-file-ico.png\", \"alt\", \"delete\"], [\"type\", \"file\", \"accept\", \"image/*\", 2, \"display\", \"none\", 3, \"change\"], [\"filePath\", \"\"], [\"href\", \"javascript:void(0)\", 1, \"upload-lnk\", 3, \"click\"], [\"href\", \"javascript:void(0)\", \"class\", \"upload-lnk\", 3, \"click\", 4, \"ngIf\"], [1, \"flex\", \"image-row\"], [\"class\", \"image-col\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"load btn\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"modal-title\", 4, \"ngIf\"], [1, \"modal-title\"], [\"id\", \"modal-basic-title\", 1, \"modal-title\"], [\"src\", \"assets/img/back_img_gallary.png\", \"alt\", \"back\"], [1, \"image-col\"], [1, \"img-bdy\"], [\"src\", \"assets/img/file-img.png\", \"alt\", \"file-img\", 3, \"click\"], [1, \"img-bdy\", 3, \"click\"], [3, \"src\"], [\"placement\", \"top\", 1, \"img-name\", 3, \"ngbTooltip\"], [\"type\", \"checkbox\", 3, \"value\", \"change\"], [1, \"load\", \"btn\", 3, \"click\"]],\n    template: function ImagemanagerpopupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, ImagemanagerpopupComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵtemplate(7, ImagemanagerpopupComponent_h4_7_Template, 2, 1, \"h4\", 5);\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_Template_button_click_8_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementStart(9, \"span\", 7);\n        i0.ɵɵtext(10, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelementStart(14, \"input\", 11);\n        i0.ɵɵlistener(\"keyup\", function ImagemanagerpopupComponent_Template_input_keyup_14_listener($event) {\n          return ctx.search_Folder($event.target.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"ul\", 13);\n        i0.ɵɵtemplate(17, ImagemanagerpopupComponent_li_17_Template, 4, 3, \"li\", 4);\n        i0.ɵɵpipe(18, \"async\");\n        i0.ɵɵelementStart(19, \"li\");\n        i0.ɵɵelementStart(20, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_Template_a_click_20_listener() {\n          return ctx.refresh();\n        });\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelement(22, \"img\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"li\");\n        i0.ɵɵelementStart(24, \"input\", 16);\n        i0.ɵɵlistener(\"ngModelChange\", function ImagemanagerpopupComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.isTooltip = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"label\", 17);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵelement(27, \"img\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"ul\", 19);\n        i0.ɵɵelementStart(29, \"li\");\n        i0.ɵɵtext(30, \"Create Folder\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"li\");\n        i0.ɵɵelementStart(32, \"input\", 20);\n        i0.ɵɵlistener(\"ngModelChange\", function ImagemanagerpopupComponent_Template_input_ngModelChange_32_listener($event) {\n          return ctx.textValue = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_Template_button_click_33_listener() {\n          return ctx.createFolder();\n        });\n        i0.ɵɵtext(34, \"Create\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"li\");\n        i0.ɵɵelementStart(36, \"a\", 14);\n        i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_Template_a_click_36_listener() {\n          return ctx.deleteFile();\n        });\n        i0.ɵɵpipe(37, \"translate\");\n        i0.ɵɵelement(38, \"img\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"input\", 23, 24);\n        i0.ɵɵlistener(\"change\", function ImagemanagerpopupComponent_Template_input_change_39_listener($event) {\n          return ctx.uploadImageAction($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"li\");\n        i0.ɵɵelementStart(42, \"a\", 25);\n        i0.ɵɵlistener(\"click\", function ImagemanagerpopupComponent_Template_a_click_42_listener() {\n          return ctx.uploadImage();\n        });\n        i0.ɵɵtext(43, \" Upload \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"li\");\n        i0.ɵɵtemplate(45, ImagemanagerpopupComponent_a_45_Template, 2, 0, \"a\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 27);\n        i0.ɵɵtemplate(47, ImagemanagerpopupComponent_div_47_Template, 5, 1, \"div\", 28);\n        i0.ɵɵpipe(48, \"async\");\n        i0.ɵɵtemplate(49, ImagemanagerpopupComponent_div_49_Template, 6, 4, \"div\", 28);\n        i0.ɵɵpipe(50, \"async\");\n        i0.ɵɵtemplate(51, ImagemanagerpopupComponent_button_51_Template, 2, 0, \"button\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        let tmp_1_0;\n        let tmp_3_0;\n        let tmp_10_0;\n        let tmp_11_0;\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", !ctx.loader);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = i0.ɵɵpipeBind1(6, 13, ctx.mediaSandbox.getBucketListData$)) == null ? null : tmp_1_0.Prefix);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.prefixPath == false);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = i0.ɵɵpipeBind1(18, 15, ctx.mediaSandbox.getBucketListData$)) == null ? null : tmp_3_0.Prefix);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"ngbTooltip\", i0.ɵɵpipeBind1(21, 17, \"catalog.product.ToolTip.Refresh\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.isTooltip);\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"ngbTooltip\", i0.ɵɵpipeBind1(26, 19, \"catalog.product.ToolTip.NewFolder\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.textValue);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"ngbTooltip\", i0.ɵɵpipeBind1(37, 21, \"catalog.product.ToolTip.Delete\"));\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.checkedData.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_10_0 = i0.ɵɵpipeBind1(48, 23, ctx.mediaSandbox.getBucketListData$)) == null ? null : tmp_10_0.CommonPrefixes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", (tmp_11_0 = i0.ɵɵpipeBind1(50, 25, ctx.mediaSandbox.getBucketListData$)) == null ? null : tmp_11_0.Contents);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoadMore);\n      }\n    },\n    directives: [i6.NgIf, i1.NgbTooltip, i7.CheckboxControlValueAccessor, i7.NgControlStatus, i7.NgModel, i7.DefaultValueAccessor, i6.NgForOf],\n    pipes: [i6.AsyncPipe, i8.TranslatePipe],\n    styles: [\".btn-bs-file[_ngcontent-%COMP%]{position:relative}.btn-bs-file[_ngcontent-%COMP%]   input[type=file][_ngcontent-%COMP%]{position:absolute;top:-9999999;filter:alpha(opacity=0);opacity:0;width:0;height:0;outline:none;cursor:inherit}div.imgs[_ngcontent-%COMP%]{padding-left:230px}.close[_ngcontent-%COMP%]{padding-right:20px;padding-top:20px}.scrollbar[_ngcontent-%COMP%]{margin-left:30px;float:left;height:300px;width:65px;background:#fff;overflow-y:scroll;margin-bottom:25px}.force-overflow[_ngcontent-%COMP%]{min-height:450px}.scrollbar-primary[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-primary[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#4285f4}.scrollbar-danger[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-danger[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-danger[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#ff3547}.scrollbar-warning[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-warning[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-warning[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f80}.scrollbar-success[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-success[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-success[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#00c851}.scrollbar-info[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-info[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-info[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#33b5e5}.scrollbar-default[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-default[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-default[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#2bbbad}.scrollbar-secondary[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-secondary[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-secondary[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#a6c}.btn[_ngcontent-%COMP%]{background-color:#1e90ff;border:none;color:#fff;padding:12px 16px;font-size:16px;cursor:pointer}.btn[_ngcontent-%COMP%]:hover{background-color:#87ceeb}.btns[_ngcontent-%COMP%]{background-color:#32cd32;border:none;color:#fff;padding:12px 16px;font-size:16px;cursor:pointer}.scrollbar-pink[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-pink[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-pink[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#ec407a}.scrollbar-indigo[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-indigo[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-indigo[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#3f51b5}.scrollbar-black[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-black[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-black[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#000}.scrollbar-lady-lips[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-lady-lips[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-lady-lips[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-image:linear-gradient(to top,#ff9a9e 0%,#fecfef 99%,#fecfef 100%)}.scrollbar-near-moon[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-color:#f5f5f5;border-radius:10px}.scrollbar-near-moon[_ngcontent-%COMP%]::-webkit-scrollbar{width:12px;background-color:#f5f5f5}.scrollbar-near-moon[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{border-radius:10px;-webkit-box-shadow:inset 0 0 6px rgba(0,0,0,.1);background-image:linear-gradient(to top,#5ee7df 0%,#b490ca 100%)}.bordered-pink[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:none;border:1px solid #ec407a}.bordered-pink[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{-webkit-box-shadow:none}.bordered-indigo[_ngcontent-%COMP%]::-webkit-scrollbar-track{-webkit-box-shadow:none;border:1px solid #3f51b5}.bordered-indigo[_ngcontent-%COMP%]::-webkit-scrollbar-thumb{-webkit-box-shadow:none}.load[_ngcontent-%COMP%]{margin-top:40px;text-align:center;margin-left:370px;height:40px;padding:7px 16px}.img-name[_ngcontent-%COMP%]{text-overflow:ellipsis;overflow:hidden;width:185px;white-space:nowrap}\"]\n  });\n  return ImagemanagerpopupComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
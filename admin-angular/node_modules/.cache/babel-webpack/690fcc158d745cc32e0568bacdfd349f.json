{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Api } from '../../providers/api/api';\nimport * as i0 from \"@angular/core\";\nexport let CategoriesService = /*#__PURE__*/(() => {\n  class CategoriesService extends Api {\n    constructor() {\n      super(...arguments); // url\n\n      this.url = this.getBaseUrl(); // for get method\n\n      this.params = {};\n    } // passing data to category edit\n\n    /**\n     * Handles 'categoryListPagination' function. Calls get method with specific api address\n     * along its param.\n     *\n     * @param params from CategorylistForm.\n     */\n\n\n    categoryListPagination(params) {\n      let reqOpts = {};\n      reqOpts = params;\n      return this.http.get(this.url + '/category-count', {\n        params: reqOpts\n      });\n    }\n    /**\n     * Handles 'updateCategory' function. Calls put method with specific api address\n     * along its param.\n     *\n     * @param params from model.\n     */\n\n\n    updateCategory(params) {\n      return this.http.put(this.url + '/update-category/' + params.categoryId, params);\n    }\n    /**\n     * Handles 'delete' function. Calls delete method with specific api address\n     * along its param.\n     *\n     * @param params from CategorydeleteForm\n     */\n\n\n    delete(params) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        }),\n        body: {\n          categoryId: params.categoryId\n        }\n      };\n      return this.http.delete(this.url + '/delete-category/' + params.categoryId, httpOptions);\n    }\n    /**\n     * Handles 'categoryList' function. Calls get method with specific api address\n     * along its param.\n     *\n     * @param params from CategorylistForm\n     */\n\n\n    categoryList(params) {\n      let reqOpts = {};\n      reqOpts = params;\n      return this.http.get(this.url + '/categoryList', {\n        params: reqOpts\n      });\n    }\n    /**\n     * Handles 'addCategory' function. Calls post method with specific api address\n     * along its param.\n     *\n     * @param param from CategoryForm\n     */\n\n\n    addCategory(param) {\n      return this.http.post(this.url + '/add-category', param);\n    }\n\n    categoryDetails(params) {\n      return this.http.get(this.url + '/category-detail', {\n        params: params\n      });\n    }\n\n    CategoryExportExcel(param) {\n      const reqOpts = {};\n      reqOpts.responseType = 'arraybuffer';\n\n      if (param) {\n        reqOpts.params = new HttpParams();\n\n        for (const k in param) {\n          if (k) {\n            reqOpts.params = reqOpts.params.set(k, param[k]);\n          }\n        }\n      }\n\n      return this.http.get(this.url + '/category-excel-list', reqOpts);\n    }\n\n    ExportAllExcel(param) {\n      const reqOpts = {};\n      reqOpts.responseType = 'arraybuffer';\n\n      if (param) {\n        reqOpts.params = new HttpParams();\n\n        for (const k in param) {\n          if (k) {\n            reqOpts.params = reqOpts.params.set(k, param[k]);\n          }\n        }\n      }\n\n      return this.http.get(this.url + '/category-export-all', reqOpts);\n    }\n\n  }\n\n  CategoriesService.ɵfac = /*@__PURE__*/function () {\n    let ɵCategoriesService_BaseFactory;\n    return function CategoriesService_Factory(t) {\n      return (ɵCategoriesService_BaseFactory || (ɵCategoriesService_BaseFactory = i0.ɵɵgetInheritedFactory(CategoriesService)))(t || CategoriesService);\n    };\n  }();\n\n  CategoriesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoriesService,\n    factory: CategoriesService.ɵfac\n  });\n  return CategoriesService;\n})();","map":null,"metadata":{},"sourceType":"module"}
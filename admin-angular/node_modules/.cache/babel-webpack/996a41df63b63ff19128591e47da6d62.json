{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let TwoDigitDecimaNumberDirective = /*#__PURE__*/(() => {\n  class TwoDigitDecimaNumberDirective {\n    constructor(el) {\n      this.el = el; // Allow decimal numbers and negative values\n\n      this.regex = new RegExp(/^\\d*\\.?\\d{0,2}$/g); // Allow key codes for special events. Reflect :\n      // Backspace, tab, end, home\n\n      this.specialKeys = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];\n    }\n\n    onKeyDown(event) {\n      // Allow Backspace, tab, end, and home keys\n      if (this.specialKeys.indexOf(event.key) !== -1) {\n        return;\n      }\n\n      let current = this.el.nativeElement.value;\n      const position = this.el.nativeElement.selectionStart;\n      const next = [current.slice(0, position), event.key === 'Decimal' ? '.' : event.key, current.slice(position)].join('');\n\n      if (next && !String(next).match(this.regex)) {\n        event.preventDefault();\n      }\n    }\n\n  }\n\n  TwoDigitDecimaNumberDirective.ɵfac = function TwoDigitDecimaNumberDirective_Factory(t) {\n    return new (t || TwoDigitDecimaNumberDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  TwoDigitDecimaNumberDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TwoDigitDecimaNumberDirective,\n    selectors: [[\"\", \"appTwoDigitDecimaNumber\", \"\"]],\n    hostBindings: function TwoDigitDecimaNumberDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function TwoDigitDecimaNumberDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    }\n  });\n  return TwoDigitDecimaNumberDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}
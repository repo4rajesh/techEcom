{"ast":null,"code":"import * as pagesActions from './pagesaction/page.action';\nimport { pagesList, pageCount, pageCountLoading, pageDetails, pageDetailsLoaded, pageDetailsLoading, groupList, pagesListCount, addPages, addPagesStatus, updatePages, pagesDelete, pageActiveCount, pageInactiveCount } from './pages-reducer/page.selector';\nimport { PageslistModel } from './pages-model/pageslist.model';\nimport { PagesaddModel } from './pages-model/pagesadd.model';\nimport { PagesupdateModel } from './pages-model/pagesupdate.model';\nimport { PagescountModel } from './pages-model/pagescount.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let PagesSandbox = /*#__PURE__*/(() => {\n  class PagesSandbox {\n    constructor(appState, router) {\n      this.appState = appState;\n      this.router = router;\n      this.subscriptions = [];\n      this.pagesList$ = this.appState.select(pagesList);\n      this.pagesListCount$ = this.appState.select(pagesListCount);\n      this.addPages$ = this.appState.select(addPages);\n      this.addPagesStatus$ = this.appState.select(addPagesStatus);\n      this.updatePages$ = this.appState.select(updatePages);\n      this.pagesDelete$ = this.appState.select(pagesDelete);\n      this.activePageCount$ = this.appState.select(pageActiveCount);\n      this.inactivePageCount$ = this.appState.select(pageInactiveCount);\n      this.pageCount$ = this.appState.select(pageCount);\n      this.pageCountLoading$ = this.appState.select(pageCountLoading);\n      this.pageDetails$ = this.appState.select(pageDetails);\n      this.pageDetailsLoading$ = this.appState.select(pageDetailsLoading);\n      this.pageDetailsLoaded$ = this.appState.select(pageDetailsLoaded);\n      this.groupList$ = this.appState.select(groupList);\n      this.subscribe();\n    }\n\n    getPagesList(value) {\n      this.appState.dispatch(new pagesActions.DoPagesListAction(new PageslistModel(value)));\n    } //  update\n\n\n    updatePagesList(value) {\n      this.appState.dispatch(new pagesActions.DoUpdatepagesAction(new PagesupdateModel(value)));\n    } //  pagination\n\n\n    getPagePagination(value) {\n      this.appState.dispatch(new pagesActions.DoPagescountListAction(new PagescountModel(value)));\n    } //  active pages count\n\n\n    getActivePageCount(value) {\n      this.appState.dispatch(new pagesActions.GetActiveCount(value));\n    } //  inactive pages count\n\n\n    getInactivePageCount(value) {\n      this.appState.dispatch(new pagesActions.GetInactiveCount(value));\n    } //  add pages\n\n\n    getAddpages(data) {\n      this.appState.dispatch(new pagesActions.DoAddPagesAction(new PagesaddModel(data)));\n    } //  delete  list  page\n\n\n    deletePagesList(value) {\n      this.appState.dispatch(new pagesActions.DoPagesDeleteAction(value));\n    } // Do Product Bulk Delete\n\n\n    bulkDelete(value) {\n      this.appState.dispatch(new pagesActions.DoPagesBulkDelete(value));\n    } // Get Page Overall count\n\n\n    getPageCount() {\n      this.appState.dispatch(new pagesActions.GetPageCountAction());\n    } // Get Page Details\n\n\n    getPageDetails(value) {\n      this.appState.dispatch(new pagesActions.GetPageDetailsAction(value));\n    }\n\n    getGroupList(value) {\n      this.appState.dispatch(new pagesActions.GroupListAction(value));\n    }\n\n    subscribe() {\n      this.subscriptions.push(this.pagesDelete$.subscribe(data => {\n        if (data && data.message) {\n          if (data.status === 1) {\n            this.router.navigate(['/cms/pages/list']);\n          }\n        }\n      }));\n    }\n\n    ngOnDestroy() {\n      {\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n      }\n    }\n\n  }\n\n  PagesSandbox.ɵfac = function PagesSandbox_Factory(t) {\n    return new (t || PagesSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n\n  PagesSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PagesSandbox,\n    factory: PagesSandbox.ɵfac\n  });\n  return PagesSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
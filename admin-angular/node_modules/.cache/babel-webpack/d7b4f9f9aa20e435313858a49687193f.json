{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../../../core/admin/Customers/customers/customer.sandbox\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i4 from \"@ngx-translate/core\";\nexport let CustomerFilterComponent = /*#__PURE__*/(() => {\n  class CustomerFilterComponent {\n    constructor(fb, sandbox) {\n      this.fb = fb;\n      this.sandbox = sandbox;\n      this.pageSize = 10;\n      this.offset = 0;\n      this.pagination = 1;\n      this.ProgressEmit = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.pageSize = sessionStorage.getItem('itemsPerPage');\n      this.todaysDate = {\n        year: new Date().getFullYear(),\n        month: new Date().getMonth() + 1,\n        day: new Date().getDate()\n      };\n      this.initForm();\n    }\n\n    initForm() {\n      this.custftrform = this.fb.group({\n        email: [null, [Validators.required]],\n        custDate: [null, [Validators.required]],\n        customername: [null, [Validators.required]]\n      });\n    }\n\n    reset() {\n      if (this.custftrform.value.email || this.fromDate || this.custftrform.value.customername || this.custftrform.value.custDate) {\n        this.custftrform.reset();\n        const param = {};\n        param.limit = this.pageSize;\n        this.custftrform.value.custDate = \"\";\n        param.offset = '';\n        param.keyword = '';\n        this.fromDate = '';\n        param.pageSize = this.pageSize;\n        this.ProgressEmit.emit(param);\n        this.sandbox.customerList(param);\n        param.count = 1;\n        this.sandbox.paginationCustomer(param);\n      }\n    }\n\n    onDateSelect(event) {\n      this.miniDate = event;\n    }\n\n    onSubmit() {\n      const param = {};\n      param.limit = this.pageSize;\n      param.offset = this.offset;\n      param.name = this.custftrform.value.customername ? this.custftrform.value.customername : '';\n      param.email = this.custftrform.value.email ? this.custftrform.value.email : '';\n      const form = this.custftrform.value.custDate;\n\n      if (form && form.year) {\n        this.fromDate = form ? form.year + '-' + ('0' + form.month).slice(-2) + '-' + ('0' + form.day).slice(-2) : null;\n      }\n\n      param.date = this.fromDate ? this.fromDate : '';\n      this.ProgressEmit.emit(param);\n    }\n\n  }\n\n  CustomerFilterComponent.ɵfac = function CustomerFilterComponent_Factory(t) {\n    return new (t || CustomerFilterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerSandbox));\n  };\n\n  CustomerFilterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CustomerFilterComponent,\n    selectors: [[\"app-customer-filter\"]],\n    outputs: {\n      ProgressEmit: \"ProgressEmit\"\n    },\n    decls: 26,\n    vars: 23,\n    consts: [[1, \"filter-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"keyboard\"], [\"type\", \"text\", \"formControlName\", \"customername\", \"id\", \"keyboard\", \"aria-describedby\", \"emailHelp\", 1, \"form-control\", 3, \"placeholder\"], [\"for\", \"sku\"], [\"type\", \"text\", \"formControlName\", \"email\", \"id\", \"sku\", 1, \"form-control\", 3, \"placeholder\"], [1, \"control-label\"], [\"readonly\", \"\", \"type\", \"text\", \"formControlName\", \"custDate\", \"placeholder\", \"dd/mm/yyyy\", \"name\", \"dp\", \"id\", \"cal-in\", \"ngbDatepicker\", \"\", 1, \"form-control\", \"date\", 2, \"cursor\", \"pointer\", 3, \"maxDate\", \"dateSelect\", \"click\"], [\"f\", \"ngbDatepicker\"], [1, \"text-right\", \"filter-btns\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\"]],\n    template: function CustomerFilterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CustomerFilterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵpipe(4, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 1);\n        i0.ɵɵelementStart(8, \"label\", 4);\n        i0.ɵɵtext(9);\n        i0.ɵɵpipe(10, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 1);\n        i0.ɵɵelementStart(14, \"label\", 6);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 7, 8);\n        i0.ɵɵlistener(\"dateSelect\", function CustomerFilterComponent_Template_input_dateSelect_17_listener($event) {\n          return ctx.onDateSelect($event);\n        })(\"click\", function CustomerFilterComponent_Template_input_click_17_listener() {\n          i0.ɵɵrestoreView(_r1);\n\n          const _r0 = i0.ɵɵreference(18);\n\n          return _r0.toggle();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"a\", 10);\n        i0.ɵɵlistener(\"click\", function CustomerFilterComponent_Template_a_click_20_listener() {\n          return ctx.reset();\n        });\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"button\", 11);\n        i0.ɵɵtext(24);\n        i0.ɵɵpipe(25, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.custftrform);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(4, 9, \"Customers.Customer.CustomerName\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(6, 11, \"Customers.Customer.CustomerName\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(10, 13, \"Customers.Customer.Email\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(12, 15, \"Customers.Customer.Email\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(16, 17, \"Customers.Customer.DateAdded\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"maxDate\", ctx.todaysDate);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 19, \"Sales.Orders.Reset\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(25, 21, \"Sales.Orders.ApplyFilters\"), \" \");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.NgbInputDatepicker],\n    pipes: [i4.TranslatePipe],\n    styles: [\".filter_btn[_ngcontent-%COMP%]{background-color:#21ad64!important}\"]\n  });\n  return CustomerFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
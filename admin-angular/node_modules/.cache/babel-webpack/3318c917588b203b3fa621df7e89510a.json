{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport * as actions from '../../../localizations/country/country-action/country.action';\nimport { CountryRecordState } from './country.state';\nimport { CountryListResponseModel } from '../country-model/countrylist.response.model';\nexport const initialState = new CountryRecordState();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    case actions.ActionTypes.DO_NEW_COUNTRY:\n      {\n        return Object.assign({}, state, {\n          addLoading: true,\n          addLoaded: false,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_COUNTRY:\n      {\n        return Object.assign({}, state, {\n          updateLoading: true,\n          updateCountryLoaded: false,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_LIST:\n      {\n        return Object.assign({}, state, {\n          listLoading: true,\n          listLoaded: false,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_COUNT_ACTION:\n      {\n        return Object.assign({}, state, {\n          countLoading: true,\n          countLoaded: false,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_COUNTRY_DELETE:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: true,\n          deleteLoaded: false,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_NEW_COUNTRY_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          newCountry: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_COUNTRY_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          updateCountry: payload,\n          updateLoading: false,\n          updateCountryLoaded: true,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_LIST_SUCCESS:\n      {\n        const contryList = payload.data.map(_roles => {\n          const tempListModel = new CountryListResponseModel(_roles);\n          return tempListModel;\n        });\n        return Object.assign({}, state, {\n          countryList: contryList,\n          listLoading: false,\n          listLoaded: true,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_COUNT_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          countryCount: payload.data,\n          countLoading: false,\n          countLoaded: true,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_COUNTRY_DELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          countryDelete: payload,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_NEW_COUNTRY_FAIL:\n      {\n        return Object.assign({}, state, {\n          newCountry: payload,\n          addLoading: false,\n          updateLoaded: true,\n          addFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_COUNTRY_FAIL:\n      {\n        return Object.assign({}, state, {\n          updateCountry: payload,\n          updateLoading: false,\n          updateCountryLoaded: false,\n          updateFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_COUNTRY_DELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          countryDelete: payload,\n          failed: true,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_LIST_FAIL:\n      {\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_COUNTRY_COUNT_FAIL:\n      {\n        return Object.assign({}, state, {\n          countLoading: false,\n          countLoaded: true,\n          countFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const getAddCountry = state => state.newCountry;\nexport const getUpdateCountry = state => state.updateCountry;\nexport const getUpdateCountryLoaded = state => state.updateCountryLoaded;\nexport const getDeleteCountry = state => state.countryDelete;\nexport const countryList = state => state.countryList;\nexport const getCoutryCount = state => state.countryCount;\nexport const getCountryListLoading = state => state.listLoading;\nexport const getCountryListLoaded = state => state.listLoaded;\nexport const getCountryListFailed = state => state.listFailed;\nexport const getCountryCountLoading = state => state.countLoading;\nexport const getCountryCountLoaded = state => state.countLoaded;\nexport const getCountryCountFailed = state => state.countFailed;\nexport const getCountryAddLoading = state => state.addLoading;\nexport const getCountryAddLoaded = state => state.addLoaded;\nexport const getCountryAddFailed = state => state.addFailed;\nexport const getCountryUpdateLoading = state => state.updateLoading;\nexport const getCountryUpdateLoaded = state => state.updateLoaded;\nexport const getCountryUpdateFailed = state => state.updateFailed;\nexport const getCountryDeleteLoading = state => state.deleteLoading;\nexport const getCountryDeleteLoaded = state => state.deleteLoaded;\nexport const getCountryDeleteFailed = state => state.deleteFailed;","map":null,"metadata":{},"sourceType":"module"}
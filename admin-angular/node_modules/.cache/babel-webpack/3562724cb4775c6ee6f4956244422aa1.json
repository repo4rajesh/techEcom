{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { createSelector } from 'reselect';\nimport * as fromBrand from './brand.reducer';\nexport const getBrandState = state => state.brand; // manufacturer list\n\nexport const getManufacturerList = createSelector(getBrandState, fromBrand.getManufacturerList);\nexport const manufacturerListLoading = createSelector(getBrandState, fromBrand.getManufacturerListLoading);\nexport const manufacturerListLoaded = createSelector(getBrandState, fromBrand.getManufactuerListLoaded);\nexport const manufacturerListFailed = createSelector(getBrandState, fromBrand.getmanufacturerListFailed); // manufacturer count\n\nexport const getManufacturerContdata = createSelector(getBrandState, fromBrand.getManufacturerCount);\nexport const manufacturerCountLoading = createSelector(getBrandState, fromBrand.getManufacturerCountLoading);\nexport const manufacturerCountLoaded = createSelector(getBrandState, fromBrand.getManufacturerCountLoaded);\nexport const manufacturerCountFailed = createSelector(getBrandState, fromBrand.getManufacturerCountFailed); // manufacturer add\n\nexport const getManufacturerAdd = createSelector(getBrandState, fromBrand.getManufacturerAdd);\nexport const manufacturerAddLoading = createSelector(getBrandState, fromBrand.getManufacturerAddLoading);\nexport const manufacturerAddLoaded = createSelector(getBrandState, fromBrand.getManufacturerAddLoaded);\nexport const manufacturerAddFailed = createSelector(getBrandState, fromBrand.getManufacturerAddFailed); // manufacturer update\n\nexport const getManufacturerUpdate = createSelector(getBrandState, fromBrand.getManufacturerUpdate);\nexport const manufacturerUpdateLoading = createSelector(getBrandState, fromBrand.getManufacturerUpdateLoading);\nexport const manufacturerUpdateLoaded = createSelector(getBrandState, fromBrand.getManufacturerUpdateLoaded);\nexport const manufacturerUpdateFailed = createSelector(getBrandState, fromBrand.getManufacturerUpdateFailed); // manufacturer delete\n\nexport const getManufacturerDelete = createSelector(getBrandState, fromBrand.getManufacturerDelete);\nexport const manufacturerDeleteLoading = createSelector(getBrandState, fromBrand.getManufacturerDeleteLoading);\nexport const manufacturerDeleteLoaded = createSelector(getBrandState, fromBrand.getManufacturerDeleteLoaded);\nexport const manufacturerDeleteFailed = createSelector(getBrandState, fromBrand.getManufacturerDeleteFailed);\nexport const bulkDelete = createSelector(getBrandState, fromBrand.bulkDelete);\nexport const bulkDeleteLoading = createSelector(getBrandState, fromBrand.bulkDeleteLoading);\nexport const bulkDeleteLoaded = createSelector(getBrandState, fromBrand.bulkDeleteLoaded);","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { environment } from '../environments/environment';\nimport * as fromAuth from './admin/auth/reducer/auth.reducer';\nimport * as fromCommon from './admin/logout/reducer/common.reducer';\nimport * as fromProduct from './admin/catalog/product/product-reducer/product.reducer';\nimport * as fromorder from './admin/settings/localizations/orderstatus/orderstatus-reducer/orderstatus.reducer';\nimport * as fromCustomers from './admin/Customers/customers/customer-reducer/customer.reducer';\nimport * as fromCountry from './admin/settings/localizations/country/country-reducer/country.reducer';\nimport * as fromZone from './admin/settings/localizations/zone/zone-reducer/zone.reducer';\nimport * as fromRole from './admin/settings/role/role-reducer/role.reducer';\nimport * as fromPermission from './admin/settings/permission/permission-reducer/permission.reducer';\nimport * as fromPages from './admin/cms/pages/pages-reducer/pages.reducer';\nimport * as fromUser from './admin/settings/user/user-reducer/user.reducer';\nimport * as fromBanner from './admin/cms/banners/banner-reducer/banner.reducer';\nimport * as fromEmailtemp from './admin/settings/localizations/emailtemplate/emailtemp-reducer/emailtemp.reducer';\nimport * as fromStockstatus from './admin/settings/localizations/stockStatus/stock-reducer/stock.reducer';\nimport * as fromSalesorder from './admin/sales/orders/orders-reducer/orders.reducer';\nimport * as fromEditprofile from './admin/profile/editprofile/reducer/editprofile.reducer';\nimport * as fromChangepassword from './admin/profile/changepassword/changepassword-reducer/changepassword.reducer';\nimport * as fromCategories from './admin/catalog/category/reducer/categories.reducer';\nimport * as fromBrand from './admin/catalog/brand/reducer/brand.reducer';\nimport * as fromMedia from './admin/catalog/media/reducer/media.reducer';\nimport * as fromDashboard from './admin/dashboard/reducer/dashboard.reducer';\nimport * as fromGeneralSetting from './admin/settings/generalsetting/generalsetting-reducer/generalsetting.reducer';\nimport * as fromSocial from './admin/settings/siteSettings/social/social-reducer/social.reducer';\nimport * as fromseoSetting from './admin/settings/siteSettings/seo/seo-reducer/seo-reducer';\nimport * as fromLayoutCatalog from './admin/catalog/layout/reducer/layout.reducer';\nimport * as fromLayoutCustomer from './admin/Customers/layout/reducer/layout.reducer';\nimport * as fromLayoutSales from './admin/sales/layout/reducer/layout.reducer';\nimport * as fromPersonalizeProduct from './admin/settings/personalize/product/product-reducer/product-reducer';\nimport * as fromPersonalizeOrder from './admin/settings/personalize/order/order-reducer/order-reducer';\nimport * as fromLayout from './admin/layout/reducer/layout.reducer';\nimport * as fromSizeChart from './admin/settings/siteSettings/sizechart/sizechart-reducer/sizechart.reducer';\nimport * as fromAuditLog from './admin/reports/audit-log/reducer/audit-log.reducer';\nimport * as fromOrderfullfillment from './admin/settings/order-fullfilment/reducer/order-fullfilment.reducer';\n/**\n * The compose function is one of our most handy tools. In basic terms, you give\n * it any number of functions and it returns a function. This new function\n * takes a value and chains it through every composed function, returning\n * the output.\n *\n * More: https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch5.html\n */\n\n/**\n * storeFreeze prevents state from being mutated. When mutation occurs, an\n * exception will be thrown. This is useful during development mode to\n * ensure that none of the reducers accidentally mutates the state.\n */\n\nexport const reducers = {\n  auth: fromAuth.reducer,\n  auditLog: fromAuditLog.reducer,\n  common: fromCommon.reducer,\n  media: fromMedia.reducer,\n  categories: fromCategories.reducer,\n  brand: fromBrand.reducer,\n  product: fromProduct.reducer,\n  changepassword: fromChangepassword.reducer,\n  customer: fromCustomers.reducer,\n  orderStatus: fromorder.reducer,\n  country: fromCountry.reducer,\n  zone: fromZone.reducer,\n  Orderfullfillment: fromOrderfullfillment.reducer,\n  role: fromRole.reducer,\n  permission: fromPermission.reducer,\n  pages: fromPages.reducer,\n  user: fromUser.reducer,\n  banner: fromBanner.reducer,\n  emailtemp: fromEmailtemp.reducer,\n  stockstatus: fromStockstatus.reducer,\n  salesorder: fromSalesorder.reducer,\n  editprofile: fromEditprofile.reducer,\n  dashboard: fromDashboard.reducer,\n  generalsetting: fromGeneralSetting.reducer,\n  social: fromSocial.reducer,\n  seosetting: fromseoSetting.reducer,\n  catalogLayout: fromLayoutCatalog.reducer,\n  customerLayout: fromLayoutCustomer.reducer,\n  salesLayout: fromLayoutSales.reducer,\n  personalizeProduct: fromPersonalizeProduct.reducer,\n  personalizeOrder: fromPersonalizeOrder.reducer,\n  layout: fromLayout.reducer,\n  sizechart: fromSizeChart.reducer\n};\nexport function logger(reducer) {\n  return function (state, action) {\n    if (action.type === '[Common] Do Clear') {\n      state = undefined;\n    }\n\n    return reducer(state, action);\n  };\n}\n/**\n * By default, @ngrx/store uses combineReducers with the reducer map to compose\n * the root meta-reducer. To filter more meta-reducers, provide an array of meta-reducers\n * that will be composed to form the root meta-reducer.\n */\n\nexport const metaReducers = !environment.production ? [logger] : [];","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { DefaultCommonModule } from '../../../../default.common.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // Store Actions\n\nimport { EffectsModule } from '@ngrx/effects';\nimport { MaterialModule } from '../../../../default.material.module';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { ProductEffect } from '../../../../../../core/admin/catalog/product/product-effect/product.effect';\nimport { ProductService } from '../../../../../../core/admin/catalog/product/product.service';\nimport { ProductSandbox } from '../../../../../../core/admin/catalog/product/product.sandbox'; // Routing Module\n\nimport { ProductRoutingModule } from './product.routing'; // Shared Modules\n\nimport { NumberAcceptModule } from '../../../../../../core/admin/shared/validation-directives/onlyNumber.module'; // ENTRY COMPONENTS\n\nimport { CKEditorModule } from 'ng2-ckeditor';\nimport { HttpLoaderFactory } from '../../../admin.module';\nimport { HttpClient } from '@angular/common/http';\nimport { DatePipe } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ComponentsModule } from '../../../shared/components';\nimport { PipeModule } from '../../../shared/components/pipes/category-search.pipe.module';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@ngx-translate/core\";\nexport let ProductModule = /*#__PURE__*/(() => {\n  class ProductModule {}\n\n  ProductModule.ɵfac = function ProductModule_Factory(t) {\n    return new (t || ProductModule)();\n  };\n\n  ProductModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: ProductModule\n  });\n  ProductModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [DatePipe, ProductService, ProductSandbox],\n    imports: [[CommonModule, DefaultCommonModule, FormsModule, ComponentsModule, ReactiveFormsModule, ProductRoutingModule, MaterialModule, PipeModule, EffectsModule.forFeature([ProductEffect]), TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      }\n    }), CKEditorModule, NumberAcceptModule, NgbModule]]\n  });\n  return ProductModule;\n})();","map":null,"metadata":{},"sourceType":"module"}
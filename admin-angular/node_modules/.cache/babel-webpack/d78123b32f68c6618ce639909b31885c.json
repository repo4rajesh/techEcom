{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport * as actions from '../../../localizations/emailtemplate/emailtemp-action/emailtemp.action';\nimport { EmailTempRecordState } from './emailtemp.state';\nimport { EmailTempListResponseModel } from '../emailtemp-model/emailtemplist.response.model';\nexport const initialState = new EmailTempRecordState();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    case actions.ActionTypes.DO_NEW_EMAIL_TEMP_ACTION:\n      {\n        return Object.assign({}, state, {\n          addLoading: true,\n          addLoaded: false,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_EMAIL_TEMP_ACTION:\n      {\n        return Object.assign({}, state, {\n          updateLoading: true,\n          updateLoaded: false,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_EMAIL_TEMP_LIST_ACTION:\n      {\n        return Object.assign({}, state, {\n          listLoading: true,\n          listLoaded: false,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_EMAIL_TEMP_COUNT_ACTION:\n      {\n        return Object.assign({}, state, {\n          countLoading: true,\n          countLoaded: false,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_EMAIL_TEMP_DELETE:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: true,\n          deleteLoaded: false,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_NEW_EMAIL_TEMP_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          newEmailTemp: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_EMAIL_TEMP_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          updateEmailTemp: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_EMAIL_TEMP_LIST_SUCCESS:\n      {\n        const emailTempList = payload.data.map(_template => {\n          const tempListModel = new EmailTempListResponseModel(_template);\n          return tempListModel;\n        });\n        return Object.assign({}, state, {\n          emailTempList: emailTempList,\n          listLoading: false,\n          listLoaded: true,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_EMAIL_TEMP_COUNT_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          emailTempPagination: payload.data,\n          countLoading: false,\n          countLoaded: true,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_EMAIL_TEMP_DELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          emailTempDelete: payload,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_NEW_EMAIL_TEMP_FAIL:\n      {\n        return Object.assign({}, state, {\n          newEmailTemp: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_EMAIL_TEMP_FAIL:\n      {\n        return Object.assign({}, state, {\n          updateEmailTemp: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_EMAIL_TEMP_DELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          emailTempDelete: payload,\n          failed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_EMAIL_TEMP_LIST_FAIL:\n      {\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const getAddEmailTemp = state => state.newEmailTemp;\nexport const updateEmailTemp = state => state.updateEmailTemp;\nexport const emailTempDelete = state => state.emailTempDelete;\nexport const emailTempList = state => state.emailTempList;\nexport const emailTempPagination = state => state.emailTempPagination;\nexport const getEmailTempListLoading = state => state.listLoading;\nexport const getEmailTempListLoaded = state => state.listLoaded;\nexport const getEmailTempListFailed = state => state.listFailed;\nexport const getEmailTempCountLoading = state => state.countLoading;\nexport const getEmailTempCountLoaded = state => state.countLoaded;\nexport const getEmailTempCountFailed = state => state.countFailed;\nexport const getEmailTempAddLoading = state => state.addLoading;\nexport const getEmailTempAddLoaded = state => state.addLoaded;\nexport const getEmailTempAddFailed = state => state.addFailed;\nexport const getEmailTempUpdateLoading = state => state.updateLoading;\nexport const getEmailTempUpdateLoaded = state => state.updateLoaded;\nexport const getEmailTempUpdateFailed = state => state.updateFailed;\nexport const getEmailTempDeleteLoading = state => state.deleteLoading;\nexport const getEmailTempDeleteLoaded = state => state.deleteLoaded;\nexport const getEmailTempDeleteFailed = state => state.deleteFailed;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { RouterModule, PreloadAllModules } from '@angular/router';\nimport { CommonLayoutComponent } from './layout/common/common.component';\nimport { AuthGuard } from '../../../core/admin/providers/auth.guard';\nimport { EditprofileComponent } from './layout/editprofile/editprofile.component';\nimport { AuthLayoutComponent } from './layout/auth/auth.component';\nimport { SetPasswordComponent } from './authentication/set-password/set-password.component';\nimport { TokenExpireComponent } from './authentication/token-expire/token-expire.component';\nimport { TokenInvalidComponent } from './authentication/token-invalid/token-invalid.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport const appRoutes = [{\n  path: '',\n  component: CommonLayoutComponent,\n  canActivate: [AuthGuard],\n  children: [{\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full'\n  }, {\n    path: 'editprofile',\n    component: EditprofileComponent,\n    data: {\n      urls: [{\n        title: 'Settings',\n        url: ''\n      }, {\n        title: 'Edit Profile',\n        url: ''\n      }]\n    }\n  }, {\n    path: 'dashboard',\n    loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'catalog',\n    loadChildren: () => import('./catalog/catalog.module').then(m => m.CatalogModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'settings',\n    loadChildren: () => import('./settings/settings.module').then(m => m.SettingsModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'sales',\n    loadChildren: () => import('./sales/sales.module').then(m => m.SalesModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'customers',\n    loadChildren: () => import('./customers/customers.module').then(m => m.CustomersModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'cms',\n    loadChildren: () => import('./cms/cms.module').then(m => m.CMSModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'change-password',\n    loadChildren: () => import('./layout/changepassword/changepassword.module').then(m => m.ChangePasswordModule)\n  }]\n}, {\n  path: 'auth',\n  component: AuthLayoutComponent,\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./authentication/authentication.module').then(m => m.AuthenticationModule)\n}, {\n  path: 'set-password',\n  component: SetPasswordComponent\n}, {\n  path: 'token-expired',\n  component: TokenExpireComponent\n}, {\n  path: 'invalid-token',\n  component: TokenInvalidComponent\n}, {\n  path: 'error',\n  loadChildren: () => import(`./error/error.module`).then(m => m.ErrorModule)\n}, {\n  path: '**',\n  redirectTo: '/error/404'\n}];\nexport let DefaultRoutingModule = /*#__PURE__*/(() => {\n  class DefaultRoutingModule {}\n\n  DefaultRoutingModule.ɵfac = function DefaultRoutingModule_Factory(t) {\n    return new (t || DefaultRoutingModule)();\n  };\n\n  DefaultRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: DefaultRoutingModule\n  });\n  DefaultRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(appRoutes, {\n      preloadingStrategy: PreloadAllModules\n    })], RouterModule]\n  });\n  return DefaultRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport { StockRecordState } from './stock.state';\nimport * as actions from '../stock-action/stock.action';\nimport { StockStatusListResponseModel } from '../stock-model/stockstatuslist.response.model';\nexport const initialState = new StockRecordState();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    // stock actions\n    case actions.ActionTypes.DO_STOCKLIST:\n      {\n        return Object.assign({}, state, {\n          listLoading: true,\n          listLoaded: false,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_NEWSTOCKLIST:\n      {\n        return Object.assign({}, state, {\n          addLoading: true,\n          addLoaded: false,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.Do_STOCkLISTCOUNT:\n      {\n        return Object.assign({}, state, {\n          countLoading: true,\n          countLoaded: false,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_STOCKUPDATE:\n      {\n        return Object.assign({}, state, {\n          updateLoading: true,\n          updateLoaded: false,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_STOCKDELETE:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: true,\n          deleteLoaded: false,\n          deleteFailed: false\n        });\n      }\n    // stock list success\n\n    case actions.ActionTypes.DO_STOCKLIST_SUCCESS:\n      {\n        const stocksList = payload.data.map(_roles => {\n          const tempListModel = new StockStatusListResponseModel(_roles);\n          return tempListModel;\n        });\n        return Object.assign({}, state, {\n          stockList: stocksList,\n          listLoading: false,\n          listLoaded: true,\n          listFailed: false\n        });\n      }\n    // stock add success\n\n    case actions.ActionTypes.DO_NEWSTOCKLIST_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          newStockList: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: false\n        });\n      }\n    // stock count success\n\n    case actions.ActionTypes.Do_STOCkLISTCOUNT_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          stockListCount: payload,\n          countLoading: false,\n          countLoaded: true,\n          countFailed: false\n        });\n      }\n    // stock update success\n\n    case actions.ActionTypes.DO_STOCKUPDATE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          stockUpdate: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: false\n        });\n      }\n    // stock delete success\n\n    case actions.ActionTypes.DO_STOCKDELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          stockdelete: payload,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: false\n        });\n      }\n    // stock fail action\n\n    case actions.ActionTypes.DO_STOCKLIST_FAIL:\n      {\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_NEWSTOCKLIST_FAIL:\n      return Object.assign({}, state, {\n        newStockList: payload,\n        addLoading: false,\n        addLoaded: true,\n        addFailed: true\n      });\n\n    case actions.ActionTypes.Do_STOCkLISTCOUNT_FAIL:\n      {\n        return Object.assign({}, state, {\n          countLoading: false,\n          countLoaded: true,\n          countFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_STOCKUPDATE_FAIL:\n      {\n        return Object.assign({}, state, {\n          failed: true,\n          stockUpdate: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_STOCKDELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          stockdelete: payload,\n          failed: true,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const getStockList = state => state.stockList;\nexport const getNewStock = state => state.newStockList;\nexport const getStockcount = state => state.stockListCount;\nexport const getstockUpdate = state => state.stockUpdate;\nexport const getstockdelete = state => state.stockdelete;\nexport const getStockStatusListLoading = state => state.listLoading;\nexport const getStockStatusListLoaded = state => state.listLoaded;\nexport const getStockStatusListFailed = state => state.listFailed;\nexport const getStockStatusCountLoading = state => state.countLoading;\nexport const getStockStatusCountLoaded = state => state.countLoaded;\nexport const getStockStatusCountFailed = state => state.countFailed;\nexport const getStockStatusAddLoading = state => state.addLoading;\nexport const getStockStatusAddLoaded = state => state.addLoaded;\nexport const getStockStatusAddFailed = state => state.addFailed;\nexport const getStockStatusUpdateLoading = state => state.updateLoading;\nexport const getStockStatusUpdateLoaded = state => state.updateLoaded;\nexport const getStockStatusUpdateFailed = state => state.updateFailed;\nexport const getStockStatusDeleteLoading = state => state.deleteLoading;\nexport const getStockStatusDeleteLoaded = state => state.deleteLoaded;\nexport const getStockStatusDeleteFailed = state => state.deleteFailed;","map":null,"metadata":{},"sourceType":"module"}
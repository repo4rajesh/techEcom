{"ast":null,"code":"import * as zoneActions from './action/order-fullfilment.action';\nimport { addOrderfullfillment, addOrderfullfillmentFailed, addOrderfullfillmentLoaded, addOrderfullfillmentLoading, Orderfullfillmentlist, OrderfullfillmentlistFailed, OrderfullfillmentlistLoaded, OrderfullfillmentlistLoading, orderfullfillmentstatus, orderfullfillmentstatusFailed, orderfullfillmentstatusLoaded, orderfullfillmentstatusLoading, updateOrderfullfillment, updateOrderfullfillmentFailed, updateOrderfullfillmentLoaded, updateOrderfullfillmentLoading } from './reducer/order-fullfilment.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let OrderfullfillmentSandbox = /*#__PURE__*/(() => {\n  class OrderfullfillmentSandbox {\n    constructor(appState, router) {\n      this.appState = appState;\n      this.router = router;\n      /*Order fullFillment List*/\n\n      this.Orderfullfillmentlist$ = this.appState.select(Orderfullfillmentlist);\n      this.OrderfullfillmentlistLoading$ = this.appState.select(OrderfullfillmentlistLoading);\n      this.OrderfullfillmentlistLoaded$ = this.appState.select(OrderfullfillmentlistLoaded);\n      this.OrderfullfillmentlistFailed$ = this.appState.select(OrderfullfillmentlistFailed);\n      this.addOrderfullfillment$ = this.appState.select(addOrderfullfillment);\n      this.addOrderfullfillmentLoading$ = this.appState.select(addOrderfullfillmentLoading);\n      this.addOrderfullfillmentLoaded$ = this.appState.select(addOrderfullfillmentLoaded);\n      this.addOrderfullfillmentFailed$ = this.appState.select(addOrderfullfillmentFailed);\n      /*Order fullFillment Status*/\n\n      this.orderfullfillmentstatus$ = this.appState.select(orderfullfillmentstatus);\n      this.orderfullfillmentstatusLoading$ = this.appState.select(orderfullfillmentstatusLoading);\n      this.orderfullfillmentstatusLoaded$ = this.appState.select(orderfullfillmentstatusLoaded);\n      this.orderfullfillmentstatusFailed$ = this.appState.select(orderfullfillmentstatusFailed);\n      /*Update Order fullFillment Status*/\n\n      this.updateOrderfullfillment$ = this.appState.select(updateOrderfullfillment);\n      this.updateOrderfullfillmentLoading$ = this.appState.select(updateOrderfullfillmentLoading);\n      this.updateOrderfullfillmentLoaded$ = this.appState.select(updateOrderfullfillmentLoaded);\n      this.updateOrderfullfillmentFailed$ = this.appState.select(updateOrderfullfillmentFailed);\n      this.subscriptions = [];\n    }\n    /*Order fullFillment List*/\n\n\n    Orderfullfillmentlist(value) {\n      this.appState.dispatch(new zoneActions.OrderfullfillmentListAction(value));\n    }\n\n    addOrderfullfillment(value) {\n      this.appState.dispatch(new zoneActions.addOrderfullfillmentAction(value));\n    }\n    /*Order fullFillment Status*/\n\n\n    orderfullfillmentstatus(value) {\n      this.appState.dispatch(new zoneActions.orderfullfillmentstatusAction(value));\n    }\n    /*Update Order fullFillment Status*/\n\n\n    updateOrderfullfillment(value) {\n      this.appState.dispatch(new zoneActions.updateOrderfullfillmentAction(value));\n    }\n\n  }\n\n  OrderfullfillmentSandbox.ɵfac = function OrderfullfillmentSandbox_Factory(t) {\n    return new (t || OrderfullfillmentSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n\n  OrderfullfillmentSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderfullfillmentSandbox,\n    factory: OrderfullfillmentSandbox.ɵfac\n  });\n  return OrderfullfillmentSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
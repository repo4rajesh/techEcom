{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport * as actions from '../../../localizations/zone/zone-action/zone.action';\nimport { ZoneRecordState } from './zone.state';\nimport { ZoneListResponseModel } from '../zone-model/zonelist.response.model';\nexport const initialState = new ZoneRecordState();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    case actions.ActionTypes.DO_ADD_ZONE:\n      {\n        return Object.assign({}, state, {\n          addLoading: true,\n          addLoaded: false,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_ZONE:\n      {\n        return Object.assign({}, state, {\n          updateLoading: true,\n          updateLoaded: false,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_LIST:\n      {\n        return Object.assign({}, state, {\n          listLoading: true,\n          listLoaded: false,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_COUNT_ACTION:\n      {\n        return Object.assign({}, state, {\n          countLoading: true,\n          countLoaded: false,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_ZONE_DELETE:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: true,\n          deleteLoaded: false,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_ADD_ZONE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          newZone: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_ZONE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          updateZone: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_LIST_SUCCESS:\n      {\n        const zoneList = payload.data.map(_zone => {\n          const tempListModel = new ZoneListResponseModel(_zone);\n          return tempListModel;\n        });\n        return Object.assign({}, state, {\n          zoneList: zoneList,\n          listLoading: false,\n          listLoaded: true,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_COUNT_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          zonePagination: payload.data,\n          countLoading: false,\n          countLoaded: true,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_ZONE_DELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          zoneDelete: payload,\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_ADD_ZONE_FAIL:\n      {\n        return Object.assign({}, state, {\n          newZone: payload,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_UPDATE_ZONE_FAIL:\n      {\n        return Object.assign({}, state, {\n          updateZone: payload,\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_ZONE_DELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_COUNT_FAIL:\n      {\n        return Object.assign({}, state, {\n          zoneDelete: payload,\n          countLoading: false,\n          countLoaded: true,\n          countFailed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_ZONE_LIST_FAIL:\n      {\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const newZone = state => state.newZone;\nexport const updateZone = state => state.updateZone;\nexport const zoneDelete = state => state.zoneDelete;\nexport const zoneList = state => state.zoneList;\nexport const zonePagination = state => state.zonePagination;\nexport const getZoneListLoading = state => state.listLoading;\nexport const getZoneListLoaded = state => state.listLoaded;\nexport const getZoneListFailed = state => state.listFailed;\nexport const getZoneCountLoading = state => state.countLoading;\nexport const getZoneCountLoaded = state => state.countLoaded;\nexport const getZoneCountFailed = state => state.countFailed;\nexport const getZoneAddLoading = state => state.addLoading;\nexport const getZoneAddLoaded = state => state.addLoaded;\nexport const getZoneAddFailed = state => state.addFailed;\nexport const getZoneUpdateLoading = state => state.updateLoading;\nexport const getZoneUpdateLoaded = state => state.updateLoaded;\nexport const getZoneUpdateFailed = state => state.updateFailed;\nexport const getZoneDeleteLoading = state => state.deleteLoading;\nexport const getZoneDeleteLoaded = state => state.deleteLoaded;\nexport const getZoneDeleteFailed = state => state.deleteFailed;","map":null,"metadata":{},"sourceType":"module"}
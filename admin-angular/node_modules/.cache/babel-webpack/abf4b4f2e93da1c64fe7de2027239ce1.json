{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Effect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { catchError, tap } from 'rxjs/operators';\nimport * as actions from './../actions/layout.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../layout.service\";\nimport * as i3 from \"@ngrx/store\";\nimport * as i4 from \"@angular/platform-browser\";\nexport class LayoutEffect {\n  constructor(actions$, authApi, appState$, title, meta) {\n    this.actions$ = actions$;\n    this.authApi = authApi;\n    this.appState$ = appState$;\n    this.title = title;\n    this.meta = meta;\n    this.getSettings$ = this.actions$.pipe(ofType(actions.ActionTypes.GET_SETTINGS_ACTION), map(action => action.payload), switchMap(state => {\n      return this.authApi.getsettings().pipe(tap(res => {\n        if (res) {\n          const setting = res.data[0];\n\n          if (setting.symbolLeft !== null) {\n            sessionStorage.setItem('adminCurrency', JSON.stringify({\n              position: 'left',\n              symbol: setting.symbolLeft\n            }));\n          } else if (setting.symbolRight !== null) {\n            sessionStorage.setItem('adminCurrency', JSON.stringify({\n              position: 'right',\n              symbol: setting.symbolRight\n            }));\n          }\n        }\n      }), map(featured => new actions.GetSettingsSuccess(featured)), catchError(error => of(new actions.GetSettingsFail(error))));\n    }));\n    this.changePayment$ = this.actions$.pipe(ofType(actions.ActionTypes.CHANGE_PAYMENT), map(action => action.payload), switchMap(state => {\n      return this.authApi.changePayment(state).pipe(switchMap(response => [new actions.ChangePaymentSuccessAction(response)]), catchError(error => of(new actions.ChangePaymentFailAction(error))));\n    }));\n  }\n\n}\n\nLayoutEffect.ɵfac = function LayoutEffect_Factory(t) {\n  return new (t || LayoutEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.LayoutsService), i0.ɵɵinject(i3.Store), i0.ɵɵinject(i4.Title), i0.ɵɵinject(i4.Meta));\n};\n\nLayoutEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LayoutEffect,\n  factory: LayoutEffect.ɵfac\n});\n\n__decorate([Effect()], LayoutEffect.prototype, \"getSettings$\", void 0);\n\n__decorate([Effect()], LayoutEffect.prototype, \"changePayment$\", void 0);","map":null,"metadata":{},"sourceType":"module"}
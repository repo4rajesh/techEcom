{"ast":null,"code":"import { Validators, FormGroup, FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../../core/admin/auth/auth.sandbox\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ngx-translate/core\";\n\nfunction ForgotPasswordComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.Emailrequired\"), \" \");\n  }\n}\n\nfunction ForgotPasswordComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"Profile.Login.Error.Incorrectemail\"), \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"validationcolor\": a0\n  };\n};\n\nconst _c1 = function () {\n  return [\"/auth/login\"];\n};\n\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(fb, authSandbox) {\n      this.fb = fb;\n      this.authSandbox = authSandbox;\n      this.emailPattern = '[a-zA-Z0-9.-_\\-\\._]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}';\n      this.ifSubmitted = false;\n    }\n\n    ngOnInit() {\n      this.forgotPasswordForm = this.fb.group({\n        email: ['', [Validators.required, Validators.pattern(this.emailPattern)]]\n      });\n    }\n    /**\n     * Handles form 'submit' event. Calls sandbox forget password function if form is valid.\n     *\n     * @param event form event\n     * @param form entire form value\n     */\n\n\n    onSubmits(event, form) {\n      this.ifSubmitted = true;\n\n      if (!this.forgotPasswordForm.valid) {\n        this.validateAllFormFields(this.forgotPasswordForm);\n        return;\n      }\n\n      const param = {};\n      param.email = this.forgotPasswordForm.value.email;\n      this.authSandbox.authForget(param);\n      this.authSandbox.forgorPasswordResponse$.subscribe(data => {\n        if (data && data === true || data === false) {\n          this.ifSubmitted = false;\n          this.forgotPasswordForm.reset();\n          this.forgotPasswordForm.clearValidators();\n        }\n      });\n    } // validation for forget password\n\n\n    validateAllFormFields(formGroup) {\n      Object.keys(formGroup.controls).forEach(field => {\n        const control = formGroup.get(field);\n\n        if (control instanceof FormControl) {\n          control.markAsTouched({\n            onlySelf: true\n          });\n        } else if (control instanceof FormGroup) {\n          this.validateAllFormFields(control);\n        }\n      });\n    }\n\n  }\n\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthSandbox));\n  };\n\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-spurt-forgot-password\"]],\n    decls: 17,\n    vars: 20,\n    consts: [[1, \"card-align\"], [1, \"cards\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"admin\"], [\"type\", \"text\", \"placeholder\", \"Email\", \"formControlName\", \"email\", 1, \"form-control\", \"placeholder-fix\", 3, \"ngClass\"], [\"class\", \"validation-error\", 4, \"ngIf\"], [1, \"btn\", \"btn-log\"], [\"role\", \"status\", \"aria-hidden\", \"true\", 1, \"spinner-border\", \"spinner-border-sm\", \"pull-right\", 3, \"hidden\"], [1, \"forgot\", 3, \"routerLink\"], [1, \"validation-error\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_2_listener($event) {\n          return ctx.onSubmits($event, ctx.forgotPasswordForm.value);\n        });\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵpipe(5, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵtemplate(7, ForgotPasswordComponent_div_7_Template, 3, 3, \"div\", 5);\n        i0.ɵɵtemplate(8, ForgotPasswordComponent_div_8_Template, 3, 3, \"div\", 5);\n        i0.ɵɵelementStart(9, \"button\", 6);\n        i0.ɵɵtext(10);\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelement(12, \"span\", 7);\n        i0.ɵɵpipe(13, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 8);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 9, \"Profile.Login.forgotpassword\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c0, ctx.forgotPasswordForm.get(\"email\").hasError(\"required\") && ctx.forgotPasswordForm.get(\"email\").touched && ctx.ifSubmitted == true));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"required\") && ctx.forgotPasswordForm.get(\"email\").touched && ctx.ifSubmitted == true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.get(\"email\").hasError(\"pattern\") && ctx.forgotPasswordForm.get(\"email\").touched && ctx.ifSubmitted == true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(11, 11, \"Profile.Login.Submit\"), \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", !i0.ɵɵpipeBind1(13, 13, ctx.authSandbox.forgotpasswordLoading$));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(19, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 15, \"Profile.Login.BacktoLogin\"));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.NgClass, i3.NgIf, i4.RouterLink],\n    pipes: [i5.TranslatePipe, i3.AsyncPipe],\n    styles: [\".validationcolor[_ngcontent-%COMP%]{border-color:red}.error[_ngcontent-%COMP%]{color:red}.form-control[_ngcontent-%COMP%]{font-family:\\\"Poppins\\\",sans-serif;font-size:14px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:.53px;color:#000!important;height:53px;border-radius:2px;border:solid 1px #d6d6d6;background-color:#fff}.card-align[_ngcontent-%COMP%]{margin-top:15%}.cards[_ngcontent-%COMP%]{box-shadow:0 2px 10px #00000026;background-color:#fff;width:70%;margin:auto;padding:3% 5%}.cards[_ngcontent-%COMP%]   .admin[_ngcontent-%COMP%]{font-family:\\\"Poppins\\\",sans-serif;font-size:18px;font-weight:600;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#264151;margin-bottom:7%}.cards[_ngcontent-%COMP%]   .btn-log[_ngcontent-%COMP%]{height:53px;background-color:#264151;font-family:\\\"Poppins\\\",sans-serif;font-size:18px;font-weight:500;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#fff;width:100%;margin:5% 0% 3%}.cards[_ngcontent-%COMP%]   .forgot[_ngcontent-%COMP%]{font-family:Roboto;cursor:pointer;font-size:14px;font-weight:normal;font-style:normal;font-stretch:normal;line-height:normal;letter-spacing:normal;color:#514c4c;text-decoration:underline;text-align:right;margin:3% 0% 5%}\"]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
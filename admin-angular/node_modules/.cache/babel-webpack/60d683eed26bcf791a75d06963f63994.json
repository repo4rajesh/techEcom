{"ast":null,"code":"import { Injectable, NgModule, defineInjectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nclass ConnectionService {\n  constructor() {\n    this.connectionMonitor = new Observable(observer => {\n      window.addEventListener('offline', e => {\n        observer.next(false);\n      });\n      window.addEventListener('online', e => {\n        observer.next(true);\n      });\n    });\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  monitor() {\n    return this.connectionMonitor;\n  }\n\n}\n\nConnectionService.ɵfac = function ConnectionService_Factory(t) {\n  return new (t || ConnectionService)();\n};\n\nConnectionService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n  token: ConnectionService,\n  factory: ConnectionService.ɵfac,\n  providedIn: 'root'\n});\n/** @nocollapse */\n\n/** @nocollapse */\nConnectionService.ngInjectableDef = defineInjectable({\n  factory: function ConnectionService_Factory() {\n    return new ConnectionService();\n  },\n  token: ConnectionService,\n  providedIn: \"root\"\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n\nlet ConnectionServiceModule = /*#__PURE__*/(() => {\n  class ConnectionServiceModule {}\n\n  ConnectionServiceModule.ɵfac = function ConnectionServiceModule_Factory(t) {\n    return new (t || ConnectionServiceModule)();\n  };\n\n  ConnectionServiceModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: ConnectionServiceModule\n  });\n  ConnectionServiceModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [ConnectionService],\n    imports: [[]]\n  });\n  return ConnectionServiceModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\r\n */\n\n\nexport { ConnectionService, ConnectionServiceModule }; //# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY29ubmVjdGlvbi1zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZy1jb25uZWN0aW9uLXNlcnZpY2UvbGliL2Nvbm5lY3Rpb24tc2VydmljZS5zZXJ2aWNlLnRzIiwibmctY29ubmVjdGlvbi1zZXJ2aWNlL2xpYi9jb25uZWN0aW9uLXNlcnZpY2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7QUFBMkIsSUFTekI7QUFDRCxRQUFHLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLFVBQVUsQ0FBQyxDQUFDLFFBQVE7QUFDcEQsWUFBSyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLENBQUMsQ0FBQztBQUMxQyxnQkFBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQzVCLGFBQU0sQ0FBQyxDQUFDO0FBQ1IsWUFBSyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUN6QyxnQkFBTyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQzNCLGFBQU0sQ0FBQyxDQUFDO0FBQ1IsU0FBSSxDQUFDLENBQUM7QUFDTixLQUFFO0FBRUg7QUFBUztBQUFvQjtBQUMxQixJQURELE9BQU87QUFBTSxRQUNYLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDO0FBQ2pDLEtBQUU7QUFDRjsrQ0FwQkEsVUFBVSxTQUFDLG1CQUNWLFVBQVUsRUFBRSxNQUFNO1dBQ25CLDBJQUNNO0FBQUU7QUFBb0I7QUFDYTs7Ozs7O2dEQU9oQjtBQUFDO0FBQUM7QUFBSztBQUNkO0FBS2U7QUNwQmxDO0FBQWlDO3FEQUdoQyxRQUFRLFNBQUMsbUJBQ1IsT0FBTyxFQUFFLEVBQ1IsbUJBQ0Q7R0FBUyxFQUFDLENBQUMsaUJBQWlCLENBQUMsZUFDOUI7Ozs7Ozs7OzBCQUNLO0FBQUM7QUFBQztBQUFLO0FBQ1A7QUFBbUU7QUFBSTtBQUFDO0FBQUs7QUFBbUM7QUFBbUU7QUFBSTtBQUFDOztBRFRBLEFBU0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFFQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFuQkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQ0xBLEFBR0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgQ29ubmVjdGlvblNlcnZpY2Uge1xuICBwcml2YXRlIGNvbm5lY3Rpb25Nb25pdG9yOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuICBcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5jb25uZWN0aW9uTW9uaXRvciA9IG5ldyBPYnNlcnZhYmxlKChvYnNlcnZlcikgPT4ge1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29mZmxpbmUnLCAoZSkgPT4ge1xuICAgICAgICBvYnNlcnZlci5uZXh0KGZhbHNlKTtcbiAgICAgIH0pO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ29ubGluZScsIChlKSA9PiB7XG4gICAgICAgIG9ic2VydmVyLm5leHQodHJ1ZSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG1vbml0b3IoKTogT2JzZXJ2YWJsZTxib29sZWFuPiB7XG4gICAgcmV0dXJuIHRoaXMuY29ubmVjdGlvbk1vbml0b3I7XG4gIH1cbn1cbiIsImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbm5lY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9jb25uZWN0aW9uLXNlcnZpY2Uuc2VydmljZSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICBdLFxyXG4gIHByb3ZpZGVyczpbQ29ubmVjdGlvblNlcnZpY2VdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBDb25uZWN0aW9uU2VydmljZU1vZHVsZSB7IH1cclxuIl19","map":null,"metadata":{},"sourceType":"module"}
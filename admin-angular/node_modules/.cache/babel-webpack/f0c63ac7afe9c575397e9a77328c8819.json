{"ast":null,"code":"import * as changepasswordActions from './changepassword-action/changepassword.action';\nimport { ChangePasswordForm } from './changepassword-models/changepassword.model';\nimport { getChangePassword, getChangePasswordRequestLoaded, getChangePasswordRequestLoading, getChangePasswordResponse, getChangePasswordRequestFailed } from './changepassword-reducer/changepassword.selector';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\nexport let ChangepasswordSandbox = /*#__PURE__*/(() => {\n  class ChangepasswordSandbox {\n    constructor(appState, router) {\n      this.appState = appState;\n      this.router = router;\n      this.getChangePassword$ = this.appState.select(getChangePassword);\n      this.getChangePasswordResponse$ = this.appState.select(getChangePasswordResponse);\n      this.getChangePasswordRequestLoading$ = this.appState.select(getChangePasswordRequestLoading);\n      this.getChangePasswordRequestLoade$ = this.appState.select(getChangePasswordRequestLoaded);\n      this.getChangePasswordRequestFailed$ = this.appState.select(getChangePasswordRequestFailed);\n      this.subscriptions = [];\n      this.subscribe();\n    }\n\n    changePSW(value) {\n      this.appState.dispatch(new changepasswordActions.DoChangePasswordAction(new ChangePasswordForm(value)));\n    }\n\n    subscribe() {\n      this.subscriptions.push(this.getChangePassword$.subscribe(data => {\n        if (data) {\n          if (data.user) {\n            if (data.user.status === 1) {\n              this.router.navigate(['/catalog/product']);\n            }\n          }\n        }\n      }));\n    }\n\n  }\n\n  ChangepasswordSandbox.ɵfac = function ChangepasswordSandbox_Factory(t) {\n    return new (t || ChangepasswordSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.Router));\n  };\n\n  ChangepasswordSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ChangepasswordSandbox,\n    factory: ChangepasswordSandbox.ɵfac\n  });\n  return ChangepasswordSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
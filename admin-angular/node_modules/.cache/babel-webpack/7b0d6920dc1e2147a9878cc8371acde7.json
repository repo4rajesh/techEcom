{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Api } from '../../providers/api/api';\nimport * as i0 from \"@angular/core\";\nexport let MediaService = /*#__PURE__*/(() => {\n  class MediaService extends Api {\n    /**\n     * Handles 'CreateFolder' function. Calls post method with specific api address\n     * along its param.\n     *\n     * @param param from model.\n     */\n    CreateFolder(param) {\n      return this.http.post(this.url = this.getBaseUrl() + '/media/create-folder', param);\n    }\n    /**\n     * Handles 'document' function. Calls post method with specific api address\n     * along its param.\n     *\n     * @param param from model.\n     */\n\n\n    document(param) {\n      const formData = new FormData();\n      formData.append('image', param);\n      formData.append('path', param.path);\n      const options = {\n        headers: new HttpHeaders({\n          'xss-loader': 'true'\n        }),\n        withCredentials: true,\n        responseType: 'text'\n      };\n      return this.http.post(this.url = this.getBaseUrl() + '/media/upload-file', param);\n    }\n    /**\n     * Handles 'deleteFolder' function. Calls post method with specific api address\n     * along its param.\n     *\n     * @param param from model.\n     */\n\n\n    deleteFolder(param) {\n      return this.http.post(this.url = this.getBaseUrl() + '/media/create-folder', param);\n    }\n    /**\n     * Handles 'bucketLists' function. Calls get method with specific api address\n     * along its param.\n     *\n     * @param param from model.\n     */\n\n\n    bucketLists(param) {\n      return this.http.get(this.url = this.getBaseUrl() + '/media/bucket-object-list', {\n        params: param\n      });\n    }\n    /**\n     * Handles 'deleteImage' function. Calls get method with specific api address\n     * along its param.\n     *\n     * @param param from model.\n     */\n\n\n    deleteImage(param) {\n      return this.http.get(this.url = this.getBaseUrl() + '/media/delete-file', {\n        params: param\n      });\n    }\n\n    searchFolder(param) {\n      return this.http.get(this.url = this.getBaseUrl() + '/media/search-folder', {\n        params: param\n      });\n    }\n\n  }\n\n  MediaService.ɵfac = /*@__PURE__*/function () {\n    let ɵMediaService_BaseFactory;\n    return function MediaService_Factory(t) {\n      return (ɵMediaService_BaseFactory || (ɵMediaService_BaseFactory = i0.ɵɵgetInheritedFactory(MediaService)))(t || MediaService);\n    };\n  }();\n\n  MediaService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MediaService,\n    factory: MediaService.ɵfac\n  });\n  return MediaService;\n})();","map":null,"metadata":{},"sourceType":"module"}
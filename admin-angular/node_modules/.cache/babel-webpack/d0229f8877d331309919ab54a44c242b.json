{"ast":null,"code":"// action\nimport * as categoriesActions from './action/categories.action'; // model\n\nimport { CategorylistForm } from './models/categorylist.model';\nimport { CategorydeleteForm } from './models/categorydelete.model';\nimport { // category list selectors\ngetCategoryList, getCategoriesListResponse, getCategoriesListRequestLoading, getCategoriesListRequestLoaded, getCategoriesListRequestFailed, getCategoryListCount, // category count selectors\ngetCategoriesCountRequestFailed, getCategoriesCountRequestLoaded, getCategoriesCountResponse, getCategoriesCountRequestLoading, getCategoryCountdata, // category update selectors\ngetUpdateCatagory, getUpdateCategoryBadresponse, getUpdateCategoriesResponse, getUpdateCategoriesRequestLoading, getUpdateCategoriesRequestLoaded, getUpdateCategoriesRequestFailed, // category delete selectors\ngetCategoryDoDelete, getDeleteCategoriesResponse, getDeleteCategoriesRequestLoading, getDeleteCategoriesRequestLoaded, getDeleteCategoriesRequestFailed, // category add selectors\ngetAddCatagoryStatus, getAddCatagoryData, getAddCategoriesResponse, getAddCategoriesRequestLoading, getAddCategoriesRequestLoaded, getAddCategoriesRequestFailed, // product add selectors\ngetProductAddResponse, getProductAddRequestLoading, getProductAddRequestLoaded, getProductAddRequestFailed, // product remove selectors\ngetProductRemoveResponse, getProductRemoveRequestLoading, getProductRemoveRequestLoaded, getProductRemoveRequestFailed, getCategoryFilterList, categoryDetails, categoryDetailsLoading, categoryDetailsLoaded, categoriesListResponse, CategoryExportExcel, CategoryExportExcelLoading, CategoryExportExcelLoaded, CategoryExportExcelResponse, ExportAllExcel, ExportAllExcelLoading, ExportAllExcelLoaded, ExportAllExcelResponse } from './reducer/categories.selectors';\nimport { CategoryForm } from './models/category.model';\nimport { CategoryupdateForm } from './models/categoryupdate.model';\nimport { CategorycountForm } from './models/categorycount.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"ng6-toastr-notifications\";\nimport * as i3 from \"@angular/router\";\nexport let CategoriesSandbox = /*#__PURE__*/(() => {\n  class CategoriesSandbox {\n    constructor(appState, toastr, router) {\n      this.appState = appState;\n      this.toastr = toastr;\n      this.router = router;\n      this.levelsloop = [];\n      this.getCategoriesList$ = this.appState.select(getCategoryList); // CategoryFilterList\n\n      this.getCategoriesFilterList$ = this.appState.select(getCategoryFilterList);\n      this.getCategoriesListCount$ = this.appState.select(getCategoryListCount);\n      this.getCategoriesDelete$ = this.appState.select(getCategoryDoDelete);\n      this.getAddCategories$ = this.appState.select(getAddCatagoryStatus);\n      this.getAddCategoriesdata$ = this.appState.select(getAddCatagoryData);\n      this.getUpdateCategoriesData$ = this.appState.select(getUpdateCatagory);\n      this.getUpdateCategoriesountdatas$ = this.appState.select(getCategoryCountdata);\n      this.getUpdateCategoriesBadresponse$ = this.appState.select(getUpdateCategoryBadresponse);\n      this.getDeleteCategoriesResponse$ = this.appState.select(getDeleteCategoriesResponse);\n      this.getDeleteCategoriesRequestLoading$ = this.appState.select(getDeleteCategoriesRequestLoading);\n      this.getDeleteCategoriesRequestLoaded$ = this.appState.select(getDeleteCategoriesRequestLoaded);\n      this.getDeleteCategoriesRequestFailed$ = this.appState.select(getDeleteCategoriesRequestFailed);\n      this.getCategoriesCountResponse$ = this.appState.select(getCategoriesCountResponse);\n      this.getCategoriesCountRequestLoading$ = this.appState.select(getCategoriesCountRequestLoading);\n      this.getCategoriesCountRequestLoaded$ = this.appState.select(getCategoriesCountRequestLoaded);\n      this.getCategoriesCountRequestFailed$ = this.appState.select(getCategoriesCountRequestFailed);\n      this.getCategoriesListResponse$ = this.appState.select(getCategoriesListResponse);\n      this.getCategoriesListRequestLoading$ = this.appState.select(getCategoriesListRequestLoading);\n      this.getCategoriesListRequestLoaded$ = this.appState.select(getCategoriesListRequestLoaded);\n      this.getCategoriesListRequestFailed$ = this.appState.select(getCategoriesListRequestFailed);\n      this.getUpdateCategoriesResponse$ = this.appState.select(getUpdateCategoriesResponse);\n      this.getUpdateCategoriesRequestLoading$ = this.appState.select(getUpdateCategoriesRequestLoading);\n      this.getUpdateCategoriesRequestLoaded$ = this.appState.select(getUpdateCategoriesRequestLoaded);\n      this.getUpdateCategoriesRequestFailed$ = this.appState.select(getUpdateCategoriesRequestFailed);\n      this.getAddCategoriesResponse$ = this.appState.select(getAddCategoriesResponse);\n      this.getAddCategoriesRequestLoading$ = this.appState.select(getAddCategoriesRequestLoading);\n      this.getAddCategoriesRequestLoaded$ = this.appState.select(getAddCategoriesRequestLoaded);\n      this.getAddCategoriesRequestFailed$ = this.appState.select(getAddCategoriesRequestFailed);\n      this.getProductAddResponse$ = this.appState.select(getProductAddResponse);\n      this.getProductAddRequestLoading$ = this.appState.select(getProductAddRequestLoading);\n      this.getProductAddRequestLoaded$ = this.appState.select(getProductAddRequestLoaded);\n      this.getProductAddRequestFailed$ = this.appState.select(getProductAddRequestFailed);\n      this.getProductRemoveResponse$ = this.appState.select(getProductRemoveResponse);\n      this.getProductRemoveRequestLoading$ = this.appState.select(getProductRemoveRequestLoading);\n      this.getProductRemoveRequestLoaded$ = this.appState.select(getProductRemoveRequestLoaded);\n      this.getProductRemoveRequestFailed$ = this.appState.select(getProductRemoveRequestFailed);\n      this.categoryDetails$ = this.appState.select(categoryDetails);\n      this.categoryDetailsLoading$ = this.appState.select(categoryDetailsLoading);\n      this.categoryDetailsLoaded$ = this.appState.select(categoryDetailsLoaded);\n      this.categoriesListResponse$ = this.appState.select(categoriesListResponse);\n      this.CategoryExportExcel$ = this.appState.select(CategoryExportExcel);\n      this.CategoryExportExcelLoading$ = this.appState.select(CategoryExportExcelLoading);\n      this.CategoryExportExcelLoaded$ = this.appState.select(CategoryExportExcelLoaded);\n      this.CategoryExportExcelResponse$ = this.appState.select(CategoryExportExcelResponse);\n      this.ExportAllExcel$ = this.appState.select(ExportAllExcel);\n      this.ExportAllExcelLoading$ = this.appState.select(ExportAllExcelLoading);\n      this.ExportAllExcelLoaded$ = this.appState.select(ExportAllExcelLoaded);\n      this.ExportAllExcelResponse$ = this.appState.select(ExportAllExcelResponse);\n      this.parentLevels = []; // this.subscribe();\n    }\n\n    categoryList(value) {\n      this.appState.dispatch(new categoriesActions.DoCategorieslistAction(new CategorylistForm(value)));\n    }\n\n    getCategoryListCount(value) {\n      this.appState.dispatch(new categoriesActions.DoCategoriescountAction(new CategorycountForm(value)));\n    }\n\n    deleteCategory(value) {\n      this.appState.dispatch(new categoriesActions.DoDeleteCategoriesAction(new CategorydeleteForm(value)));\n    }\n\n    addCategories(value) {\n      this.appState.dispatch(new categoriesActions.DoAddCategoriesAction(new CategoryForm(value)));\n    }\n\n    updateCategories(value) {\n      this.appState.dispatch(new categoriesActions.DoUpdateCategoriesAction(new CategoryupdateForm(value)));\n    }\n\n    productRemove(value) {\n      this.appState.dispatch(new categoriesActions.DoProductremoveAction(value));\n    }\n\n    productAdd(value) {\n      this.appState.dispatch(new categoriesActions.DoProductaddAction(value));\n    }\n\n    getCategoryDetails(value) {\n      this.appState.dispatch(new categoriesActions.GetCategoryDetailsAction(value));\n    }\n\n    filterCategory(value) {\n      this.appState.dispatch(new categoriesActions.FilterCategoryAction(value));\n    }\n\n    CategoryExcel(value) {\n      this.appState.dispatch(new categoriesActions.CategoryExportExcelAction(value));\n    }\n\n    ExportAllExcel(value) {\n      this.appState.dispatch(new categoriesActions.ExportAllExcelAction(value));\n    }\n\n  }\n\n  CategoriesSandbox.ɵfac = function CategoriesSandbox_Factory(t) {\n    return new (t || CategoriesSandbox)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.ToastrManager), i0.ɵɵinject(i3.Router));\n  };\n\n  CategoriesSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CategoriesSandbox,\n    factory: CategoriesSandbox.ɵfac\n  });\n  return CategoriesSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
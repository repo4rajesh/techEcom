{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\n// action\nimport * as actions from '../action/auth.action';\nimport { AuthStateRecord } from './auth.state'; // Model\n\nimport { LoginResponseModel } from '../models/login.response.model';\nexport const initialState = new AuthStateRecord();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    case actions.ActionTypes.DO_LOGIN:\n      {\n        return Object.assign({}, state, {\n          loginSuccess: {},\n          loginRequestLoading: true,\n          loginRequestLoaded: false,\n          loginRequestFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_LOGIN_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          loginSuccess: new LoginResponseModel(payload),\n          loginRequestLoading: false,\n          loginRequestLoaded: true,\n          loginRequestFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_LOGIN_FAIL:\n      {\n        return Object.assign({}, state, {\n          loginSuccess: {},\n          loginRequestLoading: false,\n          loginRequestLoaded: true,\n          loginRequestFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_FORGOT_PASSWORD:\n      {\n        return Object.assign({}, state, {\n          forgotPasswordResponse: false,\n          forgotPasswordRequestLoading: true,\n          forgotPasswordRequestLoaded: false,\n          forgotPasswordRequestFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_FORGOT_PASSWORD_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          forgotPasswordResponse: true,\n          forgotPasswordRequestLoading: false,\n          forgotPasswordRequestLoaded: true,\n          forgotPasswordRequestFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_FORGOT_PASSWORD_FAIL:\n      {\n        return Object.assign({}, state, {\n          forgotPasswordResponse: false,\n          forgotPasswordRequestLoading: false,\n          forgotPasswordRequestLoaded: true,\n          forgotPasswordRequestFailed: true\n        });\n      }\n\n    case actions.ActionTypes.GET_TOKEN:\n      {\n        return Object.assign({}, state, {\n          gettokenLoading: true,\n          gettokenLoaded: false,\n          gettokenFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_TOKEN_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          gettoken: payload,\n          gettokenLoading: false,\n          gettokenLoaded: true,\n          gettokenFailed: false\n        });\n      }\n\n    case actions.ActionTypes.GET_TOKEN_FAIL:\n      {\n        return Object.assign({}, state, {\n          gettokenLoading: false,\n          gettokenLoaded: false,\n          gettokenFailed: true\n        });\n      }\n\n    case actions.ActionTypes.SET_PASSWORD:\n      {\n        return Object.assign({}, state, {\n          setpasswordLoading: true,\n          setpasswordLoaded: false,\n          setpasswordFailed: false\n        });\n      }\n\n    case actions.ActionTypes.SET_PASSWORD_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          setpassword: payload,\n          setpasswordLoading: false,\n          setpasswordLoaded: true,\n          setpasswordFailed: false\n        });\n      }\n\n    case actions.ActionTypes.SET_PASSWORD_FAIL:\n      {\n        return Object.assign({}, state, {\n          setpasswordLoading: false,\n          setpasswordLoaded: false,\n          setpasswordFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n}\nexport const getLoginSuccessResponse = state => state.loginSuccess;\nexport const getLoginRequestLoading = state => state.loginRequestLoading;\nexport const getLoginRequestLoaded = state => state.loginRequestLoaded;\nexport const getLoginRequestFailed = state => state.loginRequestFailed;\nexport const getForgotPasswordResponse = state => state.forgotPasswordResponse;\nexport const getForgotPasswordRequestLoading = state => state.forgotPasswordRequestLoading;\nexport const getForgotPasswordRequestLoaded = state => state.forgotPasswordRequestLoaded;\nexport const getForgotPasswordRequestFailed = state => state.forgotPasswordRequestFailed;\nexport const gettoken = state => state.gettoken;\nexport const gettokenLoading = state => state.gettokenLoading;\nexport const gettokenLoaded = state => state.gettokenLoaded;\nexport const gettokenFailed = state => state.gettokenFailed;\nexport const setpassword = state => state.setpassword;\nexport const setpasswordLoading = state => state.setpasswordLoading;\nexport const setpasswordLoaded = state => state.setpasswordLoaded;","map":null,"metadata":{},"sourceType":"module"}
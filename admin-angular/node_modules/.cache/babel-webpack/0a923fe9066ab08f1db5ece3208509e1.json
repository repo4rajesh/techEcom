{"ast":null,"code":"/*\n* spurtcommerce\n* http://www.spurtcommerce.com\n*\n* Copyright (c) 2021 Piccosoft Software Labs Pvt Ltd\n* Author Piccosoft Software Labs Pvt Ltd <support@spurtcommerce.com>\n* Licensed under the MIT license.\n*/\nimport * as actions from '../action/brand.actions'; // state\n\nimport { BrandStateRecord } from './brand.state'; // model\n\nimport { ManufacturerListResponseModel } from '../models/manufacturer-List.response.model';\nimport { ManufacturerAddresponseModel } from '../models/manufacture-Add-Response.model';\nexport const initialState = new BrandStateRecord();\nexport function reducer(state = initialState, {\n  type,\n  payload\n}) {\n  if (!type) {\n    return state;\n  }\n\n  switch (type) {\n    // <-------------MANUFACTURER LIST--------------> //\n    case actions.ActionTypes.DO_MANUFACTURER_LIST_ACTION:\n      {\n        return Object.assign({}, state, {\n          listLoading: true,\n          listLoaded: false,\n          listFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_LIST_SUCCESS:\n      {\n        let ManufacturerModel = {};\n\n        if (payload.data) {\n          ManufacturerModel = payload.data.map(_brand => {\n            const tempmanufacturerModel = new ManufacturerListResponseModel(_brand);\n            return tempmanufacturerModel;\n          });\n        }\n\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: false,\n          manufacturerList: ManufacturerModel\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_LIST_FAIL:\n      {\n        return Object.assign({}, state, {\n          listLoading: false,\n          listLoaded: true,\n          listFailed: true\n        });\n      }\n    // <-------------ADD MANUFACTURER--------------> //\n\n    case actions.ActionTypes.DO_MANUFACTURE_ADD_ACTION:\n      {\n        return Object.assign({}, state, {\n          addLoading: true,\n          addLoaded: false,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURE_ADD_SUCCESS:\n      {\n        const brandData = new ManufacturerAddresponseModel(payload.data);\n        return Object.assign({}, state, {\n          manufacturerAdd: brandData,\n          addLoading: false,\n          addLoaded: true,\n          addFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURE_ADD_FAIL:\n      {\n        return Object.assign({}, state, {\n          addLoading: false,\n          addLoaded: false,\n          addFailed: true\n        });\n      }\n    // <-------------UPDATE MANUFACTURER--------------> //\n\n    case actions.ActionTypes.DO_MANUFACTURE_UPDATE_ACTION:\n      {\n        return Object.assign({}, state, {\n          updateLoading: true,\n          updateLoaded: false,\n          updateFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURE_UPDATE_FAIL:\n      {\n        return Object.assign({}, state, {\n          updateLoading: false,\n          updateLoaded: false,\n          updateFailed: true\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURE_UPDATE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          updateLoading: false,\n          updateLoaded: true,\n          updateFailed: false,\n          manufacturerUpdate: payload\n        });\n      }\n    // <-------------DELETE MANUFACTURER--------------> //\n\n    case actions.ActionTypes.DO_MANUFACTURER_DELETE_ACTION:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: true,\n          deleteLoaded: false,\n          deleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_DELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: false,\n          deleteLoaded: true,\n          deleteFailed: false,\n          manufacturerDelete: payload\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_DELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          deleteLoading: false,\n          deleteLoaded: false,\n          deleteFailed: true\n        });\n      }\n    // <-------------MANUFACTURER LIST COUNT--------------> //\n\n    case actions.ActionTypes.DO_MANUFACTURER_COUNT_ACTION:\n      {\n        return Object.assign({}, state, {\n          countLoading: true,\n          countLoaded: false,\n          countFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_COUNT_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          countLoading: false,\n          countLoaded: true,\n          countFailed: false,\n          manufactureCount: payload.data\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_COUNT_FAIL:\n      {\n        return Object.assign({}, state, {\n          countLoading: false,\n          countLoaded: true,\n          countFailed: true\n        });\n      }\n    // <-------------MANUFACTURER LIST BULK DELETE--------------> //\n\n    case actions.ActionTypes.DO_MANUFACTURER_BULK_DELETE_ACTION:\n      {\n        return Object.assign({}, state, {\n          bulkDeleteLoading: true,\n          bulkDeleteLoaded: false,\n          bulkDeleteFailed: false\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_BULK_DELETE_SUCCESS:\n      {\n        return Object.assign({}, state, {\n          bulkDeleteLoading: false,\n          bulkDeleteLoaded: true,\n          bulkDeleteFailed: false,\n          bulkDelete: payload\n        });\n      }\n\n    case actions.ActionTypes.DO_MANUFACTURER_BULK_DELETE_FAIL:\n      {\n        return Object.assign({}, state, {\n          bulkDeleteLoading: false,\n          bulkDeleteLoaded: false,\n          bulkDeleteFailed: true\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n} // Manufacturer add\n\nexport const getManufacturerAdd = state => state.manufacturerAdd;\nexport const getManufacturerAddLoading = state => state.addLoading;\nexport const getManufacturerAddLoaded = state => state.addLoaded;\nexport const getManufacturerAddFailed = state => state.addFailed; // Manufacturer update\n\nexport const getManufacturerUpdate = state => state.manufacturerUpdate;\nexport const getManufacturerUpdateLoading = state => state.updateLoading;\nexport const getManufacturerUpdateLoaded = state => state.updateLoaded;\nexport const getManufacturerUpdateFailed = state => state.updateFailed; // Manufacturer list\n\nexport const getManufacturerList = state => state.manufacturerList;\nexport const getManufacturerListLoading = state => state.listLoading;\nexport const getManufactuerListLoaded = state => state.listLoaded;\nexport const getmanufacturerListFailed = state => state.listFailed; // Manufacturer count\n\nexport const getManufacturerCount = state => state.manufactureCount;\nexport const getManufacturerCountLoading = state => state.countLoading;\nexport const getManufacturerCountLoaded = state => state.countLoaded;\nexport const getManufacturerCountFailed = state => state.countFailed; // Manufacturer delete\n\nexport const getManufacturerDelete = state => state.manufacturerDelete;\nexport const getManufacturerDeleteLoading = state => state.deleteLoading;\nexport const getManufacturerDeleteLoaded = state => state.deleteLoaded;\nexport const getManufacturerDeleteFailed = state => state.deleteFailed; // Manufacturer bulk delete\n\nexport const bulkDelete = state => state.bulkDelete;\nexport const bulkDeleteLoading = state => state.bulkDeleteLoading;\nexport const bulkDeleteLoaded = state => state.bulkDeleteLoaded;\nexport const deleteFailed = state => state.deleteFailed;","map":null,"metadata":{},"sourceType":"module"}
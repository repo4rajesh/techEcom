{"ast":null,"code":"// action\nimport * as mediaActions from './action/media.action'; // selectors\n\nimport { getbucketDeleteFile, getbucketDeleteFolder, getBucketListData, getMediaCreatefolder, getMediaUploaddata, getmediauploadResponse, getmediauploadRequestLoaded, getmediauploadRequestFailed, getbucketlistRequestFailed, getdeletefolderResponse, getdeletefolderRequestLoading, getdeletefolderRequestLoaded, getdeletefolderRequestFailed, getbucketlistResponse, getbucketlistRequestLoading, getbucketlistRequestLoaded, getSearchFolder, getSearchFolderResponse, getSearchFolderRequestLoading, getSearchFolderRequestLoaded, getSearchFolderRequestFailed } from './reducer/mediaselectors'; // model\n\nimport { MediauploadForm } from './models/mediaupload.model';\nimport { MediacreatefolderForm } from './models/mediacreatefolder.model';\nimport { BucketdeletefileForm } from './models/bucketdeletefile.model';\nimport { BucketdeletefolderForm } from './models/bucketdeletefolder.model';\nimport { BucketlistForm } from './models/bucketlist.model';\nimport { getmediauploadRequestLoadings } from './reducer/mediaselectors';\nimport { SearchfolderForm } from './models/searchfolder.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let MediaSandbox = /*#__PURE__*/(() => {\n  class MediaSandbox {\n    constructor(appState) {\n      this.appState = appState;\n      this.getBucketListData$ = this.appState.select(getBucketListData);\n      this.getBucketDeleteFile$ = this.appState.select(getbucketDeleteFile);\n      this.getBucketDeleteFolder$ = this.appState.select(getbucketDeleteFolder);\n      this.getMediaUpload$ = this.appState.select(getMediaUploaddata);\n      this.getMediaCreatefold$ = this.appState.select(getMediaCreatefolder);\n      this.getmediauploadResponse$ = this.appState.select(getmediauploadResponse);\n      this.getmediauploadRequestLoading$ = this.appState.select(getmediauploadRequestLoadings);\n      this.getMediaCregetmediauploadRequestLoadedatefold$ = this.appState.select(getmediauploadRequestLoaded);\n      this.getmediauploadRequestFailed$ = this.appState.select(getmediauploadRequestFailed);\n      this.getdeletefolderResponse$ = this.appState.select(getdeletefolderResponse);\n      this.getdeletefolderRequestLoading$ = this.appState.select(getdeletefolderRequestLoading);\n      this.getdeletefolderRequestLoaded$ = this.appState.select(getdeletefolderRequestLoaded);\n      this.getdeletefolderRequestFailed$ = this.appState.select(getdeletefolderRequestFailed);\n      this.getbucketlistResponse$ = this.appState.select(getbucketlistResponse);\n      this.getbucketlistRequestLoading$ = this.appState.select(getbucketlistRequestLoading);\n      this.getbucketlistRequestLoaded$ = this.appState.select(getbucketlistRequestLoaded);\n      this.getbucketlistRequestFailed$ = this.appState.select(getbucketlistRequestFailed);\n      this.getSearchFolder$ = this.appState.select(getSearchFolder);\n      this.getSearchFolderResponse$ = this.appState.select(getSearchFolderResponse);\n      this.getSearchFolderRequestLoading$ = this.appState.select(getSearchFolderRequestLoading);\n      this.getSearchFolderRequestLoaded$ = this.appState.select(getSearchFolderRequestLoaded);\n      this.getSearchFolderRequestFailed$ = this.appState.select(getSearchFolderRequestFailed);\n    }\n\n    getbuckupload(data) {\n      this.appState.dispatch(new mediaActions.DoMediaUploadAction(new MediauploadForm(data)));\n    }\n\n    getbuckcreatefolder(data) {\n      this.appState.dispatch(new mediaActions.DoMediaCreatefolderAction(new MediacreatefolderForm(data)));\n    }\n\n    bucketListApi(value) {\n      this.appState.dispatch(new mediaActions.DoBucketlistAction(new BucketlistForm(value)));\n    }\n\n    deleteFile(value) {\n      this.appState.dispatch(new mediaActions.DoDeletefileAction(new BucketdeletefileForm(value)));\n    }\n\n    deleteFolderApi(value) {\n      this.appState.dispatch(new mediaActions.DoDeletefolderAction(new BucketdeletefolderForm(value)));\n    }\n\n    searchFolders(value) {\n      this.appState.dispatch(new mediaActions.DoSearchfolderAction(new SearchfolderForm(value)));\n    }\n\n    clearBucketList() {\n      this.appState.dispatch(new mediaActions.ClearBucketListAction());\n    }\n\n  }\n\n  MediaSandbox.ɵfac = function MediaSandbox_Factory(t) {\n    return new (t || MediaSandbox)(i0.ɵɵinject(i1.Store));\n  };\n\n  MediaSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MediaSandbox,\n    factory: MediaSandbox.ɵfac\n  });\n  return MediaSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
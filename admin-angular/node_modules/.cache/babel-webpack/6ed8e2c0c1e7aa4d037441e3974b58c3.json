{"ast":null,"code":"import * as generalsetting from '../generalsetting/generalsetting-action/generalsetting.action';\nimport { getGeneralSettings, getNewGeneralSettings, mode } from './generalsetting-reducer/generalsetting.selector';\nimport { GeneralSettingForm } from './generalsetting-model/generalsetting.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let GeneralSettingSandbox = /*#__PURE__*/(() => {\n  class GeneralSettingSandbox {\n    constructor(appState) {\n      this.appState = appState;\n      this.getNewGeneralSettings$ = this.appState.select(getNewGeneralSettings);\n      this.getGeneralSettings$ = this.appState.select(getGeneralSettings);\n      this.mode$ = this.appState.select(mode);\n      this.subscribedata();\n    } // Create General Setting\n\n\n    createGeneralSetting(value) {\n      this.appState.dispatch(new generalsetting.DoNewGeneralSettingAction(new GeneralSettingForm(value)));\n    } // Get General Setting\n\n\n    getGeneralSetting() {\n      this.appState.dispatch(new generalsetting.DoGetGeneralSettingAction());\n    }\n\n    maintenanceMode(param) {\n      this.appState.dispatch(new generalsetting.MaintenanceModeAction(param));\n    }\n\n    subscribedata() {\n      this.getNewGeneralSettings$.subscribe(data => {\n        if (data && data.status === 1) {\n          this.getGeneralSetting();\n        }\n      });\n    }\n\n  }\n\n  GeneralSettingSandbox.ɵfac = function GeneralSettingSandbox_Factory(t) {\n    return new (t || GeneralSettingSandbox)(i0.ɵɵinject(i1.Store));\n  };\n\n  GeneralSettingSandbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GeneralSettingSandbox,\n    factory: GeneralSettingSandbox.ɵfac\n  });\n  return GeneralSettingSandbox;\n})();","map":null,"metadata":{},"sourceType":"module"}
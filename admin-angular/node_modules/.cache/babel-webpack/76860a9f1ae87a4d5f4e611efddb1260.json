{"ast":null,"code":"import { createSelector } from 'reselect'; // reducer\n\nimport * as fromAuth from './auth.reducer'; // *************************** PUBLIC API's ****************************\n\n/**\n * Auth store functions\n */\n\nexport const getAuthState = state => state.auth;\nexport const getLoginSuccessResponse = createSelector(getAuthState, fromAuth.getLoginSuccessResponse);\nexport const getLoginRequestLoaded = createSelector(getAuthState, fromAuth.getLoginRequestLoaded);\nexport const getLoginRequestLoading = createSelector(getAuthState, fromAuth.getLoginRequestLoading);\nexport const getLoginRequestFailed = createSelector(getAuthState, fromAuth.getLoginRequestFailed);\nexport const getForgotPasswordResponse = createSelector(getAuthState, fromAuth.getForgotPasswordResponse);\nexport const getForgotPasswordRequestLoaded = createSelector(getAuthState, fromAuth.getForgotPasswordRequestLoaded);\nexport const getForgotPasswordRequestLoading = createSelector(getAuthState, fromAuth.getForgotPasswordRequestLoading);\nexport const getForgotPasswordRequestFailed = createSelector(getAuthState, fromAuth.getForgotPasswordRequestFailed);\nexport const setpassword = createSelector(getAuthState, fromAuth.setpassword);\nexport const setpasswordLoading = createSelector(getAuthState, fromAuth.setpasswordLoading);\nexport const setpasswordLoaded = createSelector(getAuthState, fromAuth.setpasswordLoaded);\nexport const gettoken = createSelector(getAuthState, fromAuth.gettoken);\nexport const gettokenLoading = createSelector(getAuthState, fromAuth.gettokenLoading);\nexport const gettokenLoaded = createSelector(getAuthState, fromAuth.gettokenLoaded);\nexport const gettokenFailed = createSelector(getAuthState, fromAuth.gettokenFailed);","map":null,"metadata":{},"sourceType":"module"}
{"version":3,"file":"box-chart.component.d.ts","sources":["box-chart.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef } from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { ColorHelper } from '../common/color.helper';\nimport { BoxChartMultiSeries, BoxChartSeries, IBoxModel, StringOrNumberOrDate } from '../models/chart-data.model';\nimport { ScaleLinear, ScaleBand } from 'd3-scale';\nimport { ViewDimensions } from '../common/types/view-dimension.interface';\nimport { LegendPosition, LegendOptions } from '../common/types/legend.model';\nexport declare class BoxChartComponent extends BaseChartComponent {\n    /** Show or hide the legend. */\n    legend: boolean;\n    legendPosition: LegendPosition;\n    legendTitle: string;\n    /** I think it is better to handle legend options as single Input object of type ILegendOptions */\n    legendOptionsConfig: LegendOptions;\n    showGridLines: boolean;\n    xAxis: boolean;\n    yAxis: boolean;\n    showXAxisLabel: boolean;\n    showYAxisLabel: boolean;\n    roundDomains: boolean;\n    xAxisLabel: string;\n    yAxisLabel: string;\n    roundEdges: boolean;\n    strokeColor: string;\n    strokeWidth: number;\n    tooltipDisabled: boolean;\n    gradient: boolean;\n    select: EventEmitter<IBoxModel>;\n    activate: EventEmitter<IBoxModel>;\n    deactivate: EventEmitter<IBoxModel>;\n    tooltipTemplate: TemplateRef<any>;\n    /** Input Data, this came from Base Chart Component. */\n    results: BoxChartMultiSeries;\n    /** Chart Dimensions, this came from Base Chart Component. */\n    dims: ViewDimensions;\n    /** Color data. */\n    colors: ColorHelper;\n    /** Transform string css attribute for the chart container */\n    transform: string;\n    /** Chart Margins (For each side, counterclock wise). */\n    margin: [number, number, number, number];\n    /** Legend Options object to handle positioning, title, colors and domain. */\n    legendOptions: LegendOptions;\n    xScale: ScaleBand<string>;\n    yScale: ScaleLinear<number, number>;\n    xDomain: StringOrNumberOrDate[];\n    yDomain: number[];\n    seriesDomain: string[];\n    /** Chart X axis dimension. */\n    xAxisHeight: number;\n    /** Chart Y axis dimension. */\n    yAxisWidth: number;\n    trackBy(index: number, item: BoxChartSeries): StringOrNumberOrDate;\n    update(): void;\n    setColors(): void;\n    setScales(): void;\n    getXScale(domain: Array<string | number | Date>, width: number): ScaleBand<string>;\n    getYScale(domain: number[], height: number): ScaleLinear<number, number>;\n    getUniqueBoxChartXDomainValues(results: BoxChartMultiSeries): (string | number | Date)[];\n    getXDomain(): Array<string | number | Date>;\n    getYDomain(): number[];\n    getSeriesDomain(): string[];\n    updateYAxisWidth({ width }: {\n        width: any;\n    }): void;\n    updateXAxisHeight({ height }: {\n        height: any;\n    }): void;\n    onClick(data: IBoxModel): void;\n    onActivate(data: IBoxModel): void;\n    onDeactivate(data: IBoxModel): void;\n    private getLegendOptions;\n}\n"]}
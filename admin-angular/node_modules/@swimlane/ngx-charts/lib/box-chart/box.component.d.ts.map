{"version":3,"file":"box.component.d.ts","sources":["box.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { EventEmitter, ElementRef, SimpleChanges, OnChanges, ChangeDetectorRef } from '@angular/core';\nimport { BaseType } from 'd3-selection';\nimport { IBoxModel } from '../models/chart-data.model';\nimport { IVector2D } from '../models/coordinates.model';\nimport { BarOrientation } from '../common/types/bar-orientation.enum';\nimport { Gradient } from '../common/types/gradient.interface';\ndeclare type LineCoordinates = [IVector2D, IVector2D, IVector2D, IVector2D];\nexport declare class BoxComponent implements OnChanges {\n    protected cd: ChangeDetectorRef;\n    strokeColor: string;\n    strokeWidth: number;\n    fill: string;\n    data: IBoxModel;\n    width: number;\n    height: number;\n    x: number;\n    y: number;\n    lineCoordinates: LineCoordinates;\n    roundEdges: boolean;\n    gradient: boolean;\n    gradientStops: Gradient[];\n    offset: number;\n    isActive: boolean;\n    animations: boolean;\n    ariaLabel: string;\n    noBarWhenZero: boolean;\n    select: EventEmitter<IBoxModel>;\n    activate: EventEmitter<IBoxModel>;\n    deactivate: EventEmitter<IBoxModel>;\n    BarOrientation: typeof BarOrientation;\n    nativeElm: any;\n    oldPath: string;\n    boxPath: string;\n    oldLineCoordinates: LineCoordinates;\n    gradientId: string;\n    gradientFill: string;\n    initialized: boolean;\n    hasGradient: boolean;\n    hideBar: boolean;\n    /** Mask Path to cut the line on the box part. */\n    maskLine: string;\n    /** Mask Path Id to keep track of the mask element */\n    maskLineId: string;\n    boxStrokeWidth: number;\n    whiskerStrokeWidth: number;\n    medianLineWidth: number;\n    constructor(element: ElementRef, cd: ChangeDetectorRef);\n    ngOnChanges(changes: SimpleChanges): void;\n    update(): void;\n    loadAnimation(): void;\n    updatePathEl(): void;\n    updateLineEl(): void;\n    /**\n     * See [D3 Selections](https://www.d3indepth.com/selections/)\n     * @param d The joined data.\n     * @param index The index of the element within the selection\n     * @param node The node element (Line).\n     */\n    lineTween(attr: string, d: any, index: number, node: BaseType[] | ArrayLike<BaseType>): any;\n    pathTween(d1: string, precision: number): () => (t: any) => string;\n    getStartingPath(): string;\n    getPath(): string;\n    getStartingLineCoordinates(): LineCoordinates;\n    getRadius(): number;\n    getGradient(): Gradient[];\n    getStartOpacity(): number;\n    get edges(): boolean[];\n    onMouseEnter(): void;\n    onMouseLeave(): void;\n    private checkToHideBar;\n}\nexport {};\n"]}
{"version":3,"file":"angular-plotly.js.js","sources":["../../../projects/plotly/src/lib/plotly.service.ts","../../../projects/plotly/src/lib/plotly.component.ts","../../../projects/plotly/src/lib/plotly-shared.module.ts","../../../projects/plotly/src/lib/plotly.module.ts","../../../projects/plotly/src/lib/plotly-via-cdn.module.ts","../../../projects/plotly/src/lib/plotly-via-window.module.ts","../../../projects/plotly/src/public-api.ts","../../../projects/plotly/src/angular-plotly.js.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plotly } from './plotly.interface';\n\ntype PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[] = [];\n    protected static plotly?: any = undefined;\n    protected static moduleName?: PlotlyName = undefined;\n\n    public static setModuleName(moduleName: PlotlyName): void {\n        PlotlyService.moduleName = moduleName;\n    }\n\n    public static getModuleName(): PlotlyName {\n        return PlotlyService.moduleName;\n    }\n\n    public static setPlotly(plotly: any): void {\n        if (typeof plotly === 'object' && typeof plotly.react !== 'function') {\n            throw new Error('Invalid plotly.js version. Please, use any version above 1.40.0');\n        }\n\n        PlotlyService.plotly = plotly;\n    }\n\n    public static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement {\n        const index = PlotlyService.instances.indexOf(instance);\n        if (index === -1) {\n            PlotlyService.instances.push(instance);\n        }\n        return instance;\n    }\n\n    public static remove(div: Plotly.PlotlyHTMLElement): void {\n        const index = PlotlyService.instances.indexOf(div);\n        if (index >= 0) {\n            PlotlyService.instances.splice(index, 1);\n            PlotlyService.plotly.purge(div);\n        }\n    }\n\n    public getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined {\n        for (const instance of PlotlyService.instances) {\n            if (instance && instance.id === id) {\n                return instance;\n            }\n        }\n        return undefined;\n    }\n\n    public async getPlotly(): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n        return this._getPlotly();\n    }\n\n    protected _getPlotly(): any {\n        if (typeof PlotlyService.plotly === 'undefined') {\n            const msg = PlotlyService.moduleName === 'ViaCDN'\n                ? `Error loading Peer dependency plotly.js from CDN url`\n                : `Peer dependency plotly.js isn't installed`;\n\n            throw new Error(msg);\n        }\n\n        return PlotlyService.plotly;\n    }\n\n    protected waitFor(fn: () => boolean): Promise<void> {\n        return new Promise((resolve) => {\n            const localFn = () => {\n                fn() ? resolve() : setTimeout(localFn, 10);\n            };\n\n            localFn();\n        });\n    }\n\n    // tslint:disable max-line-length\n    public async newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any> {\n        await this.waitFor(() => this._getPlotly() !== 'waiting');\n\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this._getPlotly().newPlot(div, obj).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n        }\n\n        return this._getPlotly().newPlot(div, data, layout, config).then(() => PlotlyService.insert(div as any)) as Promise<any>;\n    }\n\n    public plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            if (typeof(this._getPlotly().plot) === 'function') {\n                return this._getPlotly().plot(div, obj) as Promise<any>;\n            } else {\n                // Adds support for Plotly 2.0.0 release candidates\n                return this._getPlotly().newPlot(div, obj) as Promise<any>;\n            }\n        }\n\n        if (typeof(this._getPlotly().plot) === 'function') {\n            return this._getPlotly().plot(div, data, layout, config) as Promise<any>;\n        } else {\n            // Adds support for Plotly 2.0.0 release candidates\n            return this._getPlotly().newPlot(div, data, layout, config) as Promise<any>;\n        }\n    }\n\n    public update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>  {\n        if (frames) {\n            const obj = {data, layout, config, frames};\n            return this._getPlotly().react(div, obj) as Promise<any>;\n        }\n\n        return this._getPlotly().react(div, data, layout, config) as Promise<any>;\n    }\n    // tslint:enable max-line-length\n\n    public resize(div: Plotly.PlotlyHTMLElement): void {\n        return this._getPlotly().Plots.resize(div);\n    }\n}\n","/* tslint:disable component-selector no-output-native no-conflicting-lifecycle */\n\nimport {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChange,\n    SimpleChanges,\n    ViewChild,\n    DoCheck,\n    IterableDiffer,\n    IterableDiffers,\n    KeyValueDiffer,\n    KeyValueDiffers,\n} from '@angular/core';\n\nimport { PlotlyService } from './plotly.service';\nimport { Plotly } from './plotly.interface';\n\n// @dynamic\n@Component({\n    selector: 'plotly-plot',\n    template: `<div #plot [attr.id]=\"divId\" [ngClass]=\"getClassName()\" [ngStyle]=\"style\">\n      <ng-content></ng-content>\n    </div>`,\n    providers: [PlotlyService],\n})\nexport class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    protected defaultClassName = 'js-plotly-plot';\n\n    public plotlyInstance: Plotly.PlotlyHTMLElement;\n    public resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    public layoutDiffer: KeyValueDiffer<string, any>;\n    public dataDiffer: IterableDiffer<Plotly.Data>;\n\n    @ViewChild('plot', { static: true }) plotEl: ElementRef;\n\n    @Input() data?: Plotly.Data[];\n    @Input() layout?: Partial<Plotly.Layout>;\n    @Input() config?: Partial<Plotly.Config>;\n    @Input() frames?: Partial<Plotly.Config>[];\n    @Input() style?: { [key: string]: string };\n\n    @Input() divId?: string;\n    @Input() revision = 0;\n    @Input() className?: string | string[];\n    @Input() debug = false;\n    @Input() useResizeHandler = false;\n\n    @Input() updateOnLayoutChange = true;\n    @Input() updateOnDataChange = true;\n    @Input() updateOnlyWithRevision = false;\n\n    @Output() initialized = new EventEmitter<Plotly.Figure>();\n    @Output() update = new EventEmitter<Plotly.Figure>();\n    @Output() purge = new EventEmitter<Plotly.Figure>();\n    @Output() error = new EventEmitter<Error>();\n\n    @Output() afterExport = new EventEmitter();\n    @Output() afterPlot = new EventEmitter();\n    @Output() animated = new EventEmitter();\n    @Output() animatingFrame = new EventEmitter();\n    @Output() animationInterrupted = new EventEmitter();\n    @Output() autoSize = new EventEmitter();\n    @Output() beforeExport = new EventEmitter();\n    @Output() buttonClicked = new EventEmitter();\n    @Output() click = new EventEmitter();\n    @Output() plotlyClick = new EventEmitter();\n    @Output() clickAnnotation = new EventEmitter();\n    @Output() deselect = new EventEmitter();\n    @Output() doubleClick = new EventEmitter();\n    @Output() framework = new EventEmitter();\n    @Output() hover = new EventEmitter();\n    @Output() legendClick = new EventEmitter();\n    @Output() legendDoubleClick = new EventEmitter();\n    @Output() react = new EventEmitter();\n    @Output() relayout = new EventEmitter();\n    @Output() restyle = new EventEmitter();\n    @Output() redraw = new EventEmitter();\n    @Output() selected = new EventEmitter();\n    @Output() selecting = new EventEmitter();\n    @Output() sliderChange = new EventEmitter();\n    @Output() sliderEnd = new EventEmitter();\n    @Output() sliderStart = new EventEmitter();\n    @Output() transitioning = new EventEmitter();\n    @Output() transitionInterrupted = new EventEmitter();\n    @Output() unhover = new EventEmitter();\n    @Output() relayouting = new EventEmitter();\n    @Output() treemapclick = new EventEmitter();\n    @Output() sunburstclick = new EventEmitter();\n\n    public eventNames = ['afterExport', 'afterPlot', 'animated', 'animatingFrame', 'animationInterrupted', 'autoSize',\n        'beforeExport', 'buttonClicked', 'clickAnnotation', 'deselect', 'doubleClick', 'framework', 'hover',\n        'legendClick', 'legendDoubleClick', 'react', 'relayout', 'restyle', 'redraw', 'selected', 'selecting', 'sliderChange',\n        'sliderEnd', 'sliderStart', 'transitioning', 'transitionInterrupted', 'unhover', 'relayouting', 'treemapclick',\n        'sunburstclick'];\n\n    constructor(\n        public plotly: PlotlyService,\n        public iterableDiffers: IterableDiffers,\n        public keyValueDiffers: KeyValueDiffers,\n    ) { }\n\n    ngOnInit(): void {\n        this.createPlot().then(() => {\n            const figure = this.createFigure();\n            this.initialized.emit(figure);\n        });\n\n        if (this.click.observers.length > 0) {\n            const msg = 'DEPRECATED: Reconsider using `(plotlyClick)` instead of `(click)` to avoid event conflict. '\n                + 'Please check https://github.com/plotly/angular-plotly.js#FAQ';\n            console.error(msg);\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (typeof this.resizeHandler === 'function') {\n            this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n            this.resizeHandler = undefined;\n        }\n\n        const figure = this.createFigure();\n        this.purge.emit(figure);\n        PlotlyService.remove(this.plotlyInstance);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        let shouldUpdate = false;\n\n        const revision: SimpleChange = changes.revision;\n        if (revision && !revision.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        const debug: SimpleChange = changes.debug;\n        if (debug && !debug.isFirstChange()) {\n            shouldUpdate = true;\n        }\n\n        if (shouldUpdate) {\n            this.updatePlot();\n        }\n\n        this.updateWindowResizeHandler();\n    }\n\n    ngDoCheck(): boolean | void {\n        if (this.updateOnlyWithRevision) {\n            return false;\n        }\n\n        let shouldUpdate = false;\n\n        if (this.updateOnLayoutChange) {\n            if (this.layoutDiffer) {\n                const layoutHasDiff = this.layoutDiffer.diff(this.layout);\n                if (layoutHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (this.layout) {\n                this.layoutDiffer = this.keyValueDiffers.find(this.layout).create();\n            } else {\n                this.layoutDiffer = undefined;\n            }\n        }\n\n        if (this.updateOnDataChange) {\n            if (this.dataDiffer) {\n                const dataHasDiff = this.dataDiffer.diff(this.data);\n                if (dataHasDiff) {\n                    shouldUpdate = true;\n                }\n            } else if (Array.isArray(this.data)) {\n                this.dataDiffer = this.iterableDiffers.find(this.data).create(this.dataDifferTrackBy);\n            } else {\n                this.dataDiffer = undefined;\n            }\n        }\n\n        if (shouldUpdate && this.plotlyInstance) {\n            this.updatePlot();\n        }\n    }\n\n    getWindow(): any {\n        return window;\n    }\n\n    getClassName(): string {\n        let classes = [this.defaultClassName];\n\n        if (Array.isArray(this.className)) {\n            classes = classes.concat(this.className);\n        } else if (this.className) {\n            classes.push(this.className);\n        }\n\n        return classes.join(' ');\n    }\n\n    createPlot(): Promise<void> {\n        return this.plotly.newPlot(this.plotEl.nativeElement, this.data, this.layout, this.config, this.frames).then(plotlyInstance => {\n            this.plotlyInstance = plotlyInstance;\n            this.getWindow().gd = this.debug ? plotlyInstance : undefined;\n\n            this.eventNames.forEach(name => {\n                const eventName = `plotly_${name.toLowerCase()}`;\n                plotlyInstance.on(eventName, (data: any) => (this[name] as EventEmitter<void>).emit(data));\n            });\n\n            plotlyInstance.on('plotly_click', (data: any) => {\n                this.click.emit(data);\n                this.plotlyClick.emit(data);\n            });\n\n            this.updateWindowResizeHandler();\n        }, err => {\n            console.error('Error while plotting:', err);\n            this.error.emit(err);\n        });\n    }\n\n    createFigure(): Plotly.Figure {\n        const p: any = this.plotlyInstance;\n        const figure: Plotly.Figure = {\n            data: p.data,\n            layout: p.layout,\n            frames: p._transitionData ? p._transitionData._frames : null\n        };\n\n        return figure;\n    }\n\n    updatePlot(): Promise<any> {\n        if (!this.plotlyInstance) {\n            const error = new Error(`Plotly component wasn't initialized`);\n            this.error.emit(error);\n            throw error;\n        }\n\n        const layout = { ...this.layout };\n\n        return this.plotly.update(this.plotlyInstance, this.data, layout, this.config, this.frames).then(() => {\n            const figure = this.createFigure();\n            this.update.emit(figure);\n        }, err => {\n            console.error('Error while updating plot:', err);\n            this.error.emit(err);\n        });\n    }\n\n    updateWindowResizeHandler(): void {\n        if (this.useResizeHandler) {\n            if (this.resizeHandler === undefined) {\n                this.resizeHandler = () => this.plotly.resize(this.plotlyInstance);\n                this.getWindow().addEventListener('resize', this.resizeHandler as any);\n            }\n        } else {\n            if (typeof this.resizeHandler === 'function') {\n                this.getWindow().removeEventListener('resize', this.resizeHandler as any);\n                this.resizeHandler = undefined;\n            }\n        }\n    }\n\n    dataDifferTrackBy(_: number, item: any): unknown {\n        const obj = Object.assign({}, item, { uid: '' });\n        return JSON.stringify(obj);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlyComponent } from './plotly.component';\n\n\n@NgModule({\n    declarations: [PlotlyComponent],\n    imports: [CommonModule],\n    providers: [PlotlyService],\n    exports: [PlotlyComponent],\n})\nexport class PlotlySharedModule {\n    constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyModule {\n    public static plotlyjs: any = {};\n\n    constructor() {\n        if (!this.isValid()) {\n            const msg = 'Invalid PlotlyJS object. Please check https://github.com/plotly/angular-plotly.js#quick-start'\n                + ' to see how to add PlotlyJS to your project.';\n            throw new Error(msg);\n        }\n\n        PlotlyService.setPlotly(PlotlyModule.plotlyjs);\n    }\n\n    private isValid(): boolean {\n        return PlotlyModule.plotlyjs !== undefined\n            && (typeof PlotlyModule.plotlyjs.plot === 'function'\n                || typeof PlotlyModule.plotlyjs.newPlot === 'function');\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\nexport type PlotlyBundleName = 'basic' | 'cartesian' | 'geo' | 'gl3d' | 'gl2d' | 'mapbox' | 'finance';\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaCDNModule {\n    private static plotlyBundle?: string = null;\n    private static plotlyVersion = 'latest';\n    public static plotlyBundleNames: PlotlyBundleName[] = ['basic', 'cartesian', 'geo', 'gl3d', 'gl2d', 'mapbox', 'finance'];\n\n    constructor(public plotlyService: PlotlyService) {\n        PlotlyService.setModuleName('ViaCDN');\n    }\n\n    public static setPlotlyVersion(version: string): void {\n        const isOk = version === 'latest' || /^\\d\\.\\d{1,2}\\.\\d{1,2}$/.test(version);\n        if (!isOk) {\n            throw new Error(`Invalid plotly version. Please set 'latest' or version number (i.e.: 1.4.3)`);\n        }\n\n        PlotlyViaCDNModule.loadViaCDN();\n        PlotlyViaCDNModule.plotlyVersion = version;\n    }\n\n    public static setPlotlyBundle(bundle: PlotlyBundleName | null): void {\n        const isOk = bundle === null || PlotlyViaCDNModule.plotlyBundleNames.indexOf(bundle) >= 0;\n        if (!isOk) {\n            const names = PlotlyViaCDNModule.plotlyBundleNames.map(n => `\"${n}\"`).join(', ');\n            throw new Error(`Invalid plotly bundle. Please set to null for full or ${names} for a partial bundle.`);\n        }\n\n        PlotlyViaCDNModule.plotlyBundle = bundle;\n    }\n\n    public static loadViaCDN(): void {\n        PlotlyService.setPlotly('waiting');\n\n        const init = () => {\n            const src = PlotlyViaCDNModule.plotlyBundle == null\n                ? `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyVersion}.min.js`\n                : `https://cdn.plot.ly/plotly-${PlotlyViaCDNModule.plotlyBundle}-${PlotlyViaCDNModule.plotlyVersion}.min.js`;\n\n            const script: HTMLScriptElement = document.createElement('script');\n            script.type = 'text/javascript';\n            script.src = src;\n            script.onerror = () => console.error(`Error loading plotly.js library from ${src}`);\n\n            const head: HTMLHeadElement = document.getElementsByTagName('head')[0];\n            head.appendChild(script);\n\n            let counter = 200; // equivalent of 10 seconds...\n\n            const fn = () => {\n                const plotly = (window as any).Plotly;\n                if (plotly) {\n                    PlotlyService.setPlotly(plotly);\n                } else if (counter > 0) {\n                    counter --;\n                    setTimeout(fn, 50);\n                } else {\n                    throw new Error(`Error loading plotly.js library from ${src}. Timeout.`);\n                }\n            };\n\n            fn();\n        };\n\n        setTimeout(init);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PlotlyService } from './plotly.service';\nimport { PlotlySharedModule } from './plotly-shared.module';\n\n\n@NgModule({\n    declarations: [],\n    imports: [CommonModule, PlotlySharedModule],\n    providers: [PlotlyService],\n    exports: [PlotlySharedModule],\n})\nexport class PlotlyViaWindowModule {\n    constructor() {\n        const plotly = (window as any).Plotly;\n\n        if (typeof plotly === 'undefined') {\n            throw new Error(`Plotly object not found on window.`);\n        }\n\n        PlotlyService.setPlotly(plotly);\n    }\n}\n","/*\n * Public API Surface of plotly\n */\n\nexport * from './lib/plotly.module';\nexport * from './lib/plotly-via-cdn.module';\nexport * from './lib/plotly-via-window.module';\nexport * from './lib/plotly-shared.module';\n\nexport * from './lib/plotly.service';\nexport * from './lib/plotly.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}
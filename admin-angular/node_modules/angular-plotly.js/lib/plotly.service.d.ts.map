{"version":3,"file":"plotly.service.d.ts","sources":["plotly.service.d.ts"],"names":[],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA","sourcesContent":["import { Plotly } from './plotly.interface';\ndeclare type PlotlyName = 'Plotly' | 'ViaCDN' | 'ViaWindow';\nexport declare class PlotlyService {\n    protected static instances: Plotly.PlotlyHTMLElement[];\n    protected static plotly?: any;\n    protected static moduleName?: PlotlyName;\n    static setModuleName(moduleName: PlotlyName): void;\n    static getModuleName(): PlotlyName;\n    static setPlotly(plotly: any): void;\n    static insert(instance: Plotly.PlotlyHTMLElement): Plotly.PlotlyHTMLElement;\n    static remove(div: Plotly.PlotlyHTMLElement): void;\n    getInstanceByDivId(id: string): Plotly.PlotlyHTMLElement | undefined;\n    getPlotly(): Promise<any>;\n    protected _getPlotly(): any;\n    protected waitFor(fn: () => boolean): Promise<void>;\n    newPlot(div: HTMLDivElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>;\n    plot(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>;\n    update(div: Plotly.PlotlyHTMLElement, data: Plotly.Data[], layout?: Partial<Plotly.Layout>, config?: Partial<Plotly.Config>, frames?: Partial<Plotly.Config>[]): Promise<any>;\n    resize(div: Plotly.PlotlyHTMLElement): void;\n}\nexport {};\n"]}
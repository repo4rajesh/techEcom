{"version":3,"file":"plotly.component.d.ts","sources":["plotly.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, OnChanges, OnInit, SimpleChanges, DoCheck, IterableDiffer, IterableDiffers, KeyValueDiffer, KeyValueDiffers } from '@angular/core';\nimport { PlotlyService } from './plotly.service';\nimport { Plotly } from './plotly.interface';\nexport declare class PlotlyComponent implements OnInit, OnChanges, OnDestroy, DoCheck {\n    plotly: PlotlyService;\n    iterableDiffers: IterableDiffers;\n    keyValueDiffers: KeyValueDiffers;\n    protected defaultClassName: string;\n    plotlyInstance: Plotly.PlotlyHTMLElement;\n    resizeHandler?: (instance: Plotly.PlotlyHTMLElement) => void;\n    layoutDiffer: KeyValueDiffer<string, any>;\n    dataDiffer: IterableDiffer<Plotly.Data>;\n    plotEl: ElementRef;\n    data?: Plotly.Data[];\n    layout?: Partial<Plotly.Layout>;\n    config?: Partial<Plotly.Config>;\n    frames?: Partial<Plotly.Config>[];\n    style?: {\n        [key: string]: string;\n    };\n    divId?: string;\n    revision: number;\n    className?: string | string[];\n    debug: boolean;\n    useResizeHandler: boolean;\n    updateOnLayoutChange: boolean;\n    updateOnDataChange: boolean;\n    updateOnlyWithRevision: boolean;\n    initialized: EventEmitter<Plotly.Figure>;\n    update: EventEmitter<Plotly.Figure>;\n    purge: EventEmitter<Plotly.Figure>;\n    error: EventEmitter<Error>;\n    afterExport: EventEmitter<any>;\n    afterPlot: EventEmitter<any>;\n    animated: EventEmitter<any>;\n    animatingFrame: EventEmitter<any>;\n    animationInterrupted: EventEmitter<any>;\n    autoSize: EventEmitter<any>;\n    beforeExport: EventEmitter<any>;\n    buttonClicked: EventEmitter<any>;\n    click: EventEmitter<any>;\n    plotlyClick: EventEmitter<any>;\n    clickAnnotation: EventEmitter<any>;\n    deselect: EventEmitter<any>;\n    doubleClick: EventEmitter<any>;\n    framework: EventEmitter<any>;\n    hover: EventEmitter<any>;\n    legendClick: EventEmitter<any>;\n    legendDoubleClick: EventEmitter<any>;\n    react: EventEmitter<any>;\n    relayout: EventEmitter<any>;\n    restyle: EventEmitter<any>;\n    redraw: EventEmitter<any>;\n    selected: EventEmitter<any>;\n    selecting: EventEmitter<any>;\n    sliderChange: EventEmitter<any>;\n    sliderEnd: EventEmitter<any>;\n    sliderStart: EventEmitter<any>;\n    transitioning: EventEmitter<any>;\n    transitionInterrupted: EventEmitter<any>;\n    unhover: EventEmitter<any>;\n    relayouting: EventEmitter<any>;\n    treemapclick: EventEmitter<any>;\n    sunburstclick: EventEmitter<any>;\n    eventNames: string[];\n    constructor(plotly: PlotlyService, iterableDiffers: IterableDiffers, keyValueDiffers: KeyValueDiffers);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngDoCheck(): boolean | void;\n    getWindow(): any;\n    getClassName(): string;\n    createPlot(): Promise<void>;\n    createFigure(): Plotly.Figure;\n    updatePlot(): Promise<any>;\n    updateWindowResizeHandler(): void;\n    dataDifferTrackBy(_: number, item: any): unknown;\n}\n"]}